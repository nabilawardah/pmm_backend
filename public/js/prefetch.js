(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["/js/prefetch"],{

/***/ "./resources/js/helper/prefetch.js":
/*!*****************************************!*\
  !*** ./resources/js/helper/prefetch.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function prefetchPages() {\n  var toPrefetch = new Set();\n  var alreadyPrefetched = new Set(); // Check browser support for native 'prefetch'\n\n  var prefetcher = document.createElement('link');\n  var isSupported = prefetcher.relList && prefetcher.relList.supports && prefetcher.relList.supports('prefetch') && window.IntersectionObserver && 'isIntersecting' in IntersectionObserverEntry.prototype; // Checks if user is on slow connection or has enabled data saver\n\n  var isSlowConnection = navigator.connection && (navigator.connection.saveData || (navigator.connection.effectiveType || '').includes('2g')); // Don't start preloading if user is on a slow connection or not supported\n\n  if (isSlowConnection || !isSupported) return; // Prefetch the given url using native 'prefetch'. Fallback to 'xhr' if not supported\n\n  var prefetch = function prefetch(url) {\n    return new Promise(function (resolve, reject) {\n      var link = document.createElement(\"link\");\n      link.rel = \"prefetch\";\n      link.href = url;\n      link.onload = resolve;\n      link.onerror = reject;\n      document.head.appendChild(link);\n    });\n  }; // Prefetch pages with a timeout\n\n\n  var prefetchWithTimeout = function prefetchWithTimeout(url) {\n    var timer = setTimeout(function () {\n      return stopPreloading();\n    }, 5000);\n    prefetch(url)[\"catch\"](function () {\n      return stopPreloading();\n    })[\"finally\"](function () {\n      return clearTimeout(timer);\n    });\n  };\n\n  var addUrlToQueue = function addUrlToQueue(url) {\n    var processImmediately = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    if (alreadyPrefetched.has(url) || toPrefetch.has(url)) return; // Prevent preloading 3rd party domains\n\n    var origin = window.location.origin;\n    if (url.substring(0, origin.length) !== origin) return; // Prevent current page from preloading\n\n    if (window.location.href === url) return; // Ignore keywords in the array, if matched to the url\n\n    for (var i = 0; i < window.FPConfig.ignoreKeywords.length; i++) {\n      if (url.includes(window.FPConfig.ignoreKeywords[i])) return;\n    } // If max RPS is 0 or is on mouse hover, process immediately (without queue)\n\n\n    if (processImmediately) {\n      prefetchWithTimeout(url);\n      alreadyPrefetched.add(url);\n    } else toPrefetch.add(url);\n  }; // Observe the links in viewport, add url to queue if found intersecting\n\n\n  var linksObserver = new IntersectionObserver(function (entries) {\n    entries.forEach(function (entry) {\n      if (entry.isIntersecting) {\n        var url = entry.target.href;\n        addUrlToQueue(url, !window.FPConfig.maxRPS);\n      }\n    });\n  }); // Queue that process requests based on max RPS (requests per second)\n\n  var startQueue = function startQueue() {\n    return setInterval(function () {\n      Array.from(toPrefetch).slice(0, window.FPConfig.maxRPS).forEach(function (url) {\n        prefetchWithTimeout(url);\n        alreadyPrefetched.add(url);\n        toPrefetch[\"delete\"](url);\n      });\n    }, 1000);\n  };\n\n  var hoverTimer = null; // Add URL to queue on mouse hover, after timeout\n\n  var mouseOverListener = function mouseOverListener(event) {\n    var elm = event.target.closest('a:not(.no-pre)');\n\n    if (elm && elm.href && !alreadyPrefetched.has(elm.href)) {\n      hoverTimer = setTimeout(function () {\n        addUrlToQueue(elm.href, true);\n      }, window.FPConfig.hoverDelay);\n    }\n  }; // Preload on touchstart on mobile\n\n\n  var touchStartListener = function touchStartListener(event) {\n    var elm = event.target.closest('a:not(.no-pre)');\n    if (elm && elm.href && !alreadyPrefetched.has(elm.href)) addUrlToQueue(elm.href, true);\n  }; // Clear timeout on mouse out if not already preloaded\n\n\n  var mouseOutListener = function mouseOutListener(event) {\n    var elm = event.target.closest('a:not(.no-pre)');\n\n    if (elm && elm.href && !alreadyPrefetched.has(elm.href)) {\n      clearTimeout(hoverTimer);\n    }\n  }; // Fallback for requestIdleCallback https://caniuse.com/#search=requestIdleCallback\n\n\n  var requestIdleCallback = window.requestIdleCallback || function (cb) {\n    var start = Date.now();\n    return setTimeout(function () {\n      cb({\n        didTimeout: false,\n        timeRemaining: function timeRemaining() {\n          return Math.max(0, 50 - (Date.now() - start));\n        }\n      });\n    }, 1);\n  }; // Stop preloading in case server is responding slow/errors\n\n\n  var stopPreloading = function stopPreloading() {\n    // Find all links are remove it from observer (viewport)\n    document.querySelectorAll('a:not(.no-pre)').forEach(function (e) {\n      return linksObserver.unobserve(e);\n    }); // Clear pending links in queue\n\n    toPrefetch.clear(); // Remove event listeners for mouse hover and mobile touch\n\n    document.removeEventListener('mouseover', mouseOverListener, true);\n    document.removeEventListener('mouseout', mouseOutListener, true);\n    document.removeEventListener('touchstart', touchStartListener, true);\n  }; // Default options incase options is not set\n\n\n  var defaultOptions = {\n    delay: 0,\n    ignoreKeywords: [],\n    maxRPS: 3,\n    hoverDelay: 50\n  }; // Combine default options with received options to create the new config and set the config in window for easy access\n\n  window.FPConfig = Object.assign(defaultOptions, window.FPConfig); // Start Queue\n\n  startQueue(); // Start preloading links in viewport on idle callback, with a delay\n\n  requestIdleCallback(function () {\n    return setTimeout(function () {\n      return document.querySelectorAll('a:not(.no-pre)').forEach(function (e) {\n        return linksObserver.observe(e);\n      });\n    }, window.FPConfig.delay * 1000);\n  }); // Add event listeners to detect mouse hover and mobile touch\n\n  var listenerOptions = {\n    capture: true,\n    passive: true\n  };\n  document.addEventListener('mouseover', mouseOverListener, listenerOptions);\n  document.addEventListener('mouseout', mouseOutListener, listenerOptions);\n  document.addEventListener('touchstart', touchStartListener, listenerOptions);\n}\n\nprefetchPages();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvanMvaGVscGVyL3ByZWZldGNoLmpzPzM5OWMiXSwibmFtZXMiOlsicHJlZmV0Y2hQYWdlcyIsInRvUHJlZmV0Y2giLCJTZXQiLCJhbHJlYWR5UHJlZmV0Y2hlZCIsInByZWZldGNoZXIiLCJkb2N1bWVudCIsImNyZWF0ZUVsZW1lbnQiLCJpc1N1cHBvcnRlZCIsInJlbExpc3QiLCJzdXBwb3J0cyIsIndpbmRvdyIsIkludGVyc2VjdGlvbk9ic2VydmVyIiwiSW50ZXJzZWN0aW9uT2JzZXJ2ZXJFbnRyeSIsInByb3RvdHlwZSIsImlzU2xvd0Nvbm5lY3Rpb24iLCJuYXZpZ2F0b3IiLCJjb25uZWN0aW9uIiwic2F2ZURhdGEiLCJlZmZlY3RpdmVUeXBlIiwiaW5jbHVkZXMiLCJwcmVmZXRjaCIsInVybCIsIlByb21pc2UiLCJyZXNvbHZlIiwicmVqZWN0IiwibGluayIsInJlbCIsImhyZWYiLCJvbmxvYWQiLCJvbmVycm9yIiwiaGVhZCIsImFwcGVuZENoaWxkIiwicHJlZmV0Y2hXaXRoVGltZW91dCIsInRpbWVyIiwic2V0VGltZW91dCIsInN0b3BQcmVsb2FkaW5nIiwiY2xlYXJUaW1lb3V0IiwiYWRkVXJsVG9RdWV1ZSIsInByb2Nlc3NJbW1lZGlhdGVseSIsImhhcyIsIm9yaWdpbiIsImxvY2F0aW9uIiwic3Vic3RyaW5nIiwibGVuZ3RoIiwiaSIsIkZQQ29uZmlnIiwiaWdub3JlS2V5d29yZHMiLCJhZGQiLCJsaW5rc09ic2VydmVyIiwiZW50cmllcyIsImZvckVhY2giLCJlbnRyeSIsImlzSW50ZXJzZWN0aW5nIiwidGFyZ2V0IiwibWF4UlBTIiwic3RhcnRRdWV1ZSIsInNldEludGVydmFsIiwiQXJyYXkiLCJmcm9tIiwic2xpY2UiLCJob3ZlclRpbWVyIiwibW91c2VPdmVyTGlzdGVuZXIiLCJldmVudCIsImVsbSIsImNsb3Nlc3QiLCJob3ZlckRlbGF5IiwidG91Y2hTdGFydExpc3RlbmVyIiwibW91c2VPdXRMaXN0ZW5lciIsInJlcXVlc3RJZGxlQ2FsbGJhY2siLCJjYiIsInN0YXJ0IiwiRGF0ZSIsIm5vdyIsImRpZFRpbWVvdXQiLCJ0aW1lUmVtYWluaW5nIiwiTWF0aCIsIm1heCIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJlIiwidW5vYnNlcnZlIiwiY2xlYXIiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiZGVmYXVsdE9wdGlvbnMiLCJkZWxheSIsIk9iamVjdCIsImFzc2lnbiIsIm9ic2VydmUiLCJsaXN0ZW5lck9wdGlvbnMiLCJjYXB0dXJlIiwicGFzc2l2ZSIsImFkZEV2ZW50TGlzdGVuZXIiXSwibWFwcGluZ3MiOiJBQUFBLFNBQVNBLGFBQVQsR0FBeUI7QUFDdkIsTUFBTUMsVUFBVSxHQUFHLElBQUlDLEdBQUosRUFBbkI7QUFDQSxNQUFNQyxpQkFBaUIsR0FBRyxJQUFJRCxHQUFKLEVBQTFCLENBRnVCLENBSXZCOztBQUNBLE1BQU1FLFVBQVUsR0FBR0MsUUFBUSxDQUFDQyxhQUFULENBQXVCLE1BQXZCLENBQW5CO0FBQ0EsTUFBTUMsV0FBVyxHQUNmSCxVQUFVLENBQUNJLE9BQVgsSUFDQUosVUFBVSxDQUFDSSxPQUFYLENBQW1CQyxRQURuQixJQUVBTCxVQUFVLENBQUNJLE9BQVgsQ0FBbUJDLFFBQW5CLENBQTRCLFVBQTVCLENBRkEsSUFHQUMsTUFBTSxDQUFDQyxvQkFIUCxJQUlBLG9CQUFvQkMseUJBQXlCLENBQUNDLFNBTGhELENBTnVCLENBYXZCOztBQUNBLE1BQU1DLGdCQUFnQixHQUNwQkMsU0FBUyxDQUFDQyxVQUFWLEtBQXlCRCxTQUFTLENBQUNDLFVBQVYsQ0FBcUJDLFFBQXJCLElBQWlDLENBQUNGLFNBQVMsQ0FBQ0MsVUFBVixDQUFxQkUsYUFBckIsSUFBc0MsRUFBdkMsRUFBMkNDLFFBQTNDLENBQW9ELElBQXBELENBQTFELENBREYsQ0FkdUIsQ0FpQnZCOztBQUNBLE1BQUlMLGdCQUFnQixJQUFJLENBQUNQLFdBQXpCLEVBQXNDLE9BbEJmLENBb0J2Qjs7QUFDQSxNQUFNYSxRQUFRLEdBQUcsU0FBWEEsUUFBVyxDQUFBQyxHQUFHO0FBQUEsV0FDbEIsSUFBSUMsT0FBSixDQUFZLFVBQUNDLE9BQUQsRUFBVUMsTUFBVixFQUFxQjtBQUMvQixVQUFNQyxJQUFJLEdBQUdwQixRQUFRLENBQUNDLGFBQVQsUUFBYjtBQUNBbUIsVUFBSSxDQUFDQyxHQUFMO0FBQ0FELFVBQUksQ0FBQ0UsSUFBTCxHQUFZTixHQUFaO0FBQ0FJLFVBQUksQ0FBQ0csTUFBTCxHQUFjTCxPQUFkO0FBQ0FFLFVBQUksQ0FBQ0ksT0FBTCxHQUFlTCxNQUFmO0FBQ0FuQixjQUFRLENBQUN5QixJQUFULENBQWNDLFdBQWQsQ0FBMEJOLElBQTFCO0FBQ0QsS0FQRCxDQURrQjtBQUFBLEdBQXBCLENBckJ1QixDQStCdkI7OztBQUNBLE1BQU1PLG1CQUFtQixHQUFHLFNBQXRCQSxtQkFBc0IsQ0FBQVgsR0FBRyxFQUFJO0FBQ2pDLFFBQU1ZLEtBQUssR0FBR0MsVUFBVSxDQUFDO0FBQUEsYUFBTUMsY0FBYyxFQUFwQjtBQUFBLEtBQUQsRUFBeUIsSUFBekIsQ0FBeEI7QUFDQWYsWUFBUSxDQUFDQyxHQUFELENBQVIsVUFDUztBQUFBLGFBQU1jLGNBQWMsRUFBcEI7QUFBQSxLQURULGFBRVc7QUFBQSxhQUFNQyxZQUFZLENBQUNILEtBQUQsQ0FBbEI7QUFBQSxLQUZYO0FBR0QsR0FMRDs7QUFPQSxNQUFNSSxhQUFhLEdBQUcsU0FBaEJBLGFBQWdCLENBQUNoQixHQUFELEVBQXFDO0FBQUEsUUFBL0JpQixrQkFBK0IsdUVBQVYsS0FBVTtBQUN6RCxRQUFJbkMsaUJBQWlCLENBQUNvQyxHQUFsQixDQUFzQmxCLEdBQXRCLEtBQThCcEIsVUFBVSxDQUFDc0MsR0FBWCxDQUFlbEIsR0FBZixDQUFsQyxFQUF1RCxPQURFLENBR3pEOztBQUNBLFFBQU1tQixNQUFNLEdBQUc5QixNQUFNLENBQUMrQixRQUFQLENBQWdCRCxNQUEvQjtBQUNBLFFBQUluQixHQUFHLENBQUNxQixTQUFKLENBQWMsQ0FBZCxFQUFpQkYsTUFBTSxDQUFDRyxNQUF4QixNQUFvQ0gsTUFBeEMsRUFBZ0QsT0FMUyxDQU96RDs7QUFDQSxRQUFJOUIsTUFBTSxDQUFDK0IsUUFBUCxDQUFnQmQsSUFBaEIsS0FBeUJOLEdBQTdCLEVBQWtDLE9BUnVCLENBVXpEOztBQUNBLFNBQUssSUFBSXVCLENBQUMsR0FBRyxDQUFiLEVBQWdCQSxDQUFDLEdBQUdsQyxNQUFNLENBQUNtQyxRQUFQLENBQWdCQyxjQUFoQixDQUErQkgsTUFBbkQsRUFBMkRDLENBQUMsRUFBNUQsRUFBZ0U7QUFDOUQsVUFBSXZCLEdBQUcsQ0FBQ0YsUUFBSixDQUFhVCxNQUFNLENBQUNtQyxRQUFQLENBQWdCQyxjQUFoQixDQUErQkYsQ0FBL0IsQ0FBYixDQUFKLEVBQXFEO0FBQ3RELEtBYndELENBZXpEOzs7QUFDQSxRQUFJTixrQkFBSixFQUF3QjtBQUN0Qk4seUJBQW1CLENBQUNYLEdBQUQsQ0FBbkI7QUFDQWxCLHVCQUFpQixDQUFDNEMsR0FBbEIsQ0FBc0IxQixHQUF0QjtBQUNELEtBSEQsTUFHT3BCLFVBQVUsQ0FBQzhDLEdBQVgsQ0FBZTFCLEdBQWY7QUFDUixHQXBCRCxDQXZDdUIsQ0E2RHZCOzs7QUFDQSxNQUFNMkIsYUFBYSxHQUFHLElBQUlyQyxvQkFBSixDQUF5QixVQUFBc0MsT0FBTyxFQUFJO0FBQ3hEQSxXQUFPLENBQUNDLE9BQVIsQ0FBZ0IsVUFBQUMsS0FBSyxFQUFJO0FBQ3ZCLFVBQUlBLEtBQUssQ0FBQ0MsY0FBVixFQUEwQjtBQUN4QixZQUFNL0IsR0FBRyxHQUFHOEIsS0FBSyxDQUFDRSxNQUFOLENBQWExQixJQUF6QjtBQUNBVSxxQkFBYSxDQUFDaEIsR0FBRCxFQUFNLENBQUNYLE1BQU0sQ0FBQ21DLFFBQVAsQ0FBZ0JTLE1BQXZCLENBQWI7QUFDRDtBQUNGLEtBTEQ7QUFNRCxHQVBxQixDQUF0QixDQTlEdUIsQ0F1RXZCOztBQUNBLE1BQU1DLFVBQVUsR0FBRyxTQUFiQSxVQUFhO0FBQUEsV0FDakJDLFdBQVcsQ0FBQyxZQUFNO0FBQ2hCQyxXQUFLLENBQUNDLElBQU4sQ0FBV3pELFVBQVgsRUFDRzBELEtBREgsQ0FDUyxDQURULEVBQ1lqRCxNQUFNLENBQUNtQyxRQUFQLENBQWdCUyxNQUQ1QixFQUVHSixPQUZILENBRVcsVUFBQTdCLEdBQUcsRUFBSTtBQUNkVywyQkFBbUIsQ0FBQ1gsR0FBRCxDQUFuQjtBQUNBbEIseUJBQWlCLENBQUM0QyxHQUFsQixDQUFzQjFCLEdBQXRCO0FBQ0FwQixrQkFBVSxVQUFWLENBQWtCb0IsR0FBbEI7QUFDRCxPQU5IO0FBT0QsS0FSVSxFQVFSLElBUlEsQ0FETTtBQUFBLEdBQW5COztBQVdBLE1BQUl1QyxVQUFVLEdBQUcsSUFBakIsQ0FuRnVCLENBcUZ2Qjs7QUFDQSxNQUFNQyxpQkFBaUIsR0FBRyxTQUFwQkEsaUJBQW9CLENBQUFDLEtBQUssRUFBSTtBQUNqQyxRQUFNQyxHQUFHLEdBQUdELEtBQUssQ0FBQ1QsTUFBTixDQUFhVyxPQUFiLENBQXFCLGdCQUFyQixDQUFaOztBQUNBLFFBQUlELEdBQUcsSUFBSUEsR0FBRyxDQUFDcEMsSUFBWCxJQUFtQixDQUFDeEIsaUJBQWlCLENBQUNvQyxHQUFsQixDQUFzQndCLEdBQUcsQ0FBQ3BDLElBQTFCLENBQXhCLEVBQXlEO0FBQ3ZEaUMsZ0JBQVUsR0FBRzFCLFVBQVUsQ0FBQyxZQUFNO0FBQzVCRyxxQkFBYSxDQUFDMEIsR0FBRyxDQUFDcEMsSUFBTCxFQUFXLElBQVgsQ0FBYjtBQUNELE9BRnNCLEVBRXBCakIsTUFBTSxDQUFDbUMsUUFBUCxDQUFnQm9CLFVBRkksQ0FBdkI7QUFHRDtBQUNGLEdBUEQsQ0F0RnVCLENBK0Z2Qjs7O0FBQ0EsTUFBTUMsa0JBQWtCLEdBQUcsU0FBckJBLGtCQUFxQixDQUFBSixLQUFLLEVBQUk7QUFDbEMsUUFBTUMsR0FBRyxHQUFHRCxLQUFLLENBQUNULE1BQU4sQ0FBYVcsT0FBYixDQUFxQixnQkFBckIsQ0FBWjtBQUNBLFFBQUlELEdBQUcsSUFBSUEsR0FBRyxDQUFDcEMsSUFBWCxJQUFtQixDQUFDeEIsaUJBQWlCLENBQUNvQyxHQUFsQixDQUFzQndCLEdBQUcsQ0FBQ3BDLElBQTFCLENBQXhCLEVBQXlEVSxhQUFhLENBQUMwQixHQUFHLENBQUNwQyxJQUFMLEVBQVcsSUFBWCxDQUFiO0FBQzFELEdBSEQsQ0FoR3VCLENBcUd2Qjs7O0FBQ0EsTUFBTXdDLGdCQUFnQixHQUFHLFNBQW5CQSxnQkFBbUIsQ0FBQUwsS0FBSyxFQUFJO0FBQ2hDLFFBQU1DLEdBQUcsR0FBR0QsS0FBSyxDQUFDVCxNQUFOLENBQWFXLE9BQWIsQ0FBcUIsZ0JBQXJCLENBQVo7O0FBQ0EsUUFBSUQsR0FBRyxJQUFJQSxHQUFHLENBQUNwQyxJQUFYLElBQW1CLENBQUN4QixpQkFBaUIsQ0FBQ29DLEdBQWxCLENBQXNCd0IsR0FBRyxDQUFDcEMsSUFBMUIsQ0FBeEIsRUFBeUQ7QUFDdkRTLGtCQUFZLENBQUN3QixVQUFELENBQVo7QUFDRDtBQUNGLEdBTEQsQ0F0R3VCLENBNkd2Qjs7O0FBQ0EsTUFBTVEsbUJBQW1CLEdBQ3ZCMUQsTUFBTSxDQUFDMEQsbUJBQVAsSUFDQSxVQUFTQyxFQUFULEVBQWE7QUFDWCxRQUFNQyxLQUFLLEdBQUdDLElBQUksQ0FBQ0MsR0FBTCxFQUFkO0FBQ0EsV0FBT3RDLFVBQVUsQ0FBQyxZQUFXO0FBQzNCbUMsUUFBRSxDQUFDO0FBQ0RJLGtCQUFVLEVBQUUsS0FEWDtBQUVEQyxxQkFBYSxFQUFFLHlCQUFXO0FBQ3hCLGlCQUFPQyxJQUFJLENBQUNDLEdBQUwsQ0FBUyxDQUFULEVBQVksTUFBTUwsSUFBSSxDQUFDQyxHQUFMLEtBQWFGLEtBQW5CLENBQVosQ0FBUDtBQUNEO0FBSkEsT0FBRCxDQUFGO0FBTUQsS0FQZ0IsRUFPZCxDQVBjLENBQWpCO0FBUUQsR0FaSCxDQTlHdUIsQ0E0SHZCOzs7QUFDQSxNQUFNbkMsY0FBYyxHQUFHLFNBQWpCQSxjQUFpQixHQUFNO0FBQzNCO0FBQ0E5QixZQUFRLENBQUN3RSxnQkFBVCxDQUEwQixnQkFBMUIsRUFBNEMzQixPQUE1QyxDQUFvRCxVQUFBNEIsQ0FBQztBQUFBLGFBQUk5QixhQUFhLENBQUMrQixTQUFkLENBQXdCRCxDQUF4QixDQUFKO0FBQUEsS0FBckQsRUFGMkIsQ0FJM0I7O0FBQ0E3RSxjQUFVLENBQUMrRSxLQUFYLEdBTDJCLENBTzNCOztBQUNBM0UsWUFBUSxDQUFDNEUsbUJBQVQsQ0FBNkIsV0FBN0IsRUFBMENwQixpQkFBMUMsRUFBNkQsSUFBN0Q7QUFDQXhELFlBQVEsQ0FBQzRFLG1CQUFULENBQTZCLFVBQTdCLEVBQXlDZCxnQkFBekMsRUFBMkQsSUFBM0Q7QUFDQTlELFlBQVEsQ0FBQzRFLG1CQUFULENBQTZCLFlBQTdCLEVBQTJDZixrQkFBM0MsRUFBK0QsSUFBL0Q7QUFDRCxHQVhELENBN0h1QixDQTBJdkI7OztBQUNBLE1BQU1nQixjQUFjLEdBQUc7QUFDckJDLFNBQUssRUFBRSxDQURjO0FBRXJCckMsa0JBQWMsRUFBRSxFQUZLO0FBR3JCUSxVQUFNLEVBQUUsQ0FIYTtBQUlyQlcsY0FBVSxFQUFFO0FBSlMsR0FBdkIsQ0EzSXVCLENBa0p2Qjs7QUFDQXZELFFBQU0sQ0FBQ21DLFFBQVAsR0FBa0J1QyxNQUFNLENBQUNDLE1BQVAsQ0FBY0gsY0FBZCxFQUE4QnhFLE1BQU0sQ0FBQ21DLFFBQXJDLENBQWxCLENBbkp1QixDQXFKdkI7O0FBQ0FVLFlBQVUsR0F0SmEsQ0F3SnZCOztBQUNBYSxxQkFBbUIsQ0FBQztBQUFBLFdBQ2xCbEMsVUFBVSxDQUNSO0FBQUEsYUFBTTdCLFFBQVEsQ0FBQ3dFLGdCQUFULENBQTBCLGdCQUExQixFQUE0QzNCLE9BQTVDLENBQW9ELFVBQUE0QixDQUFDO0FBQUEsZUFBSTlCLGFBQWEsQ0FBQ3NDLE9BQWQsQ0FBc0JSLENBQXRCLENBQUo7QUFBQSxPQUFyRCxDQUFOO0FBQUEsS0FEUSxFQUVScEUsTUFBTSxDQUFDbUMsUUFBUCxDQUFnQnNDLEtBQWhCLEdBQXdCLElBRmhCLENBRFE7QUFBQSxHQUFELENBQW5CLENBekp1QixDQWdLdkI7O0FBQ0EsTUFBTUksZUFBZSxHQUFHO0FBQUVDLFdBQU8sRUFBRSxJQUFYO0FBQWlCQyxXQUFPLEVBQUU7QUFBMUIsR0FBeEI7QUFDQXBGLFVBQVEsQ0FBQ3FGLGdCQUFULENBQTBCLFdBQTFCLEVBQXVDN0IsaUJBQXZDLEVBQTBEMEIsZUFBMUQ7QUFDQWxGLFVBQVEsQ0FBQ3FGLGdCQUFULENBQTBCLFVBQTFCLEVBQXNDdkIsZ0JBQXRDLEVBQXdEb0IsZUFBeEQ7QUFDQWxGLFVBQVEsQ0FBQ3FGLGdCQUFULENBQTBCLFlBQTFCLEVBQXdDeEIsa0JBQXhDLEVBQTREcUIsZUFBNUQ7QUFDRDs7QUFFRHZGLGFBQWEiLCJmaWxlIjoiLi9yZXNvdXJjZXMvanMvaGVscGVyL3ByZWZldGNoLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gcHJlZmV0Y2hQYWdlcygpIHtcbiAgY29uc3QgdG9QcmVmZXRjaCA9IG5ldyBTZXQoKVxuICBjb25zdCBhbHJlYWR5UHJlZmV0Y2hlZCA9IG5ldyBTZXQoKVxuXG4gIC8vIENoZWNrIGJyb3dzZXIgc3VwcG9ydCBmb3IgbmF0aXZlICdwcmVmZXRjaCdcbiAgY29uc3QgcHJlZmV0Y2hlciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xpbmsnKVxuICBjb25zdCBpc1N1cHBvcnRlZCA9XG4gICAgcHJlZmV0Y2hlci5yZWxMaXN0ICYmXG4gICAgcHJlZmV0Y2hlci5yZWxMaXN0LnN1cHBvcnRzICYmXG4gICAgcHJlZmV0Y2hlci5yZWxMaXN0LnN1cHBvcnRzKCdwcmVmZXRjaCcpICYmXG4gICAgd2luZG93LkludGVyc2VjdGlvbk9ic2VydmVyICYmXG4gICAgJ2lzSW50ZXJzZWN0aW5nJyBpbiBJbnRlcnNlY3Rpb25PYnNlcnZlckVudHJ5LnByb3RvdHlwZVxuXG4gIC8vIENoZWNrcyBpZiB1c2VyIGlzIG9uIHNsb3cgY29ubmVjdGlvbiBvciBoYXMgZW5hYmxlZCBkYXRhIHNhdmVyXG4gIGNvbnN0IGlzU2xvd0Nvbm5lY3Rpb24gPVxuICAgIG5hdmlnYXRvci5jb25uZWN0aW9uICYmIChuYXZpZ2F0b3IuY29ubmVjdGlvbi5zYXZlRGF0YSB8fCAobmF2aWdhdG9yLmNvbm5lY3Rpb24uZWZmZWN0aXZlVHlwZSB8fCAnJykuaW5jbHVkZXMoJzJnJykpXG5cbiAgLy8gRG9uJ3Qgc3RhcnQgcHJlbG9hZGluZyBpZiB1c2VyIGlzIG9uIGEgc2xvdyBjb25uZWN0aW9uIG9yIG5vdCBzdXBwb3J0ZWRcbiAgaWYgKGlzU2xvd0Nvbm5lY3Rpb24gfHwgIWlzU3VwcG9ydGVkKSByZXR1cm5cblxuICAvLyBQcmVmZXRjaCB0aGUgZ2l2ZW4gdXJsIHVzaW5nIG5hdGl2ZSAncHJlZmV0Y2gnLiBGYWxsYmFjayB0byAneGhyJyBpZiBub3Qgc3VwcG9ydGVkXG4gIGNvbnN0IHByZWZldGNoID0gdXJsID0+XG4gICAgbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgY29uc3QgbGluayA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoYGxpbmtgKVxuICAgICAgbGluay5yZWwgPSBgcHJlZmV0Y2hgXG4gICAgICBsaW5rLmhyZWYgPSB1cmxcbiAgICAgIGxpbmsub25sb2FkID0gcmVzb2x2ZVxuICAgICAgbGluay5vbmVycm9yID0gcmVqZWN0XG4gICAgICBkb2N1bWVudC5oZWFkLmFwcGVuZENoaWxkKGxpbmspXG4gICAgfSlcblxuICAvLyBQcmVmZXRjaCBwYWdlcyB3aXRoIGEgdGltZW91dFxuICBjb25zdCBwcmVmZXRjaFdpdGhUaW1lb3V0ID0gdXJsID0+IHtcbiAgICBjb25zdCB0aW1lciA9IHNldFRpbWVvdXQoKCkgPT4gc3RvcFByZWxvYWRpbmcoKSwgNTAwMClcbiAgICBwcmVmZXRjaCh1cmwpXG4gICAgICAuY2F0Y2goKCkgPT4gc3RvcFByZWxvYWRpbmcoKSlcbiAgICAgIC5maW5hbGx5KCgpID0+IGNsZWFyVGltZW91dCh0aW1lcikpXG4gIH1cblxuICBjb25zdCBhZGRVcmxUb1F1ZXVlID0gKHVybCwgcHJvY2Vzc0ltbWVkaWF0ZWx5ID0gZmFsc2UpID0+IHtcbiAgICBpZiAoYWxyZWFkeVByZWZldGNoZWQuaGFzKHVybCkgfHwgdG9QcmVmZXRjaC5oYXModXJsKSkgcmV0dXJuXG5cbiAgICAvLyBQcmV2ZW50IHByZWxvYWRpbmcgM3JkIHBhcnR5IGRvbWFpbnNcbiAgICBjb25zdCBvcmlnaW4gPSB3aW5kb3cubG9jYXRpb24ub3JpZ2luXG4gICAgaWYgKHVybC5zdWJzdHJpbmcoMCwgb3JpZ2luLmxlbmd0aCkgIT09IG9yaWdpbikgcmV0dXJuXG5cbiAgICAvLyBQcmV2ZW50IGN1cnJlbnQgcGFnZSBmcm9tIHByZWxvYWRpbmdcbiAgICBpZiAod2luZG93LmxvY2F0aW9uLmhyZWYgPT09IHVybCkgcmV0dXJuXG5cbiAgICAvLyBJZ25vcmUga2V5d29yZHMgaW4gdGhlIGFycmF5LCBpZiBtYXRjaGVkIHRvIHRoZSB1cmxcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHdpbmRvdy5GUENvbmZpZy5pZ25vcmVLZXl3b3Jkcy5sZW5ndGg7IGkrKykge1xuICAgICAgaWYgKHVybC5pbmNsdWRlcyh3aW5kb3cuRlBDb25maWcuaWdub3JlS2V5d29yZHNbaV0pKSByZXR1cm5cbiAgICB9XG5cbiAgICAvLyBJZiBtYXggUlBTIGlzIDAgb3IgaXMgb24gbW91c2UgaG92ZXIsIHByb2Nlc3MgaW1tZWRpYXRlbHkgKHdpdGhvdXQgcXVldWUpXG4gICAgaWYgKHByb2Nlc3NJbW1lZGlhdGVseSkge1xuICAgICAgcHJlZmV0Y2hXaXRoVGltZW91dCh1cmwpXG4gICAgICBhbHJlYWR5UHJlZmV0Y2hlZC5hZGQodXJsKVxuICAgIH0gZWxzZSB0b1ByZWZldGNoLmFkZCh1cmwpXG4gIH1cblxuICAvLyBPYnNlcnZlIHRoZSBsaW5rcyBpbiB2aWV3cG9ydCwgYWRkIHVybCB0byBxdWV1ZSBpZiBmb3VuZCBpbnRlcnNlY3RpbmdcbiAgY29uc3QgbGlua3NPYnNlcnZlciA9IG5ldyBJbnRlcnNlY3Rpb25PYnNlcnZlcihlbnRyaWVzID0+IHtcbiAgICBlbnRyaWVzLmZvckVhY2goZW50cnkgPT4ge1xuICAgICAgaWYgKGVudHJ5LmlzSW50ZXJzZWN0aW5nKSB7XG4gICAgICAgIGNvbnN0IHVybCA9IGVudHJ5LnRhcmdldC5ocmVmXG4gICAgICAgIGFkZFVybFRvUXVldWUodXJsLCAhd2luZG93LkZQQ29uZmlnLm1heFJQUylcbiAgICAgIH1cbiAgICB9KVxuICB9KVxuXG4gIC8vIFF1ZXVlIHRoYXQgcHJvY2VzcyByZXF1ZXN0cyBiYXNlZCBvbiBtYXggUlBTIChyZXF1ZXN0cyBwZXIgc2Vjb25kKVxuICBjb25zdCBzdGFydFF1ZXVlID0gKCkgPT5cbiAgICBzZXRJbnRlcnZhbCgoKSA9PiB7XG4gICAgICBBcnJheS5mcm9tKHRvUHJlZmV0Y2gpXG4gICAgICAgIC5zbGljZSgwLCB3aW5kb3cuRlBDb25maWcubWF4UlBTKVxuICAgICAgICAuZm9yRWFjaCh1cmwgPT4ge1xuICAgICAgICAgIHByZWZldGNoV2l0aFRpbWVvdXQodXJsKVxuICAgICAgICAgIGFscmVhZHlQcmVmZXRjaGVkLmFkZCh1cmwpXG4gICAgICAgICAgdG9QcmVmZXRjaC5kZWxldGUodXJsKVxuICAgICAgICB9KVxuICAgIH0sIDEwMDApXG5cbiAgbGV0IGhvdmVyVGltZXIgPSBudWxsXG5cbiAgLy8gQWRkIFVSTCB0byBxdWV1ZSBvbiBtb3VzZSBob3ZlciwgYWZ0ZXIgdGltZW91dFxuICBjb25zdCBtb3VzZU92ZXJMaXN0ZW5lciA9IGV2ZW50ID0+IHtcbiAgICBjb25zdCBlbG0gPSBldmVudC50YXJnZXQuY2xvc2VzdCgnYTpub3QoLm5vLXByZSknKVxuICAgIGlmIChlbG0gJiYgZWxtLmhyZWYgJiYgIWFscmVhZHlQcmVmZXRjaGVkLmhhcyhlbG0uaHJlZikpIHtcbiAgICAgIGhvdmVyVGltZXIgPSBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgYWRkVXJsVG9RdWV1ZShlbG0uaHJlZiwgdHJ1ZSlcbiAgICAgIH0sIHdpbmRvdy5GUENvbmZpZy5ob3ZlckRlbGF5KVxuICAgIH1cbiAgfVxuXG4gIC8vIFByZWxvYWQgb24gdG91Y2hzdGFydCBvbiBtb2JpbGVcbiAgY29uc3QgdG91Y2hTdGFydExpc3RlbmVyID0gZXZlbnQgPT4ge1xuICAgIGNvbnN0IGVsbSA9IGV2ZW50LnRhcmdldC5jbG9zZXN0KCdhOm5vdCgubm8tcHJlKScpXG4gICAgaWYgKGVsbSAmJiBlbG0uaHJlZiAmJiAhYWxyZWFkeVByZWZldGNoZWQuaGFzKGVsbS5ocmVmKSkgYWRkVXJsVG9RdWV1ZShlbG0uaHJlZiwgdHJ1ZSlcbiAgfVxuXG4gIC8vIENsZWFyIHRpbWVvdXQgb24gbW91c2Ugb3V0IGlmIG5vdCBhbHJlYWR5IHByZWxvYWRlZFxuICBjb25zdCBtb3VzZU91dExpc3RlbmVyID0gZXZlbnQgPT4ge1xuICAgIGNvbnN0IGVsbSA9IGV2ZW50LnRhcmdldC5jbG9zZXN0KCdhOm5vdCgubm8tcHJlKScpXG4gICAgaWYgKGVsbSAmJiBlbG0uaHJlZiAmJiAhYWxyZWFkeVByZWZldGNoZWQuaGFzKGVsbS5ocmVmKSkge1xuICAgICAgY2xlYXJUaW1lb3V0KGhvdmVyVGltZXIpXG4gICAgfVxuICB9XG5cbiAgLy8gRmFsbGJhY2sgZm9yIHJlcXVlc3RJZGxlQ2FsbGJhY2sgaHR0cHM6Ly9jYW5pdXNlLmNvbS8jc2VhcmNoPXJlcXVlc3RJZGxlQ2FsbGJhY2tcbiAgY29uc3QgcmVxdWVzdElkbGVDYWxsYmFjayA9XG4gICAgd2luZG93LnJlcXVlc3RJZGxlQ2FsbGJhY2sgfHxcbiAgICBmdW5jdGlvbihjYikge1xuICAgICAgY29uc3Qgc3RhcnQgPSBEYXRlLm5vdygpXG4gICAgICByZXR1cm4gc2V0VGltZW91dChmdW5jdGlvbigpIHtcbiAgICAgICAgY2Ioe1xuICAgICAgICAgIGRpZFRpbWVvdXQ6IGZhbHNlLFxuICAgICAgICAgIHRpbWVSZW1haW5pbmc6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgcmV0dXJuIE1hdGgubWF4KDAsIDUwIC0gKERhdGUubm93KCkgLSBzdGFydCkpXG4gICAgICAgICAgfSxcbiAgICAgICAgfSlcbiAgICAgIH0sIDEpXG4gICAgfVxuXG4gIC8vIFN0b3AgcHJlbG9hZGluZyBpbiBjYXNlIHNlcnZlciBpcyByZXNwb25kaW5nIHNsb3cvZXJyb3JzXG4gIGNvbnN0IHN0b3BQcmVsb2FkaW5nID0gKCkgPT4ge1xuICAgIC8vIEZpbmQgYWxsIGxpbmtzIGFyZSByZW1vdmUgaXQgZnJvbSBvYnNlcnZlciAodmlld3BvcnQpXG4gICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnYTpub3QoLm5vLXByZSknKS5mb3JFYWNoKGUgPT4gbGlua3NPYnNlcnZlci51bm9ic2VydmUoZSkpXG5cbiAgICAvLyBDbGVhciBwZW5kaW5nIGxpbmtzIGluIHF1ZXVlXG4gICAgdG9QcmVmZXRjaC5jbGVhcigpXG5cbiAgICAvLyBSZW1vdmUgZXZlbnQgbGlzdGVuZXJzIGZvciBtb3VzZSBob3ZlciBhbmQgbW9iaWxlIHRvdWNoXG4gICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcignbW91c2VvdmVyJywgbW91c2VPdmVyTGlzdGVuZXIsIHRydWUpXG4gICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcignbW91c2VvdXQnLCBtb3VzZU91dExpc3RlbmVyLCB0cnVlKVxuICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3RvdWNoc3RhcnQnLCB0b3VjaFN0YXJ0TGlzdGVuZXIsIHRydWUpXG4gIH1cblxuICAvLyBEZWZhdWx0IG9wdGlvbnMgaW5jYXNlIG9wdGlvbnMgaXMgbm90IHNldFxuICBjb25zdCBkZWZhdWx0T3B0aW9ucyA9IHtcbiAgICBkZWxheTogMCxcbiAgICBpZ25vcmVLZXl3b3JkczogW10sXG4gICAgbWF4UlBTOiAzLFxuICAgIGhvdmVyRGVsYXk6IDUwLFxuICB9XG5cbiAgLy8gQ29tYmluZSBkZWZhdWx0IG9wdGlvbnMgd2l0aCByZWNlaXZlZCBvcHRpb25zIHRvIGNyZWF0ZSB0aGUgbmV3IGNvbmZpZyBhbmQgc2V0IHRoZSBjb25maWcgaW4gd2luZG93IGZvciBlYXN5IGFjY2Vzc1xuICB3aW5kb3cuRlBDb25maWcgPSBPYmplY3QuYXNzaWduKGRlZmF1bHRPcHRpb25zLCB3aW5kb3cuRlBDb25maWcpXG5cbiAgLy8gU3RhcnQgUXVldWVcbiAgc3RhcnRRdWV1ZSgpXG5cbiAgLy8gU3RhcnQgcHJlbG9hZGluZyBsaW5rcyBpbiB2aWV3cG9ydCBvbiBpZGxlIGNhbGxiYWNrLCB3aXRoIGEgZGVsYXlcbiAgcmVxdWVzdElkbGVDYWxsYmFjaygoKSA9PlxuICAgIHNldFRpbWVvdXQoXG4gICAgICAoKSA9PiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCdhOm5vdCgubm8tcHJlKScpLmZvckVhY2goZSA9PiBsaW5rc09ic2VydmVyLm9ic2VydmUoZSkpLFxuICAgICAgd2luZG93LkZQQ29uZmlnLmRlbGF5ICogMTAwMFxuICAgIClcbiAgKVxuXG4gIC8vIEFkZCBldmVudCBsaXN0ZW5lcnMgdG8gZGV0ZWN0IG1vdXNlIGhvdmVyIGFuZCBtb2JpbGUgdG91Y2hcbiAgY29uc3QgbGlzdGVuZXJPcHRpb25zID0geyBjYXB0dXJlOiB0cnVlLCBwYXNzaXZlOiB0cnVlIH1cbiAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignbW91c2VvdmVyJywgbW91c2VPdmVyTGlzdGVuZXIsIGxpc3RlbmVyT3B0aW9ucylcbiAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignbW91c2VvdXQnLCBtb3VzZU91dExpc3RlbmVyLCBsaXN0ZW5lck9wdGlvbnMpXG4gIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ3RvdWNoc3RhcnQnLCB0b3VjaFN0YXJ0TGlzdGVuZXIsIGxpc3RlbmVyT3B0aW9ucylcbn1cblxucHJlZmV0Y2hQYWdlcygpXG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./resources/js/helper/prefetch.js\n");

/***/ }),

/***/ 1:
/*!***********************************************!*\
  !*** multi ./resources/js/helper/prefetch.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! /Users/herlambang/Code/pmm/resources/js/helper/prefetch.js */"./resources/js/helper/prefetch.js");


/***/ })

},[[1,"/js/manifest"]]]);