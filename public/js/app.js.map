{"version":3,"sources":["webpack:///./node_modules/datatables.net-fixedcolumns/js/dataTables.fixedColumns.js","webpack:///./node_modules/process/browser.js","webpack:///./resources/js/bootstrap.js","webpack:///./node_modules/is-buffer/index.js","webpack:///./node_modules/datatables.net/js/jquery.dataTables.js","webpack:///./node_modules/lodash/lodash.js","webpack:///./resources/js/class/User.js","webpack:///./resources/js/components/input-field.js","webpack:///./resources/js/components/modals.js","webpack:///./resources/js/components/image-container.js","webpack:///./resources/js/datatables/users.js","webpack:///./resources/js/components/datatable-searchbox.js","webpack:///./resources/js/components/button-spinner.js","webpack:///(webpack)/buildin/module.js","webpack:///./resources/js/app.js","webpack:///./node_modules/datatables.net-bs4/js/dataTables.bootstrap4.js","webpack:///(webpack)/buildin/global.js"],"names":["$","window","document","undefined","_firefoxScroll","DataTable","fn","dataTable","FixedColumns","dt","init","that","this","camelToHungarian","defaults","dtSettings","Api","settings","s","aoColumns","length","rtl","nTable","css","dom","_oFixedColumns","_bInitComplete","_fnConstruct","oApi","_fnCallbackReg","alert","extend","prototype","_fnDraw","_fnColCalc","_fnGridLayout","fnUpdate","nTr","_DTTC_iHeight","style","height","nTarget","iHeight","node","idx","inst","oInstance","parents","nodeName","toLowerCase","index","fnGetPosition","nTBody","colIdx","parentNode","_fnVisibleToColumnIndex","fnToFixedNode","rowIdx","found","iLeftColumns","clone","left","body","find","iRightColumns","right","cell","oInit","fnVersionCheck","oScroll","sX","mouseController","classes","oClasses","grid","sScrollWrapper","scroller","sScrollBody","_fnGridSetup","mouseDown","nTableWrapper","on","e","button","one","originalEvent","liner","scrollTop","wheelType","createElement","xDelta","type","deltaX","wheelDeltaX","scrollLeft","call","bFirstDraw","jqTable","column","vis","recalc","indexes","namespace","off","wrapper","remove","fnDraw","_fnLog","VERSION","iLeftWidth","iRightWidth","aiInnerWidths","aiOuterWidths","each","i","col","border","th","nTh","filter","iWidth","outerWidth","indexOf","parseInt","push","width","iTableColumns","block","oOverflow","_fnDTOverflow","header","nTHead","position","nSWrapper","nLeft","childNodes","nRight","insertBefore","appendChild","head","bar","headBlock","footBlock","nTFoot","footer","foot","oGrid","iBodyHeight","offsetHeight","iFullHeight","scrollbarAdjust","_firefoxScrollError","paddingRight","boxSizing","x","top","maxHeight","y","display","nTableScrollBody","out","iBarWidth","offsetWidth","clientWidth","clientHeight","bAll","_fnCloneLeft","_fnCloneRight","fnDrawCallback","trigger","aiColumns","bVisible","_fnClone","aoOriginal","events","aReturn","aClones","aCloned","iLen","aRow","j","jLen","inArray","iCloned","nClone","unique","oClone","iColumn","iIndex","aoCloneLayout","jqCloneThead","aoFixedHeader","className","_fnCopyLayout","aoHeader","empty","_fnDrawHead","_fnDetectHeader","_fnEqualiseHeights","sHeightMatch","paddingBottom","marginBottom","getAttribute","removeAttribute","nBody","aiDisplay","nInnerThead","innerHTML","oStyle","paddingTop","borderTopWidth","borderBottomWidth","z","oFeatures","bServerSide","_iDisplayStart","aTds","aoData","anCells","children","n","cloneNode","setAttribute","html","margin","padding","oScroller","scrollerForcer","force","forcer","removeChild","aoFooter","jqCloneTfoot","aoCurrFooter","anUnique","_fnGetUniqueThs","nIn","aOut","toUpperCase","original","iHeightOriginal","iHeightClone","rootOriginal","getElementsByTagName","rootClone","jqBoxHack","anOriginal","outerHeight","_fnGetTrNodes","anClone","heights","test","overflow","appendTo","version","register","iterator","ctx","fnRedrawLayout","fnRecalculateHeight","row","rows","page","columnIdx","rowClonedIdx","parent","columns","flatten","context","columnVisible","registerPlural","fixedColumns","opts","factory","cachedSetTimeout","cachedClearTimeout","process","module","exports","defaultSetTimout","Error","defaultClearTimeout","runTimeout","fun","setTimeout","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","concat","drainQueue","timeout","len","run","marker","runClearTimeout","Item","array","noop","nextTick","args","Array","arguments","apply","title","browser","env","argv","versions","addListener","once","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","name","binding","cwd","chdir","dir","umask","_","require","origAppend","append","axios","headers","common","obj","constructor","isBuffer","_ext","_Api","_api_register","_api_registerPlural","options","sSelector","oOpts","api","data","traditional","_fnSettingsFromNode","iApiIndex","fnAddData","redraw","isArray","isPlainObject","add","draw","toArray","fnAdjustColumnSizing","bRedraw","adjust","scroll","sY","_fnScrollDraw","fnClearTable","clear","fnClose","child","hide","fnDeleteRow","target","callback","fnDestroy","destroy","complete","fnFilter","sInput","bRegex","bSmart","bShowGlobal","bCaseInsensitive","search","fnGetData","src","fnGetNodes","iRow","nodes","fnIsOpen","isShown","fnOpen","mHtml","sClass","show","fnPageChange","mAction","fnSetColumnVis","iCol","bShow","visible","fnSettings","fnSort","aaSort","order","fnSortListener","nNode","fnCallback","listener","mData","mRow","bAction","_that","emptyInit","internal","ext","_fnExternApiFunc","_fnExtend","sId","bInitHandedOff","$this","_fnCompatOpts","_fnCompatCols","_fnCamelToHungarian","allSettings","bRetrieve","bDestroy","sTableId","id","splice","_unique","oSettings","models","_fnLanguageCompat","oLanguage","aLengthMenu","iDisplayLength","_fnMap","fnServerParams","fnStateSaveParams","fnStateLoadParams","fnStateLoaded","fnRowCallback","fnCreatedRow","fnHeaderCallback","fnFooterCallback","fnInitComplete","fnPreDrawCallback","rowIdFn","_fnGetObjectDataFn","rowId","_fnBrowserDetect","addClass","sTable","iInitDisplayStart","iDisplayStart","iDeferLoading","bDeferLoading","tmp","_iRecordsDisplay","_iRecordsTotal","sUrl","ajax","dataType","url","success","json","_fnInitialise","error","asStripeClasses","sStripeOdd","sStripeEven","stripeClasses","rowOne","eq","map","el","hasClass","removeClass","join","asDestroyStripes","slice","aoColumnsInit","anThs","nThead","_fnAddColumn","_fnApplyColumnDefs","aoColumnDefs","oDef","_fnColumnOptions","a","sort","features","loadedInit","aaSorting","sorting","asSorting","_fnSortingClasses","bSort","bSorted","aSort","_fnSortFlatten","sortedColumns","val","_fnCallbackFire","_fnSortAria","_fnDataSource","bDeferRender","captions","_captionSide","thead","tbody","tfoot","sNoFooter","aaData","_fnAddData","_fnAddTr","aiDisplayMaster","bInitialised","bStateSave","_fnSaveState","_fnLoadState","_re_dic","_re_new_lines","_re_html","_re_date","_re_escape_regex","RegExp","_re_formatted_numeric","_empty","d","_intVal","integer","isNaN","isFinite","_numToDecimal","num","decimalPoint","_fnEscapeRegex","replace","_isNumber","formatted","strType","parseFloat","_htmlNumeric","_isHtml","_stripHtml","_pluck","prop","prop2","ien","_pluck_order","_range","start","end","_removeEmpty","sorted","last","_areAllUnique","k","again","_fnHungarianMap","o","match","newKey","key","_hungarianMap","user","hungarianKey","charAt","lang","defaultDecimal","sDecimal","_addNumericSort","zeroRecords","sZeroRecords","sEmptyTable","sLoadingRecords","sInfoThousands","sThousands","decimal","util","throttle","freq","timer","frequency","now","Date","escapeRegex","_fnCompatMap","knew","old","sScrollX","scrollX","searchCols","aoSearchCols","oSearch","dataSort","aDataSort","__browser","outer","inner","barWidth","bScrollOversize","bScrollbarLeft","Math","round","offset","bBounding","getBoundingClientRect","oBrowser","_fnReduce","inc","value","isSet","hasOwnProperty","oDefaults","oCol","oColumn","sTitle","aoPreSearchCols","oOptions","sWidthOrig","attr","t","mDataProp","sType","_sManualType","iDataSort","mDataSrc","mRender","attrTest","_bAttrSrc","_setter","rowData","meta","innerData","fnSetData","_fnSetObjectDataFn","_rowReadObject","bSortable","sSortableNone","bAsc","bDesc","sSortingClass","sSortableAsc","sSortingClassJUI","sSortJUIAscAllowed","sSortableDesc","sSortJUIDescAllowed","sSortable","sSortJUI","_fnAdjustColumnSizing","bAutoWidth","_fnCalculateColumnWidths","sWidth","iMatch","aiVis","_fnGetColumns","_fnColumnIndexToVisible","iPos","_fnVisbleColumns","sParam","_fnColumnTypes","jen","ken","detectedType","cache","types","detect","_fnGetCellData","aoColDefs","aoCols","kLen","def","aTargets","targets","aDataIn","anTds","oData","oRow","_aData","aIds","_fnCreateTr","trs","_fnGetRowElements","cells","iDraw","defaultContent","sDefaultContent","cellData","iDrawError","_fnSetCellData","__reArray","__reFn","_fnSplitObjNotation","str","mSource","fetchData","arrayNotation","funcNotation","innerSrc","substring","setData","b","aLast","_fnGetDataMaster","_fnClearTable","_fnDeleteIndex","iTarget","iTargetIndex","_fnInvalidate","cellWrite","firstChild","_aSortData","_aFilterData","cols","_fnRowAttributes","contents","tds","td","objectRead","setter","cellProcess","trim","nextSibling","rowNode","nTrIn","nTd","create","_DT_RowIndex","sCellType","_DT_CellIndex","fnCreatedCell","tr","DT_RowClass","split","__rowc","DT_RowAttr","DT_RowData","_fnBuildHead","createHeader","iTabIndex","_fnSortAttachListener","_fnRenderer","sHeaderTH","sFooterTH","nTf","aoSource","bIncludeHidden","nLocalTr","iRowspan","iColspan","aoLocal","aApplied","iColumns","aPreDraw","anRows","iRowCount","iStripes","oLang","aoOpenRows","bDrawing","fnRecordsDisplay","iDisplayEnd","fnDisplayEnd","_fnProcessingDisplay","bDestroying","_fnAjaxUpdate","iStart","iEnd","iDataIndex","nRow","sStripe","_sRowStripe","sZero","fnRecordsTotal","sRowEmpty","detach","bFiltered","_fnReDraw","holdPosition","bFilter","_fnSort","_fnFilterComplete","oPreviousSearch","_drawHold","_fnAddOptionsHtml","table","holding","insert","sWrapper","nHolding","nTableReinsertBefore","featureNode","cOption","nNewNode","cNext","sAttr","aDom","sDom","sJUIHeader","sJUIFooter","aSplit","substr","bPaginate","bLengthChange","_fnFeatureHtmlLength","_fnFeatureHtmlFilter","bProcessing","_fnFeatureHtmlProcessing","_fnFeatureHtmlTable","bInfo","_fnFeatureHtmlInfo","_fnFeatureHtmlPaginate","feature","aoFeatures","cFeature","fnInit","aanFeatures","replaceWith","aLayout","nCell","l","iColShifted","bUnique","nTrs","fnShiftCol","nHeader","bSortCellsTop","_fnBuildAjax","rbracket","ajaxData","instance","jqXHR","newData","baseAjax","sError","sServerMethod","xhr","thrown","ret","readyState","oAjaxData","fnServerData","sAjaxSource","bAjaxDataGet","_fnAjaxParameters","_fnAjaxUpdateDraw","dataProp","columnSearch","columnCount","preSearch","preColSearch","displayStart","displayLength","_iDisplayLength","param","sSearch","regex","sName","searchable","bSearchable","orderable","legacy","compat","modern","_fnAjaxDataSrc","recordsTotal","recordsFiltered","_fnInitComplete","dataSrc","sAjaxDataProp","tableId","language","previousSearch","input","sFilterInput","f","sFilter","searchFn","searchDelay","jqFilter","sSearchPlaceholder","_fnThrottle","keyCode","ev","activeElement","oInput","iForce","oPrevSearch","aoPrevSearch","fnSaveFilter","oFilter","fnRegex","bEscapeRegex","_fnFilter","_fnFilterColumn","_fnFilterCustom","filters","displayRows","merge","searchStr","smart","caseInsensitive","rpSearch","_fnFilterCreateSearch","invalidated","prevSearch","displayMaster","filtered","_fnFilterData","_sFilterRow","word","m","__filter_div","__filter_div_textContent","textContent","filterData","fomatters","wasInvalidated","toString","innerText","_fnSearchToCamel","_fnSearchToHung","tid","sInfo","aoDrawCallback","_fnUpdateInfo","max","total","sInfoEmpty","sInfoFiltered","_fnInfoMacros","sInfoPostFix","fnInfoCallback","formatter","fnFormatNumber","all","ceil","iAjaxStart","deferLoading","_fnStringToCss","aData","_fnLengthChange","_fnLengthOverflow","menu","d2","lengths","select","sLengthSelect","Option","div","sLength","sLengthMenu","outerHTML","sPaginationType","plugin","pager","sPaging","p","visRecords","pages","buttons","_fnPageChange","action","records","floor","changed","r","sProcessing","scrollY","caption","captionSide","headerClone","footerClone","_div","size","sScrollHead","sScrollHeadInner","sXInner","removeAttr","sScrollFoot","sScrollFootInner","scrollHead","scrollBody","scrollFoot","bCollapse","nScrollHead","nScrollBody","nScrollFoot","headerTrgEls","footerTrgEls","headerSrcEls","footerSrcEls","headerCopy","footerCopy","correction","sanityWidth","scrollXInner","divHeader","divHeaderStyle","divHeaderInner","divHeaderInnerStyle","divHeaderTable","divBodyEl","divBody","divBodyStyle","divFooterInner","divFooterTable","tableEl","tableStyle","ie67","dtHeaderCells","headerWidths","footerWidths","headerContent","footerContent","zeroOut","nSizer","scrollBarVis","scrollHeight","prependTo","_fnApplyToChildren","nToSize","iOuterWidth","bScrolling","an1","an2","nNode1","nNode2","nodeType","__re_html_remove","visibleColumns","headerCells","tableWidthAttr","tableContainer","userInputs","styleWidth","_fnConvertToWidth","tmpTable","_fnGetWidestNode","sContentPadding","holder","bounding","_reszEvt","bindResize","sInstance","_fnGetMaxLenString","maxIdx","srcCol","fixed","aaSortingFixed","fixedObj","nestedSort","pre","post","_idx","sortCol","aiOrig","oExtSort","formatters","_fnSortData","dataA","dataB","label","nextSort","oAria","sSortAscending","sSortDescending","_fnSortListener","nextSortIdx","next","bSortMulti","sortIdx","attachTo","_fnBindAction","shiftKey","oldSort","aLastSort","sortClass","sSortColumn","bSortClasses","customData","customSort","sSortDataType","state","time","oSavedState","fnStateSaveCallback","loaded","abStateLoad","duration","iStateDuration","oLoadedState","fnStateLoadCallback","level","msg","tn","console","log","sErrMode","errMode","mappedName","extender","breakRefs","blur","which","preventDefault","sStore","callbackArr","eventName","reverse","Event","result","renderer","host","__apiStruct","__arrayProto","ctxSettings","mixed","jq","tables","_toSettings","selector","any","count","alwaysNew","items","item","apiInst","_selector_row_indexes","apiSelector","lastIndexOf","pluck","pop","reduce","reduceRight","shift","to$","toJQuery","unshift","scope","__dt_wrapper","struct","methodScoping","struc","methodExt","propExt","method","heir","pluralName","singularName","__table_selector","paging","info","__reload","abort","resetPaging","_selector_run","selectFn","res","selectorType","_selector_opts","_selector_first","displayFiltered","displayFilteredMap","sel","selInt","cellIdx","closest","rowObj","__row_selector","hash","thatIdx","loopRow","loopCells","newRows","modRows","__details_remove","_details","_detailsShow","__details_display","insertAfter","__details_events","drawEvent","_child_obj","klass","addRow","created","colSpan","__details_add","_child_mth","__re_column_selector","__columnData","r1","r2","names","visColumns","jqResult","__column_selector","calc","__setColumnVis","rowSelector","columnSelector","allCells","fnSelector","__cell_selector","internalOpts","cellsNoOpts","selected","set","caseInsen","versionCheck","iThis","iThat","aThis","aThat","isDataTable","fnIsDataTable","get","is","fnTables","jqRows","orig","jqTbody","jqWrapper","removedMethod","sDestroyWidth","arg1","arg2","arg3","arg4","token","plural","resolved","toFormat","JSON","parse","sessionStorage","localStorage","getItem","location","pathname","setItem","stringify","paginate","min","builder","pageButton","oJUIClasses","sVersion","afnFiltering","aTypes","ofnSearch","oSort","afnSortData","oStdClasses","oPagination","extPagination","_numbers","numbers","numbers_length","half","DT_el","simple","full","simple_numbers","full_numbers","first_last_numbers","btnDisplay","btnClass","activeEl","oPaginate","aria","counter","attach","container","tabIndex","disabledClass","sPageButtonDisabled","clickHandler","sFirst","sPrevious","sNext","sLast","sPageButtonActive","sPageButton","focus","parsed","string","__numericReplace","decimalPlace","re1","re2","Infinity","ts","sSortAsc","sSortDesc","jqueryui","sSortJUIWrapper","sSortIcon","sSortJUIAsc","sSortJUIDesc","__htmlEscapeEntities","render","number","thousands","precision","prefix","postfix","negative","flo","toFixed","abs","intPart","floatPart","text","_fnNodeToDataIndex","_fnNodeToColumnIndex","_fnCalculateEnd","dataTableSettings","dataTableExt","LARGE_ARRAY_SIZE","CORE_ERROR_TEXT","FUNC_ERROR_TEXT","HASH_UNDEFINED","MAX_MEMOIZE_SIZE","PLACEHOLDER","CLONE_DEEP_FLAG","CLONE_FLAT_FLAG","CLONE_SYMBOLS_FLAG","COMPARE_PARTIAL_FLAG","COMPARE_UNORDERED_FLAG","WRAP_BIND_FLAG","WRAP_BIND_KEY_FLAG","WRAP_CURRY_BOUND_FLAG","WRAP_CURRY_FLAG","WRAP_CURRY_RIGHT_FLAG","WRAP_PARTIAL_FLAG","WRAP_PARTIAL_RIGHT_FLAG","WRAP_ARY_FLAG","WRAP_REARG_FLAG","WRAP_FLIP_FLAG","DEFAULT_TRUNC_LENGTH","DEFAULT_TRUNC_OMISSION","HOT_COUNT","HOT_SPAN","LAZY_FILTER_FLAG","LAZY_MAP_FLAG","INFINITY","MAX_SAFE_INTEGER","MAX_INTEGER","NAN","MAX_ARRAY_LENGTH","MAX_ARRAY_INDEX","HALF_MAX_ARRAY_LENGTH","wrapFlags","argsTag","arrayTag","asyncTag","boolTag","dateTag","domExcTag","errorTag","funcTag","genTag","mapTag","numberTag","nullTag","objectTag","proxyTag","regexpTag","setTag","stringTag","symbolTag","undefinedTag","weakMapTag","weakSetTag","arrayBufferTag","dataViewTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","reEmptyStringLeading","reEmptyStringMiddle","reEmptyStringTrailing","reEscapedHtml","reUnescapedHtml","reHasEscapedHtml","source","reHasUnescapedHtml","reEscape","reEvaluate","reInterpolate","reIsDeepProp","reIsPlainProp","rePropName","reRegExpChar","reHasRegExpChar","reTrim","reTrimStart","reTrimEnd","reWrapComment","reWrapDetails","reSplitDetails","reAsciiWord","reEscapeChar","reEsTemplate","reFlags","reIsBadHex","reIsBinary","reIsHostCtor","reIsOctal","reIsUint","reLatin","reNoMatch","reUnescapedString","rsComboRange","rsComboMarksRange","rsBreakRange","rsMathOpRange","rsAstral","rsBreak","rsCombo","rsDigits","rsDingbat","rsLower","rsMisc","rsFitz","rsNonAstral","rsRegional","rsSurrPair","rsUpper","rsMiscLower","rsMiscUpper","reOptMod","rsSeq","rsEmoji","rsSymbol","reApos","reComboMark","reUnicode","reUnicodeWord","reHasUnicode","reHasUnicodeWord","contextProps","templateCounter","typedArrayTags","cloneableTags","stringEscapes","freeParseFloat","freeParseInt","freeGlobal","global","Object","freeSelf","self","root","Function","freeExports","freeModule","moduleExports","freeProcess","nodeUtil","nodeIsArrayBuffer","isArrayBuffer","nodeIsDate","isDate","nodeIsMap","isMap","nodeIsRegExp","isRegExp","nodeIsSet","nodeIsTypedArray","isTypedArray","func","thisArg","arrayAggregator","iteratee","accumulator","arrayEach","arrayEachRight","arrayEvery","predicate","arrayFilter","resIndex","arrayIncludes","baseIndexOf","arrayIncludesWith","comparator","arrayMap","arrayPush","values","arrayReduce","initAccum","arrayReduceRight","arraySome","asciiSize","baseProperty","baseFindKey","collection","eachFunc","baseFindIndex","fromIndex","fromRight","strictIndexOf","baseIsNaN","baseIndexOfWith","baseMean","baseSum","object","basePropertyOf","baseReduce","current","baseTimes","baseUnary","baseValues","props","cacheHas","has","charsStartIndex","strSymbols","chrSymbols","charsEndIndex","deburrLetter","escapeHtmlChar","escapeStringChar","chr","hasUnicode","mapToArray","forEach","overArg","transform","arg","replaceHolders","placeholder","setToArray","setToPairs","stringSize","lastIndex","unicodeSize","stringToArray","unicodeToArray","asciiToArray","unescapeHtmlChar","runInContext","uid","pick","String","TypeError","arrayProto","funcProto","objectProto","coreJsData","funcToString","idCounter","maskSrcKey","exec","keys","IE_PROTO","nativeObjectToString","objectCtorString","oldDash","reIsNative","Buffer","Symbol","Uint8Array","allocUnsafe","getPrototype","getPrototypeOf","objectCreate","propertyIsEnumerable","spreadableSymbol","isConcatSpreadable","symIterator","symToStringTag","toStringTag","defineProperty","getNative","ctxClearTimeout","ctxNow","ctxSetTimeout","nativeCeil","nativeFloor","nativeGetSymbols","getOwnPropertySymbols","nativeIsBuffer","nativeIsFinite","nativeJoin","nativeKeys","nativeMax","nativeMin","nativeNow","nativeParseInt","nativeRandom","random","nativeReverse","DataView","Map","Promise","Set","WeakMap","nativeCreate","metaMap","realNames","dataViewCtorString","toSource","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","symbolProto","symbolValueOf","valueOf","symbolToString","lodash","isObjectLike","LazyWrapper","LodashWrapper","wrapperClone","baseCreate","proto","isObject","baseLodash","chainAll","__wrapped__","__actions__","__chain__","__index__","__values__","__dir__","__filtered__","__iteratees__","__takeCount__","__views__","Hash","entries","entry","ListCache","MapCache","SetCache","__data__","Stack","arrayLikeKeys","inherited","isArr","isArg","isArguments","isBuff","isType","skipIndexes","isIndex","arraySample","baseRandom","arraySampleSize","shuffleSelf","copyArray","baseClamp","arrayShuffle","assignMergeValue","baseAssignValue","assignValue","objValue","assocIndexOf","baseAggregator","baseEach","baseAssign","copyObject","baseAt","paths","skip","lower","upper","baseClone","bitmask","customizer","stack","isDeep","isFlat","isFull","initCloneArray","tag","getTag","isFunc","cloneBuffer","initCloneObject","getSymbolsIn","copySymbolsIn","keysIn","baseAssignIn","getSymbols","copySymbols","Ctor","cloneArrayBuffer","dataView","buffer","byteOffset","byteLength","cloneDataView","cloneTypedArray","regexp","cloneRegExp","symbol","initCloneByTag","stacked","subValue","getAllKeysIn","getAllKeys","baseConformsTo","baseDelay","wait","baseDifference","includes","isCommon","valuesLength","computed","valuesIndex","templateSettings","getMapData","pairs","createBaseEach","baseForOwn","baseEachRight","baseForOwnRight","baseEvery","baseExtremum","isSymbol","baseFilter","baseFlatten","depth","isStrict","isFlattenable","baseFor","createBaseFor","baseForRight","baseFunctions","isFunction","baseGet","path","castPath","toKey","baseGetAllKeys","keysFunc","symbolsFunc","baseGetTag","isOwn","unmasked","getRawTag","objectToString","baseGt","other","baseHas","baseHasIn","baseIntersection","arrays","othLength","othIndex","caches","maxLength","seen","baseInvoke","baseIsArguments","baseIsEqual","equalFunc","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","equalArrays","message","convert","isPartial","equalByTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","objProps","objLength","skipCtor","othValue","compared","objCtor","othCtor","equalObjects","baseIsEqualDeep","baseIsMatch","matchData","noCustomizer","srcValue","baseIsNative","baseIteratee","identity","baseMatchesProperty","baseMatches","property","baseKeys","isPrototype","baseKeysIn","nativeKeysIn","isProto","baseLt","baseMap","isArrayLike","getMatchData","matchesStrictComparable","isKey","isStrictComparable","hasIn","baseMerge","srcIndex","mergeFunc","safeGet","newValue","isTyped","isArrayLikeObject","toPlainObject","baseMergeDeep","baseNth","baseOrderBy","iteratees","orders","getIteratee","comparer","baseSortBy","objCriteria","criteria","othCriteria","ordersLength","compareAscending","compareMultiple","basePickBy","baseSet","basePullAll","basePullAt","previous","baseUnset","baseRepeat","baseRest","setToString","overRest","baseSample","baseSampleSize","nested","baseSetData","baseSetToString","constant","baseShuffle","baseSlice","baseSome","baseSortedIndex","retHighest","low","high","mid","baseSortedIndexBy","valIsNaN","valIsNull","valIsSymbol","valIsUndefined","othIsDefined","othIsNull","othIsReflexive","othIsSymbol","setLow","baseSortedUniq","baseToNumber","baseToString","baseUniq","createSet","seenIndex","baseUpdate","updater","baseWhile","isDrop","baseWrapperValue","actions","baseXor","baseZipObject","assignFunc","valsLength","castArrayLikeObject","castFunction","stringToPath","castRest","castSlice","copy","arrayBuffer","typedArray","valIsDefined","valIsReflexive","composeArgs","partials","holders","isCurried","argsIndex","argsLength","holdersLength","leftIndex","leftLength","rangeLength","isUncurried","composeArgsRight","holdersIndex","rightIndex","rightLength","isNew","createAggregator","initializer","createAssigner","assigner","sources","guard","isIterateeCall","iterable","createCaseFirst","methodName","trailing","createCompounder","words","deburr","createCtor","thisBinding","createFind","findIndexFunc","createFlow","flatRest","funcs","prereq","thru","getFuncName","funcName","getData","isLaziable","plant","createHybrid","partialsRight","holdersRight","argPos","ary","arity","isAry","isBind","isBindKey","isFlip","getHolder","holdersCount","countHolders","newHolders","createRecurry","arrLength","oldArray","reorder","createInverter","toIteratee","baseInverter","createMathOperation","operator","defaultValue","createOver","arrayFunc","createPadding","chars","charsLength","createRange","step","toFinite","baseRange","createRelationalOperation","toNumber","wrapFunc","isCurry","setWrapToString","createRound","toInteger","pair","createToPairs","baseToPairs","createWrap","srcBitmask","newBitmask","isCombo","mergeData","createCurry","createPartial","createBind","customDefaultsAssignIn","customDefaultsMerge","customOmitClone","arrValue","otherFunc","getValue","stubArray","hasPath","hasFunc","isLength","ArrayBuffer","resolve","ctorString","isMaskable","stubFalse","otherArgs","shortOut","reference","details","insertWrapDetails","updateWrapDetails","getWrapDetails","lastCalled","stamp","remaining","rand","memoize","memoizeCapped","charCodeAt","quote","subString","difference","differenceBy","differenceWith","findIndex","findLastIndex","intersection","mapped","intersectionBy","intersectionWith","pull","pullAll","pullAt","union","unionBy","unionWith","unzip","group","unzipWith","without","xor","xorBy","xorWith","zip","zipWith","chain","interceptor","wrapperAt","countBy","findLast","forEachRight","groupBy","invokeMap","keyBy","partition","sortBy","before","bind","bindKey","debounce","lastArgs","lastThis","maxWait","timerId","lastCallTime","lastInvokeTime","leading","maxing","invokeFunc","shouldInvoke","timeSinceLastCall","timerExpired","trailingEdge","timeWaiting","remainingWait","debounced","isInvoking","leadingEdge","cancel","flush","defer","delay","resolver","memoized","Cache","negate","overArgs","transforms","funcsLength","partial","partialRight","rearg","gt","gte","isError","isInteger","isNumber","isString","lt","lte","done","iteratorToArray","remainder","toLength","isBinary","assign","assignIn","assignInWith","assignWith","at","propsIndex","propsLength","defaultsDeep","mergeWith","invert","invertBy","invoke","omit","basePick","pickBy","toPairs","toPairsIn","camelCase","capitalize","upperFirst","kebabCase","lowerCase","lowerFirst","snakeCase","startCase","upperCase","pattern","hasUnicodeWord","unicodeWords","asciiWords","attempt","bindAll","methodNames","flow","flowRight","methodOf","mixin","over","overEvery","overSome","basePropertyDeep","range","rangeRight","augend","addend","divide","dividend","divisor","multiply","multiplier","multiplicand","subtract","minuend","subtrahend","after","castArray","chunk","compact","cond","conforms","baseConforms","properties","curry","curryRight","drop","dropRight","dropRightWhile","dropWhile","fill","baseFill","flatMap","flatMapDeep","flatMapDepth","flattenDeep","flattenDepth","flip","fromPairs","functions","functionsIn","initial","mapKeys","mapValues","matches","matchesProperty","nthArg","omitBy","orderBy","propertyOf","pullAllBy","pullAllWith","reject","rest","sampleSize","setWith","shuffle","sortedUniq","sortedUniqBy","separator","limit","spread","tail","take","takeRight","takeRightWhile","takeWhile","tap","toPath","isArrLike","unary","uniq","uniqBy","uniqWith","unset","update","updateWith","valuesIn","wrap","zipObject","zipObjectDeep","entriesIn","extendWith","clamp","cloneDeep","cloneDeepWith","cloneWith","conformsTo","defaultTo","endsWith","escape","escapeRegExp","every","findKey","findLastKey","forIn","forInRight","forOwn","forOwnRight","inRange","baseInRange","isBoolean","isElement","isEmpty","isEqual","isEqualWith","isMatch","isMatchWith","isNative","isNil","isNull","isSafeInteger","isUndefined","isWeakMap","isWeakSet","strictLastIndexOf","maxBy","mean","meanBy","minBy","stubObject","stubString","stubTrue","nth","noConflict","pad","strLength","padEnd","padStart","radix","floating","temp","repeat","sample","some","sortedIndex","sortedIndexBy","sortedIndexOf","sortedLastIndex","sortedLastIndexBy","sortedLastIndexOf","startsWith","sum","sumBy","template","isEscaping","isEvaluating","imports","importsKeys","importsValues","interpolate","reDelimiters","evaluate","sourceURL","escapeValue","interpolateValue","esTemplateValue","evaluateValue","variable","times","toLower","toSafeInteger","toUpper","trimEnd","trimStart","truncate","omission","newEnd","unescape","uniqueId","eachRight","first","isFilter","takeName","dropName","checkIteratee","isTaker","lodashFunc","retUnwrapped","isLazy","useLazy","isHybrid","isUnwrapped","onlyLazy","chainName","isRight","view","getView","iterLength","takeCount","iterIndex","commit","wrapped","toJSON","User","initialData","email","phone","division","working_area","generateInputField","removeModal","generateUserProfileDetail","photo","withActionBar","actionBar","modal","generateBaseModal","divisi","field","sudoSearchField","searchField","clearButton","serverSide","processing","admin","role","profilePicture","fullData","pageLength","getUserData","webpackPolyfill","deprecate","enumerable","bootstrap","currentTarget","g"],"mappings":"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","file":"/js/app.js","sourcesContent":["/*! FixedColumns 3.8.0\n * ©2010-2018 SpryMedia Ltd - datatables.net/license\n */\n\n/**\n * @summary     FixedColumns\n * @description Freeze columns in place on a scrolling DataTable\n * @version     3.8.0\n * @file        dataTables.fixedColumns.js\n * @author      SpryMedia Ltd (www.sprymedia.co.uk)\n * @contact     www.sprymedia.co.uk/contact\n * @copyright   Copyright 2010-2018 SpryMedia Ltd.\n *\n * This source file is free software, available under the following license:\n *   MIT license - http://datatables.net/license/mit\n *\n * This source file is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n * or FITNESS FOR A PARTICULAR PURPOSE. See the license files for details.\n *\n * For details please refer to: http://www.datatables.net\n */\n(function( factory ){\n\tif ( typeof define === 'function' && define.amd ) {\n\t\t// AMD\n\t\tdefine( ['jquery', 'datatables.net'], function ( $ ) {\n\t\t\treturn factory( $, window, document );\n\t\t} );\n\t}\n\telse if ( typeof exports === 'object' ) {\n\t\t// CommonJS\n\t\tmodule.exports = function (root, $) {\n\t\t\tif ( ! root ) {\n\t\t\t\troot = window;\n\t\t\t}\n\n\t\t\tif ( ! $ || ! $.fn.dataTable ) {\n\t\t\t\t$ = require('datatables.net')(root, $).$;\n\t\t\t}\n\n\t\t\treturn factory( $, root, root.document );\n\t\t};\n\t}\n\telse {\n\t\t// Browser\n\t\tfactory( jQuery, window, document );\n\t}\n}(function( $, window, document, undefined ) {\n'use strict';\nvar DataTable = $.fn.dataTable;\nvar _firefoxScroll;\n\n/**\n * When making use of DataTables' x-axis scrolling feature, you may wish to\n * fix the left most column in place. This plug-in for DataTables provides\n * exactly this option (note for non-scrolling tables, please use the\n * FixedHeader plug-in, which can fix headers and footers). Key\n * features include:\n *\n * * Freezes the left or right most columns to the side of the table\n * * Option to freeze two or more columns\n * * Full integration with DataTables' scrolling options\n * * Speed - FixedColumns is fast in its operation\n *\n *  @class\n *  @constructor\n *  @global\n *  @param {object} dt DataTables instance. With DataTables 1.10 this can also\n *    be a jQuery collection, a jQuery selector, DataTables API instance or\n *    settings object.\n *  @param {object} [init={}] Configuration object for FixedColumns. Options are\n *    defined by {@link FixedColumns.defaults}\n *\n *  @requires jQuery 1.7+\n *  @requires DataTables 1.8.0+\n *\n *  @example\n *      var table = $('#example').dataTable( {\n *        \"scrollX\": \"100%\"\n *      } );\n *      new $.fn.dataTable.fixedColumns( table );\n */\nvar FixedColumns = function ( dt, init ) {\n\tvar that = this;\n\n\t/* Sanity check - you just know it will happen */\n\tif ( ! ( this instanceof FixedColumns ) ) {\n\t\talert( \"FixedColumns warning: FixedColumns must be initialised with the 'new' keyword.\" );\n\t\treturn;\n\t}\n\n\tif ( init === undefined || init === true ) {\n\t\tinit = {};\n\t}\n\n\t// Use the DataTables Hungarian notation mapping method, if it exists to\n\t// provide forwards compatibility for camel case variables\n\tvar camelToHungarian = $.fn.dataTable.camelToHungarian;\n\tif ( camelToHungarian ) {\n\t\tcamelToHungarian( FixedColumns.defaults, FixedColumns.defaults, true );\n\t\tcamelToHungarian( FixedColumns.defaults, init );\n\t}\n\n\t// v1.10 allows the settings object to be got form a number of sources\n\tvar dtSettings = new $.fn.dataTable.Api( dt ).settings()[0];\n\n\t/**\n\t * Settings object which contains customisable information for FixedColumns instance\n\t * @namespace\n\t * @extends FixedColumns.defaults\n\t * @private\n\t */\n\tthis.s = {\n\t\t/**\n\t\t * DataTables settings objects\n\t\t *  @type     object\n\t\t *  @default  Obtained from DataTables instance\n\t\t */\n\t\t\"dt\": dtSettings,\n\n\t\t/**\n\t\t * Number of columns in the DataTable - stored for quick access\n\t\t *  @type     int\n\t\t *  @default  Obtained from DataTables instance\n\t\t */\n\t\t\"iTableColumns\": dtSettings.aoColumns.length,\n\n\t\t/**\n\t\t * Original outer widths of the columns as rendered by DataTables - used to calculate\n\t\t * the FixedColumns grid bounding box\n\t\t *  @type     array.<int>\n\t\t *  @default  []\n\t\t */\n\t\t\"aiOuterWidths\": [],\n\n\t\t/**\n\t\t * Original inner widths of the columns as rendered by DataTables - used to apply widths\n\t\t * to the columns\n\t\t *  @type     array.<int>\n\t\t *  @default  []\n\t\t */\n\t\t\"aiInnerWidths\": [],\n\n\n\t\t/**\n\t\t * Is the document layout right-to-left\n\t\t * @type boolean\n\t\t */\n\t\trtl: $(dtSettings.nTable).css('direction') === 'rtl'\n\t};\n\n\n\t/**\n\t * DOM elements used by the class instance\n\t * @namespace\n\t * @private\n\t *\n\t */\n\tthis.dom = {\n\t\t/**\n\t\t * DataTables scrolling element\n\t\t *  @type     node\n\t\t *  @default  null\n\t\t */\n\t\t\"scroller\": null,\n\n\t\t/**\n\t\t * DataTables header table\n\t\t *  @type     node\n\t\t *  @default  null\n\t\t */\n\t\t\"header\": null,\n\n\t\t/**\n\t\t * DataTables body table\n\t\t *  @type     node\n\t\t *  @default  null\n\t\t */\n\t\t\"body\": null,\n\n\t\t/**\n\t\t * DataTables footer table\n\t\t *  @type     node\n\t\t *  @default  null\n\t\t */\n\t\t\"footer\": null,\n\n\t\t/**\n\t\t * Display grid elements\n\t\t * @namespace\n\t\t */\n\t\t\"grid\": {\n\t\t\t/**\n\t\t\t * Grid wrapper. This is the container element for the 3x3 grid\n\t\t\t *  @type     node\n\t\t\t *  @default  null\n\t\t\t */\n\t\t\t\"wrapper\": null,\n\n\t\t\t/**\n\t\t\t * DataTables scrolling element. This element is the DataTables\n\t\t\t * component in the display grid (making up the main table - i.e.\n\t\t\t * not the fixed columns).\n\t\t\t *  @type     node\n\t\t\t *  @default  null\n\t\t\t */\n\t\t\t\"dt\": null,\n\n\t\t\t/**\n\t\t\t * Left fixed column grid components\n\t\t\t * @namespace\n\t\t\t */\n\t\t\t\"left\": {\n\t\t\t\t\"wrapper\": null,\n\t\t\t\t\"head\": null,\n\t\t\t\t\"body\": null,\n\t\t\t\t\"foot\": null\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Right fixed column grid components\n\t\t\t * @namespace\n\t\t\t */\n\t\t\t\"right\": {\n\t\t\t\t\"wrapper\": null,\n\t\t\t\t\"head\": null,\n\t\t\t\t\"body\": null,\n\t\t\t\t\"foot\": null\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Cloned table nodes\n\t\t * @namespace\n\t\t */\n\t\t\"clone\": {\n\t\t\t/**\n\t\t\t * Left column cloned table nodes\n\t\t\t * @namespace\n\t\t\t */\n\t\t\t\"left\": {\n\t\t\t\t/**\n\t\t\t\t * Cloned header table\n\t\t\t\t *  @type     node\n\t\t\t\t *  @default  null\n\t\t\t\t */\n\t\t\t\t\"header\": null,\n\n\t\t\t\t/**\n\t\t\t\t * Cloned body table\n\t\t\t\t *  @type     node\n\t\t\t\t *  @default  null\n\t\t\t\t */\n\t\t\t\t\"body\": null,\n\n\t\t\t\t/**\n\t\t\t\t * Cloned footer table\n\t\t\t\t *  @type     node\n\t\t\t\t *  @default  null\n\t\t\t\t */\n\t\t\t\t\"footer\": null\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Right column cloned table nodes\n\t\t\t * @namespace\n\t\t\t */\n\t\t\t\"right\": {\n\t\t\t\t/**\n\t\t\t\t * Cloned header table\n\t\t\t\t *  @type     node\n\t\t\t\t *  @default  null\n\t\t\t\t */\n\t\t\t\t\"header\": null,\n\n\t\t\t\t/**\n\t\t\t\t * Cloned body table\n\t\t\t\t *  @type     node\n\t\t\t\t *  @default  null\n\t\t\t\t */\n\t\t\t\t\"body\": null,\n\n\t\t\t\t/**\n\t\t\t\t * Cloned footer table\n\t\t\t\t *  @type     node\n\t\t\t\t *  @default  null\n\t\t\t\t */\n\t\t\t\t\"footer\": null\n\t\t\t}\n\t\t}\n\t};\n\n\tif ( dtSettings._oFixedColumns ) {\n\t\tthrow 'FixedColumns already initialised on this table';\n\t}\n\n\t/* Attach the instance to the DataTables instance so it can be accessed easily */\n\tdtSettings._oFixedColumns = this;\n\n\t/* Let's do it */\n\tif ( ! dtSettings._bInitComplete )\n\t{\n\t\tdtSettings.oApi._fnCallbackReg( dtSettings, 'aoInitComplete', function () {\n\t\t\tthat._fnConstruct( init );\n\t\t}, 'FixedColumns' );\n\t}\n\telse\n\t{\n\t\tthis._fnConstruct( init );\n\t}\n};\n\n\n\n$.extend( FixedColumns.prototype , {\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * Public methods\n\t * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n\t/**\n\t * Update the fixed columns - including headers and footers. Note that FixedColumns will\n\t * automatically update the display whenever the host DataTable redraws.\n\t *  @returns {void}\n\t *  @example\n\t *      var table = $('#example').dataTable( {\n\t *          \"scrollX\": \"100%\"\n\t *      } );\n\t *      var fc = new $.fn.dataTable.fixedColumns( table );\n\t *\n\t *      // at some later point when the table has been manipulated....\n\t *      fc.fnUpdate();\n\t */\n\t\"fnUpdate\": function ()\n\t{\n\t\tthis._fnDraw( true );\n\t},\n\n\n\t/**\n\t * Recalculate the resizes of the 3x3 grid that FixedColumns uses for display of the table.\n\t * This is useful if you update the width of the table container. Note that FixedColumns will\n\t * perform this function automatically when the window.resize event is fired.\n\t *  @returns {void}\n\t *  @example\n\t *      var table = $('#example').dataTable( {\n\t *          \"scrollX\": \"100%\"\n\t *      } );\n\t *      var fc = new $.fn.dataTable.fixedColumns( table );\n\t *\n\t *      // Resize the table container and then have FixedColumns adjust its layout....\n\t *      $('#content').width( 1200 );\n\t *      fc.fnRedrawLayout();\n\t */\n\t\"fnRedrawLayout\": function ()\n\t{\n\t\tthis._fnColCalc();\n\t\tthis._fnGridLayout();\n\t\tthis.fnUpdate();\n\t},\n\n\n\t/**\n\t * Mark a row such that it's height should be recalculated when using 'semiauto' row\n\t * height matching. This function will have no effect when 'none' or 'auto' row height\n\t * matching is used.\n\t *  @param   {Node} nTr TR element that should have it's height recalculated\n\t *  @returns {void}\n\t *  @example\n\t *      var table = $('#example').dataTable( {\n\t *          \"scrollX\": \"100%\"\n\t *      } );\n\t *      var fc = new $.fn.dataTable.fixedColumns( table );\n\t *\n\t *      // manipulate the table - mark the row as needing an update then update the table\n\t *      // this allows the redraw performed by DataTables fnUpdate to recalculate the row\n\t *      // height\n\t *      fc.fnRecalculateHeight();\n\t *      table.fnUpdate( $('#example tbody tr:eq(0)')[0], [\"insert date\", 1, 2, 3 ... ]);\n\t */\n\t\"fnRecalculateHeight\": function ( nTr )\n\t{\n\t\tdelete nTr._DTTC_iHeight;\n\t\tnTr.style.height = 'auto';\n\t},\n\n\n\t/**\n\t * Set the height of a given row - provides cross browser compatibility\n\t *  @param   {Node} nTarget TR element that should have it's height recalculated\n\t *  @param   {int} iHeight Height in pixels to set\n\t *  @returns {void}\n\t *  @example\n\t *      var table = $('#example').dataTable( {\n\t *          \"scrollX\": \"100%\"\n\t *      } );\n\t *      var fc = new $.fn.dataTable.fixedColumns( table );\n\t *\n\t *      // You may want to do this after manipulating a row in the fixed column\n\t *      fc.fnSetRowHeight( $('#example tbody tr:eq(0)')[0], 50 );\n\t */\n\t\"fnSetRowHeight\": function ( nTarget, iHeight )\n\t{\n\t\tnTarget.style.height = iHeight+\"px\";\n\t},\n\n\n\t/**\n\t * Get data index information about a row or cell in the table body.\n\t * This function is functionally identical to fnGetPosition in DataTables,\n\t * taking the same parameter (TH, TD or TR node) and returning exactly the\n\t * the same information (data index information). THe difference between\n\t * the two is that this method takes into account the fixed columns in the\n\t * table, so you can pass in nodes from the master table, or the cloned\n\t * tables and get the index position for the data in the main table.\n\t *  @param {node} node TR, TH or TD element to get the information about\n\t *  @returns {int} If nNode is given as a TR, then a single index is \n\t *    returned, or if given as a cell, an array of [row index, column index\n\t *    (visible), column index (all)] is given.\n\t */\n\t\"fnGetPosition\": function ( node )\n\t{\n\t\tvar idx;\n\t\tvar inst = this.s.dt.oInstance;\n\n\t\tif ( ! $(node).parents('.DTFC_Cloned').length )\n\t\t{\n\t\t\t// Not in a cloned table\n\t\t\treturn inst.fnGetPosition( node );\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Its in the cloned table, so need to look up position\n\t\t\tif ( node.nodeName.toLowerCase() === 'tr' ) {\n\t\t\t\tidx = $(node).index();\n\t\t\t\treturn inst.fnGetPosition( $('tr', this.s.dt.nTBody)[ idx ] );\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar colIdx = $(node).index();\n\t\t\t\tidx = $(node.parentNode).index();\n\t\t\t\tvar row = inst.fnGetPosition( $('tr', this.s.dt.nTBody)[ idx ] );\n\n\t\t\t\treturn [\n\t\t\t\t\trow,\n\t\t\t\t\tcolIdx,\n\t\t\t\t\tinst.oApi._fnVisibleToColumnIndex( this.s.dt, colIdx )\n\t\t\t\t];\n\t\t\t}\n\t\t}\n\t},\n\n\tfnToFixedNode: function ( rowIdx, colIdx )\n\t{\n\t\tvar found;\n\n\t\tif ( colIdx < this.s.iLeftColumns ) {\n\t\t\tfound = $(this.dom.clone.left.body).find('[data-dt-row='+rowIdx+'][data-dt-column='+colIdx+']');\n\t\t}\n\t\telse if ( colIdx >= this.s.iRightColumns ) {\n\t\t\tfound = $(this.dom.clone.right.body).find('[data-dt-row='+rowIdx+'][data-dt-column='+colIdx+']');\n\t\t}\n\n\t\tif ( found && found.length ) {\n\t\t\treturn found[0];\n\t\t}\n\n\t\t// Fallback - non-fixed node\n\t\tvar table = new $.fn.dataTable.Api(this.s.dt);\n\t\treturn table.cell(rowIdx, colIdx).node();\n\t},\n\n\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * Private methods (they are of course public in JS, but recommended as private)\n\t * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n\t/**\n\t * Initialisation for FixedColumns\n\t *  @param   {Object} oInit User settings for initialisation\n\t *  @returns {void}\n\t *  @private\n\t */\n\t\"_fnConstruct\": function ( oInit )\n\t{\n\t\tvar i, iLen, iWidth,\n\t\t\tthat = this;\n\n\t\t/* Sanity checking */\n\t\tif ( typeof this.s.dt.oInstance.fnVersionCheck != 'function' ||\n\t\t     this.s.dt.oInstance.fnVersionCheck( '1.8.0' ) !== true )\n\t\t{\n\t\t\talert( \"FixedColumns \"+FixedColumns.VERSION+\" required DataTables 1.8.0 or later. \"+\n\t\t\t\t\"Please upgrade your DataTables installation\" );\n\t\t\treturn;\n\t\t}\n\n\t\tif ( this.s.dt.oScroll.sX === \"\" )\n\t\t{\n\t\t\tthis.s.dt.oInstance.oApi._fnLog( this.s.dt, 1, \"FixedColumns is not needed (no \"+\n\t\t\t\t\"x-scrolling in DataTables enabled), so no action will be taken. Use 'FixedHeader' for \"+\n\t\t\t\t\"column fixing when scrolling is not enabled\" );\n\t\t\treturn;\n\t\t}\n\n\t\t/* Apply the settings from the user / defaults */\n\t\tthis.s = $.extend( true, this.s, FixedColumns.defaults, oInit );\n\n\t\t/* Set up the DOM as we need it and cache nodes */\n\t\tvar classes = this.s.dt.oClasses;\n\t\tthis.dom.grid.dt = $(this.s.dt.nTable).parents('div.'+classes.sScrollWrapper)[0];\n\t\tthis.dom.scroller = $('div.'+classes.sScrollBody, this.dom.grid.dt )[0];\n\n\t\t/* Set up the DOM that we want for the fixed column layout grid */\n\t\tthis._fnColCalc();\n\t\tthis._fnGridSetup();\n\n\t\t/* Event handlers */\n\t\tvar mouseController;\n\t\tvar mouseDown = false;\n\n\t\t// When the mouse is down (drag scroll) the mouse controller cannot\n\t\t// change, as the browser keeps the original element as the scrolling one\n\t\t$(this.s.dt.nTableWrapper).on( 'mousedown.DTFC', function (e) {\n\t\t\tif ( e.button === 0 ) {\n\t\t\t\tmouseDown = true;\n\n\t\t\t\t$(document).one( 'mouseup', function () {\n\t\t\t\t\tmouseDown = false;\n\t\t\t\t} );\n\t\t\t}\n\t\t} );\n\n\t\t// When the body is scrolled - scroll the left and right columns\n\t\t$(this.dom.scroller)\n\t\t\t.on( 'mouseover.DTFC touchstart.DTFC', function () {\n\t\t\t\tif ( ! mouseDown ) {\n\t\t\t\t\tmouseController = 'main';\n\t\t\t\t}\n\t\t\t} )\n\t\t\t.on( 'scroll.DTFC', function (e) {\n\t\t\t\tif ( ! mouseController && e.originalEvent ) {\n\t\t\t\t\tmouseController = 'main';\n\t\t\t\t}\n\n\t\t\t\tif ( mouseController === 'main' ) {\n\t\t\t\t\tif ( that.s.iLeftColumns > 0 ) {\n\t\t\t\t\t\tthat.dom.grid.left.liner.scrollTop = that.dom.scroller.scrollTop;\n\t\t\t\t\t}\n\t\t\t\t\tif ( that.s.iRightColumns > 0 ) {\n\t\t\t\t\t\tthat.dom.grid.right.liner.scrollTop = that.dom.scroller.scrollTop;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\n\t\tvar wheelType = 'onwheel' in document.createElement('div') ?\n\t\t\t'wheel.DTFC' :\n\t\t\t'mousewheel.DTFC';\n\n\t\tif ( that.s.iLeftColumns > 0 ) {\n\t\t\t// When scrolling the left column, scroll the body and right column\n\t\t\t$(that.dom.grid.left.liner)\n\t\t\t\t.on( 'mouseover.DTFC touchstart.DTFC', function () {\n\t\t\t\t\tif ( ! mouseDown ) {\n\t\t\t\t\t\tmouseController = 'left';\n\t\t\t\t\t}\n\t\t\t\t} )\n\t\t\t\t.on( 'scroll.DTFC', function ( e ) {\n\t\t\t\t\tif ( ! mouseController && e.originalEvent ) {\n\t\t\t\t\t\tmouseController = 'left';\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( mouseController === 'left' ) {\n\t\t\t\t\t\tthat.dom.scroller.scrollTop = that.dom.grid.left.liner.scrollTop;\n\t\t\t\t\t\tif ( that.s.iRightColumns > 0 ) {\n\t\t\t\t\t\t\tthat.dom.grid.right.liner.scrollTop = that.dom.grid.left.liner.scrollTop;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} )\n\t\t\t\t.on( wheelType, function(e) {\n\t\t\t\t\t// Pass horizontal scrolling through\n\t\t\t\t\tvar xDelta = e.type === 'wheel' ?\n\t\t\t\t\t\t-e.originalEvent.deltaX :\n\t\t\t\t\t\te.originalEvent.wheelDeltaX;\n\t\t\t\t\tthat.dom.scroller.scrollLeft -= xDelta;\n\t\t\t\t} );\n\t\t}\n\n\t\tif ( that.s.iRightColumns > 0 ) {\n\t\t\t// When scrolling the right column, scroll the body and the left column\n\t\t\t$(that.dom.grid.right.liner)\n\t\t\t\t.on( 'mouseover.DTFC touchstart.DTFC', function () {\n\t\t\t\t\tif ( ! mouseDown ) {\n\t\t\t\t\t\tmouseController = 'right';\n\t\t\t\t\t}\n\t\t\t\t} )\n\t\t\t\t.on( 'scroll.DTFC', function ( e ) {\n\t\t\t\t\tif ( ! mouseController && e.originalEvent ) {\n\t\t\t\t\t\tmouseController = 'right';\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( mouseController === 'right' ) {\n\t\t\t\t\t\tthat.dom.scroller.scrollTop = that.dom.grid.right.liner.scrollTop;\n\t\t\t\t\t\tif ( that.s.iLeftColumns > 0 ) {\n\t\t\t\t\t\t\tthat.dom.grid.left.liner.scrollTop = that.dom.grid.right.liner.scrollTop;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} )\n\t\t\t\t.on( wheelType, function(e) {\n\t\t\t\t\t// Pass horizontal scrolling through\n\t\t\t\t\tvar xDelta = e.type === 'wheel' ?\n\t\t\t\t\t\t-e.originalEvent.deltaX :\n\t\t\t\t\t\te.originalEvent.wheelDeltaX;\n\t\t\t\t\tthat.dom.scroller.scrollLeft -= xDelta;\n\t\t\t\t} );\n\t\t}\n\n\t\t$(window).on( 'resize.DTFC', function () {\n\t\t\tthat._fnGridLayout.call( that );\n\t\t} );\n\n\t\tvar bFirstDraw = true;\n\t\tvar jqTable = $(this.s.dt.nTable);\n\n\t\tjqTable\n\t\t\t.on( 'draw.dt.DTFC', function () {\n\t\t\t\tthat._fnColCalc();\n\t\t\t\tthat._fnDraw.call( that, bFirstDraw );\n\t\t\t\tbFirstDraw = false;\n\t\t\t} )\n\t\t\t.on( 'column-sizing.dt.DTFC', function () {\n\t\t\t\tthat._fnColCalc();\n\t\t\t\tthat._fnGridLayout( that );\n\t\t\t} )\n\t\t\t.on( 'column-visibility.dt.DTFC', function ( e, settings, column, vis, recalc ) {\n\t\t\t\tif ( recalc === undefined || recalc ) {\n\t\t\t\t\tthat._fnColCalc();\n\t\t\t\t\tthat._fnGridLayout( that );\n\t\t\t\t\tthat._fnDraw( true );\n\t\t\t\t}\n\t\t\t} )\n\t\t\t.on( 'select.dt.DTFC deselect.dt.DTFC', function ( e, dt, type, indexes ) {\n\t\t\t\tif ( e.namespace === 'dt' ) {\n\t\t\t\t\tthat._fnDraw( false );\n\t\t\t\t}\n\t\t\t} )\n\t\t\t.on( 'destroy.dt.DTFC', function () {\n\t\t\t\tjqTable.off( '.DTFC' );\n\n\t\t\t\t$(that.dom.scroller).off( '.DTFC' );\n\t\t\t\t$(window).off( '.DTFC' );\n\t\t\t\t$(that.s.dt.nTableWrapper).off( '.DTFC' );\n\n\t\t\t\t$(that.dom.grid.left.liner).off( '.DTFC '+wheelType );\n\t\t\t\t$(that.dom.grid.left.wrapper).remove();\n\n\t\t\t\t$(that.dom.grid.right.liner).off( '.DTFC '+wheelType );\n\t\t\t\t$(that.dom.grid.right.wrapper).remove();\n\t\t\t} );\n\n\t\t/* Get things right to start with - note that due to adjusting the columns, there must be\n\t\t * another redraw of the main table. It doesn't need to be a full redraw however.\n\t\t */\n\t\tthis._fnGridLayout();\n\t\tthis.s.dt.oInstance.fnDraw(false);\n\t},\n\n\n\t/**\n\t * Calculate the column widths for the grid layout\n\t *  @returns {void}\n\t *  @private\n\t */\n\t\"_fnColCalc\": function ()\n\t{\n\t\tvar that = this;\n\t\tvar iLeftWidth = 0;\n\t\tvar iRightWidth = 0;\n\n\t\tthis.s.aiInnerWidths = [];\n\t\tthis.s.aiOuterWidths = [];\n\n\t\t$.each( this.s.dt.aoColumns, function (i, col) {\n\t\t\tvar th = $(col.nTh);\n\t\t\tvar border;\n\n\t\t\tif ( ! th.filter(':visible').length ) {\n\t\t\t\tthat.s.aiInnerWidths.push( 0 );\n\t\t\t\tthat.s.aiOuterWidths.push( 0 );\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Inner width is used to assign widths to cells\n\t\t\t\t// Outer width is used to calculate the container\n\t\t\t\tvar iWidth = th.outerWidth();\n\n\t\t\t\t// When working with the left most-cell, need to add on the\n\t\t\t\t// table's border to the outerWidth, since we need to take\n\t\t\t\t// account of it, but it isn't in any cell\n\t\t\t\tif ( that.s.aiOuterWidths.length === 0 ) {\n\t\t\t\t\tborder = $(that.s.dt.nTable).css('border-left-width');\n\t\t\t\t\tiWidth += typeof border === 'string' && border.indexOf('px') === -1 ?\n\t\t\t\t\t\t1 :\n\t\t\t\t\t\tparseInt( border, 10 );\n\t\t\t\t}\n\n\t\t\t\t// Likewise with the final column on the right\n\t\t\t\tif ( that.s.aiOuterWidths.length === that.s.dt.aoColumns.length-1 ) {\n\t\t\t\t\tborder = $(that.s.dt.nTable).css('border-right-width');\n\t\t\t\t\tiWidth += typeof border === 'string' && border.indexOf('px') === -1 ?\n\t\t\t\t\t\t1 :\n\t\t\t\t\t\tparseInt( border, 10 );\n\t\t\t\t}\n\n\t\t\t\tthat.s.aiOuterWidths.push( iWidth );\n\t\t\t\tthat.s.aiInnerWidths.push( th.width() );\n\n\t\t\t\tif ( i < that.s.iLeftColumns )\n\t\t\t\t{\n\t\t\t\t\tiLeftWidth += iWidth;\n\t\t\t\t}\n\n\t\t\t\tif ( that.s.iTableColumns-that.s.iRightColumns <= i )\n\t\t\t\t{\n\t\t\t\t\tiRightWidth += iWidth;\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\n\t\tthis.s.iLeftWidth = iLeftWidth;\n\t\tthis.s.iRightWidth = iRightWidth;\n\t},\n\n\n\t/**\n\t * Set up the DOM for the fixed column. The way the layout works is to create a 1x3 grid\n\t * for the left column, the DataTable (for which we just reuse the scrolling element DataTable\n\t * puts into the DOM) and the right column. In each of he two fixed column elements there is a\n\t * grouping wrapper element and then a head, body and footer wrapper. In each of these we then\n\t * place the cloned header, body or footer tables. This effectively gives as 3x3 grid structure.\n\t *  @returns {void}\n\t *  @private\n\t */\n\t\"_fnGridSetup\": function ()\n\t{\n\t\tvar that = this;\n\t\tvar oOverflow = this._fnDTOverflow();\n\t\tvar block;\n\n\t\tthis.dom.body = this.s.dt.nTable;\n\t\tthis.dom.header = this.s.dt.nTHead.parentNode;\n\t\tthis.dom.header.parentNode.parentNode.style.position = \"relative\";\n\n\t\tvar nSWrapper =\n\t\t\t$('<div class=\"DTFC_ScrollWrapper\" style=\"position:relative; clear:both;\">'+\n\t\t\t\t'<div class=\"DTFC_LeftWrapper\" style=\"position:absolute; top:0; left:0;\" aria-hidden=\"true\">'+\n\t\t\t\t\t'<div class=\"DTFC_LeftHeadWrapper\" style=\"position:relative; top:0; left:0; overflow:hidden;\"></div>'+\n\t\t\t\t\t'<div class=\"DTFC_LeftBodyWrapper\" style=\"position:relative; top:0; left:0; height:0; overflow:hidden;\">'+\n\t\t\t\t\t\t'<div class=\"DTFC_LeftBodyLiner\" style=\"position:relative; top:0; left:0; overflow-y:scroll;\"></div>'+\n\t\t\t\t\t'</div>'+\n\t\t\t\t\t'<div class=\"DTFC_LeftFootWrapper\" style=\"position:relative; top:0; left:0; overflow:hidden;\"></div>'+\n\t\t\t\t'</div>'+\n\t\t\t\t'<div class=\"DTFC_RightWrapper\" style=\"position:absolute; top:0; right:0;\" aria-hidden=\"true\">'+\n\t\t\t\t\t'<div class=\"DTFC_RightHeadWrapper\" style=\"position:relative; top:0; left:0;\">'+\n\t\t\t\t\t\t'<div class=\"DTFC_RightHeadBlocker DTFC_Blocker\" style=\"position:absolute; top:0; bottom:0;\"></div>'+\n\t\t\t\t\t'</div>'+\n\t\t\t\t\t'<div class=\"DTFC_RightBodyWrapper\" style=\"position:relative; top:0; left:0; height:0; overflow:hidden;\">'+\n\t\t\t\t\t\t'<div class=\"DTFC_RightBodyLiner\" style=\"position:relative; top:0; left:0; overflow-y:scroll;\"></div>'+\n\t\t\t\t\t'</div>'+\n\t\t\t\t\t'<div class=\"DTFC_RightFootWrapper\" style=\"position:relative; top:0; left:0;\">'+\n\t\t\t\t\t\t'<div class=\"DTFC_RightFootBlocker DTFC_Blocker\" style=\"position:absolute; top:0; bottom:0;\"></div>'+\n\t\t\t\t\t'</div>'+\n\t\t\t\t'</div>'+\n\t\t\t'</div>')[0];\n\t\tvar nLeft = nSWrapper.childNodes[0];\n\t\tvar nRight = nSWrapper.childNodes[1];\n\n\t\tthis.dom.grid.dt.parentNode.insertBefore( nSWrapper, this.dom.grid.dt );\n\t\tnSWrapper.appendChild( this.dom.grid.dt );\n\n\t\tthis.dom.grid.wrapper = nSWrapper;\n\n\t\tif ( this.s.iLeftColumns > 0 )\n\t\t{\n\t\t\tthis.dom.grid.left.wrapper = nLeft;\n\t\t\tthis.dom.grid.left.head = nLeft.childNodes[0];\n\t\t\tthis.dom.grid.left.body = nLeft.childNodes[1];\n\t\t\tthis.dom.grid.left.liner = $('div.DTFC_LeftBodyLiner', nSWrapper)[0];\n\n\t\t\tnSWrapper.appendChild( nLeft );\n\t\t}\n\n\t\tif ( this.s.iRightColumns > 0 )\n\t\t{\n\t\t\tthis.dom.grid.right.wrapper = nRight;\n\t\t\tthis.dom.grid.right.head = nRight.childNodes[0];\n\t\t\tthis.dom.grid.right.body = nRight.childNodes[1];\n\t\t\tthis.dom.grid.right.liner = $('div.DTFC_RightBodyLiner', nSWrapper)[0];\n\n\t\t\tnRight.style.right = oOverflow.bar+\"px\";\n\n\t\t\tblock = $('div.DTFC_RightHeadBlocker', nSWrapper)[0];\n\t\t\tblock.style.width = oOverflow.bar+\"px\";\n\t\t\tblock.style.right = -oOverflow.bar+\"px\";\n\t\t\tthis.dom.grid.right.headBlock = block;\n\n\t\t\tblock = $('div.DTFC_RightFootBlocker', nSWrapper)[0];\n\t\t\tblock.style.width = oOverflow.bar+\"px\";\n\t\t\tblock.style.right = -oOverflow.bar+\"px\";\n\t\t\tthis.dom.grid.right.footBlock = block;\n\n\t\t\tnSWrapper.appendChild( nRight );\n\t\t}\n\n\t\tif ( this.s.dt.nTFoot )\n\t\t{\n\t\t\tthis.dom.footer = this.s.dt.nTFoot.parentNode;\n\t\t\tif ( this.s.iLeftColumns > 0 )\n\t\t\t{\n\t\t\t\tthis.dom.grid.left.foot = nLeft.childNodes[2];\n\t\t\t}\n\t\t\tif ( this.s.iRightColumns > 0 )\n\t\t\t{\n\t\t\t\tthis.dom.grid.right.foot = nRight.childNodes[2];\n\t\t\t}\n\t\t}\n\n\t\t// RTL support - swap the position of the left and right columns (#48)\n\t\tif ( this.s.rtl ) {\n\t\t\t$('div.DTFC_RightHeadBlocker', nSWrapper).css( {\n\t\t\t\tleft: -oOverflow.bar+'px',\n\t\t\t\tright: ''\n\t\t\t} );\n\t\t}\n\t},\n\n\n\t/**\n\t * Style and position the grid used for the FixedColumns layout\n\t *  @returns {void}\n\t *  @private\n\t */\n\t\"_fnGridLayout\": function ()\n\t{\n\t\tvar that = this;\n\t\tvar oGrid = this.dom.grid;\n\t\tvar iWidth = $(oGrid.wrapper).width();\n\t\tvar iBodyHeight = this.s.dt.nTable.parentNode.offsetHeight;\n\t\tvar iFullHeight = this.s.dt.nTable.parentNode.parentNode.offsetHeight;\n\t\tvar oOverflow = this._fnDTOverflow();\n\t\tvar iLeftWidth = this.s.iLeftWidth;\n\t\tvar iRightWidth = this.s.iRightWidth;\n\t\tvar rtl = $(this.dom.body).css('direction') === 'rtl';\n\t\tvar wrapper;\n\t\tvar scrollbarAdjust = function ( node, width ) {\n\t\t\tif ( ! oOverflow.bar ) {\n\t\t\t\t// If there is no scrollbar (Macs) we need to hide the auto scrollbar\n\t\t\t\tnode.style.width = (width+20)+\"px\";\n\t\t\t\tnode.style.paddingRight = \"20px\";\n\t\t\t\tnode.style.boxSizing = \"border-box\";\n\t\t\t}\n\t\t\telse if ( that._firefoxScrollError() ) {\n\t\t\t\t// See the above function for why this is required\n\t\t\t\tif ( $(node).height() > 34 ) {\n\t\t\t\t\tnode.style.width = (width+oOverflow.bar)+\"px\";\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Otherwise just overflow by the scrollbar\n\t\t\t\tnode.style.width = (width+oOverflow.bar)+\"px\";\n\t\t\t}\n\t\t};\n\n\t\t// When x scrolling - don't paint the fixed columns over the x scrollbar\n\t\tif ( oOverflow.x )\n\t\t{\n\t\t\tiBodyHeight -= oOverflow.bar;\n\t\t}\n\n\t\toGrid.wrapper.style.height = iFullHeight+\"px\";\n\n\t\tif ( this.s.iLeftColumns > 0 )\n\t\t{\n\t\t\twrapper = oGrid.left.wrapper;\n\t\t\twrapper.style.width = iLeftWidth+'px';\n\t\t\twrapper.style.height = '1px';\n\n\t\t\t// Swap the position of the left and right columns for rtl (#48)\n\t\t\t// This is always up against the edge, scrollbar on the far side\n\t\t\tif ( rtl ) {\n\t\t\t\twrapper.style.left = '';\n\t\t\t\twrapper.style.right = 0;\n\t\t\t}\n\t\t\telse {\n\t\t\t\twrapper.style.left = 0;\n\t\t\t\twrapper.style.right = '';\n\t\t\t}\n\n\t\t\toGrid.left.body.style.height = iBodyHeight+\"px\";\n\t\t\tif ( oGrid.left.foot ) {\n\t\t\t\toGrid.left.foot.style.top = (oOverflow.x ? oOverflow.bar : 0)+\"px\"; // shift footer for scrollbar\n\t\t\t}\n\n\t\t\tscrollbarAdjust( oGrid.left.liner, iLeftWidth );\n\t\t\toGrid.left.liner.style.height = iBodyHeight+\"px\";\n\t\t\toGrid.left.liner.style.maxHeight = iBodyHeight+\"px\";\n\t\t}\n\n\t\tif ( this.s.iRightColumns > 0 )\n\t\t{\n\t\t\twrapper = oGrid.right.wrapper;\n\t\t\twrapper.style.width = iRightWidth+'px';\n\t\t\twrapper.style.height = '1px';\n\n\t\t\t// Need to take account of the vertical scrollbar\n\t\t\tif ( this.s.rtl ) {\n\t\t\t\twrapper.style.left = oOverflow.y ? oOverflow.bar+'px' : 0;\n\t\t\t\twrapper.style.right = '';\n\t\t\t}\n\t\t\telse {\n\t\t\t\twrapper.style.left = '';\n\t\t\t\twrapper.style.right = oOverflow.y ? oOverflow.bar+'px' : 0;\n\t\t\t}\n\n\t\t\toGrid.right.body.style.height = iBodyHeight+\"px\";\n\t\t\tif ( oGrid.right.foot ) {\n\t\t\t\toGrid.right.foot.style.top = (oOverflow.x ? oOverflow.bar : 0)+\"px\";\n\t\t\t}\n\n\t\t\tscrollbarAdjust( oGrid.right.liner, iRightWidth );\n\t\t\toGrid.right.liner.style.height = iBodyHeight+\"px\";\n\t\t\toGrid.right.liner.style.maxHeight = iBodyHeight+\"px\";\n\n\t\t\toGrid.right.headBlock.style.display = oOverflow.y ? 'block' : 'none';\n\t\t\toGrid.right.footBlock.style.display = oOverflow.y ? 'block' : 'none';\n\t\t}\n\t},\n\n\n\t/**\n\t * Get information about the DataTable's scrolling state - specifically if the table is scrolling\n\t * on either the x or y axis, and also the scrollbar width.\n\t *  @returns {object} Information about the DataTables scrolling state with the properties:\n\t *    'x', 'y' and 'bar'\n\t *  @private\n\t */\n\t\"_fnDTOverflow\": function ()\n\t{\n\t\tvar nTable = this.s.dt.nTable;\n\t\tvar nTableScrollBody = nTable.parentNode;\n\t\tvar out = {\n\t\t\t\"x\": false,\n\t\t\t\"y\": false,\n\t\t\t\"bar\": this.s.dt.oScroll.iBarWidth\n\t\t};\n\n\t\tif ( nTable.offsetWidth > nTableScrollBody.clientWidth )\n\t\t{\n\t\t\tout.x = true;\n\t\t}\n\n\t\tif ( nTable.offsetHeight > nTableScrollBody.clientHeight )\n\t\t{\n\t\t\tout.y = true;\n\t\t}\n\n\t\treturn out;\n\t},\n\n\n\t/**\n\t * Clone and position the fixed columns\n\t *  @returns {void}\n\t *  @param   {Boolean} bAll Indicate if the header and footer should be updated as well (true)\n\t *  @private\n\t */\n\t\"_fnDraw\": function ( bAll )\n\t{\n\t\tthis._fnGridLayout();\n\t\tthis._fnCloneLeft( bAll );\n\t\tthis._fnCloneRight( bAll );\n\n\t\t/* Draw callback function */\n\t\tif ( this.s.fnDrawCallback !== null )\n\t\t{\n\t\t\tthis.s.fnDrawCallback.call( this, this.dom.clone.left, this.dom.clone.right );\n\t\t}\n\n\t\t/* Event triggering */\n\t\t$(this).trigger( 'draw.dtfc', {\n\t\t\t\"leftClone\": this.dom.clone.left,\n\t\t\t\"rightClone\": this.dom.clone.right\n\t\t} );\n\t},\n\n\n\t/**\n\t * Clone the right columns\n\t *  @returns {void}\n\t *  @param   {Boolean} bAll Indicate if the header and footer should be updated as well (true)\n\t *  @private\n\t */\n\t\"_fnCloneRight\": function ( bAll )\n\t{\n\t\tif ( this.s.iRightColumns <= 0 ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar that = this,\n\t\t\ti, jq,\n\t\t\taiColumns = [];\n\n\t\tfor ( i=this.s.iTableColumns-this.s.iRightColumns ; i<this.s.iTableColumns ; i++ ) {\n\t\t\tif ( this.s.dt.aoColumns[i].bVisible ) {\n\t\t\t\taiColumns.push( i );\n\t\t\t}\n\t\t}\n\n\t\tthis._fnClone( this.dom.clone.right, this.dom.grid.right, aiColumns, bAll );\n\t},\n\n\n\t/**\n\t * Clone the left columns\n\t *  @returns {void}\n\t *  @param   {Boolean} bAll Indicate if the header and footer should be updated as well (true)\n\t *  @private\n\t */\n\t\"_fnCloneLeft\": function ( bAll )\n\t{\n\t\tif ( this.s.iLeftColumns <= 0 ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar that = this,\n\t\t\ti, jq,\n\t\t\taiColumns = [];\n\n\t\tfor ( i=0 ; i<this.s.iLeftColumns ; i++ ) {\n\t\t\tif ( this.s.dt.aoColumns[i].bVisible ) {\n\t\t\t\taiColumns.push( i );\n\t\t\t}\n\t\t}\n\n\t\tthis._fnClone( this.dom.clone.left, this.dom.grid.left, aiColumns, bAll );\n\t},\n\n\n\t/**\n\t * Make a copy of the layout object for a header or footer element from DataTables. Note that\n\t * this method will clone the nodes in the layout object.\n\t *  @returns {Array} Copy of the layout array\n\t *  @param   {Object} aoOriginal Layout array from DataTables (aoHeader or aoFooter)\n\t *  @param   {Object} aiColumns Columns to copy\n\t *  @param   {boolean} events Copy cell events or not\n\t *  @private\n\t */\n\t\"_fnCopyLayout\": function ( aoOriginal, aiColumns, events )\n\t{\n\t\tvar aReturn = [];\n\t\tvar aClones = [];\n\t\tvar aCloned = [];\n\n\t\tfor ( var i=0, iLen=aoOriginal.length ; i<iLen ; i++ )\n\t\t{\n\t\t\tvar aRow = [];\n\t\t\taRow.nTr = $(aoOriginal[i].nTr).clone(events, false)[0];\n\n\t\t\tfor ( var j=0, jLen=this.s.iTableColumns ; j<jLen ; j++ )\n\t\t\t{\n\t\t\t\tif ( $.inArray( j, aiColumns ) === -1 )\n\t\t\t\t{\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tvar iCloned = $.inArray( aoOriginal[i][j].cell, aCloned );\n\t\t\t\tif ( iCloned === -1 )\n\t\t\t\t{\n\t\t\t\t\tvar nClone = $(aoOriginal[i][j].cell).clone(events, false)[0];\n\t\t\t\t\taClones.push( nClone );\n\t\t\t\t\taCloned.push( aoOriginal[i][j].cell );\n\n\t\t\t\t\taRow.push( {\n\t\t\t\t\t\t\"cell\": nClone,\n\t\t\t\t\t\t\"unique\": aoOriginal[i][j].unique\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\taRow.push( {\n\t\t\t\t\t\t\"cell\": aClones[ iCloned ],\n\t\t\t\t\t\t\"unique\": aoOriginal[i][j].unique\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\taReturn.push( aRow );\n\t\t}\n\n\t\treturn aReturn;\n\t},\n\n\n\t/**\n\t * Clone the DataTable nodes and place them in the DOM (sized correctly)\n\t *  @returns {void}\n\t *  @param   {Object} oClone Object containing the header, footer and body cloned DOM elements\n\t *  @param   {Object} oGrid Grid object containing the display grid elements for the cloned\n\t *                    column (left or right)\n\t *  @param   {Array} aiColumns Column indexes which should be operated on from the DataTable\n\t *  @param   {Boolean} bAll Indicate if the header and footer should be updated as well (true)\n\t *  @private\n\t */\n\t\"_fnClone\": function ( oClone, oGrid, aiColumns, bAll )\n\t{\n\t\tvar that = this,\n\t\t\ti, iLen, j, jLen, jq, nTarget, iColumn, nClone, iIndex, aoCloneLayout,\n\t\t\tjqCloneThead, aoFixedHeader,\n\t\t\tdt = this.s.dt;\n\n\t\t/*\n\t\t * Header\n\t\t */\n\t\tif ( bAll )\n\t\t{\n\t\t\t$(oClone.header).remove();\n\n\t\t\toClone.header = $(this.dom.header).clone(true, false)[0];\n\t\t\toClone.header.className += \" DTFC_Cloned\";\n\t\t\toClone.header.style.width = \"100%\";\n\t\t\toGrid.head.appendChild( oClone.header );\n\n\t\t\t/* Copy the DataTables layout cache for the header for our floating column */\n\t\t\taoCloneLayout = this._fnCopyLayout( dt.aoHeader, aiColumns, true );\n\t\t\tjqCloneThead = $('>thead', oClone.header);\n\t\t\tjqCloneThead.empty();\n\n\t\t\t/* Add the created cloned TR elements to the table */\n\t\t\tfor ( i=0, iLen=aoCloneLayout.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\tjqCloneThead[0].appendChild( aoCloneLayout[i].nTr );\n\t\t\t}\n\n\t\t\t/* Use the handy _fnDrawHead function in DataTables to do the rowspan/colspan\n\t\t\t * calculations for us\n\t\t\t */\n\t\t\tdt.oApi._fnDrawHead( dt, aoCloneLayout, true );\n\t\t}\n\t\telse\n\t\t{\n\t\t\t/* To ensure that we copy cell classes exactly, regardless of colspan, multiple rows\n\t\t\t * etc, we make a copy of the header from the DataTable again, but don't insert the\n\t\t\t * cloned cells, just copy the classes across. To get the matching layout for the\n\t\t\t * fixed component, we use the DataTables _fnDetectHeader method, allowing 1:1 mapping\n\t\t\t */\n\t\t\taoCloneLayout = this._fnCopyLayout( dt.aoHeader, aiColumns, false );\n\t\t\taoFixedHeader=[];\n\n\t\t\tdt.oApi._fnDetectHeader( aoFixedHeader, $('>thead', oClone.header)[0] );\n\n\t\t\tfor ( i=0, iLen=aoCloneLayout.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\tfor ( j=0, jLen=aoCloneLayout[i].length ; j<jLen ; j++ )\n\t\t\t\t{\n\t\t\t\t\taoFixedHeader[i][j].cell.className = aoCloneLayout[i][j].cell.className;\n\n\t\t\t\t\t// If jQuery UI theming is used we need to copy those elements as well\n\t\t\t\t\t$('span.DataTables_sort_icon', aoFixedHeader[i][j].cell).each( function () {\n\t\t\t\t\t\tthis.className = $('span.DataTables_sort_icon', aoCloneLayout[i][j].cell)[0].className;\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._fnEqualiseHeights( 'thead', this.dom.header, oClone.header );\n\n\t\t/*\n\t\t * Body\n\t\t */\n\t\tif ( this.s.sHeightMatch == 'auto' )\n\t\t{\n\t\t\t/* Remove any heights which have been applied already and let the browser figure it out */\n\t\t\t$('>tbody>tr', that.dom.body).css('height', 'auto');\n\t\t}\n\n\t\tif ( oClone.body !== null )\n\t\t{\n\t\t\t$(oClone.body).remove();\n\t\t\toClone.body = null;\n\t\t}\n\n\t\toClone.body = $(this.dom.body).clone(true)[0];\n\t\toClone.body.className += \" DTFC_Cloned\";\n\t\toClone.body.style.paddingBottom = dt.oScroll.iBarWidth+\"px\";\n\t\toClone.body.style.marginBottom = (dt.oScroll.iBarWidth*2)+\"px\"; /* For IE */\n\t\tif ( oClone.body.getAttribute('id') !== null )\n\t\t{\n\t\t\toClone.body.removeAttribute('id');\n\t\t}\n\n\t\t$('>thead>tr', oClone.body).empty();\n\t\t$('>tfoot', oClone.body).remove();\n\n\t\tvar nBody = $('tbody', oClone.body)[0];\n\t\t$(nBody).empty();\n\t\tif ( dt.aiDisplay.length > 0 )\n\t\t{\n\t\t\t/* Copy the DataTables' header elements to force the column width in exactly the\n\t\t\t * same way that DataTables does it - have the header element, apply the width and\n\t\t\t * colapse it down\n\t\t\t */\n\t\t\tvar nInnerThead = $('>thead>tr', oClone.body)[0];\n\t\t\tfor ( iIndex=0 ; iIndex<aiColumns.length ; iIndex++ )\n\t\t\t{\n\t\t\t\tiColumn = aiColumns[iIndex];\n\n\t\t\t\tnClone = $(dt.aoColumns[iColumn].nTh).clone(true)[0];\n\t\t\t\tnClone.innerHTML = \"\";\n\n\t\t\t\tvar oStyle = nClone.style;\n\t\t\t\toStyle.paddingTop = \"0\";\n\t\t\t\toStyle.paddingBottom = \"0\";\n\t\t\t\toStyle.borderTopWidth = \"0\";\n\t\t\t\toStyle.borderBottomWidth = \"0\";\n\t\t\t\toStyle.height = 0;\n\t\t\t\toStyle.width = that.s.aiInnerWidths[iColumn]+\"px\";\n\n\t\t\t\tnInnerThead.appendChild( nClone );\n\t\t\t}\n\n\t\t\t/* Add in the tbody elements, cloning form the master table */\n\t\t\t$('>tbody>tr', that.dom.body).each( function (z) {\n\t\t\t\tvar i = that.s.dt.oFeatures.bServerSide===false ?\n\t\t\t\t\tthat.s.dt.aiDisplay[ that.s.dt._iDisplayStart+z ] : z;\n\t\t\t\tvar aTds = that.s.dt.aoData[ i ].anCells || $(this).children('td, th');\n\n\t\t\t\tvar n = this.cloneNode(false);\n\t\t\t\tn.removeAttribute('id');\n\t\t\t\tn.setAttribute( 'data-dt-row', i );\n\n\t\t\t\tfor ( iIndex=0 ; iIndex<aiColumns.length ; iIndex++ )\n\t\t\t\t{\n\t\t\t\t\tiColumn = aiColumns[iIndex];\n\n\t\t\t\t\tif ( aTds.length > 0 )\n\t\t\t\t\t{\n\t\t\t\t\t\tnClone = $( aTds[iColumn] ).clone(true, true)[0];\n\t\t\t\t\t\tnClone.removeAttribute( 'id' );\n\t\t\t\t\t\tnClone.setAttribute( 'data-dt-row', i );\n\t\t\t\t\t\tnClone.setAttribute( 'data-dt-column', iColumn );\n\t\t\t\t\t\tn.appendChild( nClone );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tnBody.appendChild( n );\n\t\t\t} );\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$('>tbody>tr', that.dom.body).each( function (z) {\n\t\t\t\tnClone = this.cloneNode(true);\n\t\t\t\tnClone.className += ' DTFC_NoData';\n\t\t\t\t$('td', nClone).html('');\n\t\t\t\tnBody.appendChild( nClone );\n\t\t\t} );\n\t\t}\n\n\t\toClone.body.style.width = \"100%\";\n\t\toClone.body.style.margin = \"0\";\n\t\toClone.body.style.padding = \"0\";\n\n\t\t// Interop with Scroller - need to use a height forcing element in the\n\t\t// scrolling area in the same way that Scroller does in the body scroll.\n\t\tif ( dt.oScroller !== undefined )\n\t\t{\n\t\t\tvar scrollerForcer = dt.oScroller.dom.force;\n\n\t\t\tif ( ! oGrid.forcer ) {\n\t\t\t\toGrid.forcer = scrollerForcer.cloneNode( true );\n\t\t\t\toGrid.liner.appendChild( oGrid.forcer );\n\t\t\t}\n\t\t\telse {\n\t\t\t\toGrid.forcer.style.height = scrollerForcer.style.height;\n\t\t\t}\n\t\t}\n\n\t\toGrid.liner.appendChild( oClone.body );\n\n\t\tthis._fnEqualiseHeights( 'tbody', that.dom.body, oClone.body );\n\n\t\t/*\n\t\t * Footer\n\t\t */\n\t\tif ( dt.nTFoot !== null )\n\t\t{\n\t\t\tif ( bAll )\n\t\t\t{\n\t\t\t\tif ( oClone.footer !== null )\n\t\t\t\t{\n\t\t\t\t\toClone.footer.parentNode.removeChild( oClone.footer );\n\t\t\t\t}\n\t\t\t\toClone.footer = $(this.dom.footer).clone(true, true)[0];\n\t\t\t\toClone.footer.className += \" DTFC_Cloned\";\n\t\t\t\toClone.footer.style.width = \"100%\";\n\t\t\t\toGrid.foot.appendChild( oClone.footer );\n\n\t\t\t\t/* Copy the footer just like we do for the header */\n\t\t\t\taoCloneLayout = this._fnCopyLayout( dt.aoFooter, aiColumns, true );\n\t\t\t\tvar jqCloneTfoot = $('>tfoot', oClone.footer);\n\t\t\t\tjqCloneTfoot.empty();\n\n\t\t\t\tfor ( i=0, iLen=aoCloneLayout.length ; i<iLen ; i++ )\n\t\t\t\t{\n\t\t\t\t\tjqCloneTfoot[0].appendChild( aoCloneLayout[i].nTr );\n\t\t\t\t}\n\t\t\t\tdt.oApi._fnDrawHead( dt, aoCloneLayout, true );\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\taoCloneLayout = this._fnCopyLayout( dt.aoFooter, aiColumns, false );\n\t\t\t\tvar aoCurrFooter=[];\n\n\t\t\t\tdt.oApi._fnDetectHeader( aoCurrFooter, $('>tfoot', oClone.footer)[0] );\n\n\t\t\t\tfor ( i=0, iLen=aoCloneLayout.length ; i<iLen ; i++ )\n\t\t\t\t{\n\t\t\t\t\tfor ( j=0, jLen=aoCloneLayout[i].length ; j<jLen ; j++ )\n\t\t\t\t\t{\n\t\t\t\t\t\taoCurrFooter[i][j].cell.className = aoCloneLayout[i][j].cell.className;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._fnEqualiseHeights( 'tfoot', this.dom.footer, oClone.footer );\n\t\t}\n\n\t\t/* Equalise the column widths between the header footer and body - body get's priority */\n\t\tvar anUnique = dt.oApi._fnGetUniqueThs( dt, $('>thead', oClone.header)[0] );\n\t\t$(anUnique).each( function (i) {\n\t\t\tiColumn = aiColumns[i];\n\t\t\tthis.style.width = that.s.aiInnerWidths[iColumn]+\"px\";\n\t\t} );\n\n\t\tif ( that.s.dt.nTFoot !== null )\n\t\t{\n\t\t\tanUnique = dt.oApi._fnGetUniqueThs( dt, $('>tfoot', oClone.footer)[0] );\n\t\t\t$(anUnique).each( function (i) {\n\t\t\t\tiColumn = aiColumns[i];\n\t\t\t\tthis.style.width = that.s.aiInnerWidths[iColumn]+\"px\";\n\t\t\t} );\n\t\t}\n\t},\n\n\n\t/**\n\t * From a given table node (THEAD etc), get a list of TR direct child elements\n\t *  @param   {Node} nIn Table element to search for TR elements (THEAD, TBODY or TFOOT element)\n\t *  @returns {Array} List of TR elements found\n\t *  @private\n\t */\n\t\"_fnGetTrNodes\": function ( nIn )\n\t{\n\t\tvar aOut = [];\n\t\tfor ( var i=0, iLen=nIn.childNodes.length ; i<iLen ; i++ )\n\t\t{\n\t\t\tif ( nIn.childNodes[i].nodeName.toUpperCase() == \"TR\" )\n\t\t\t{\n\t\t\t\taOut.push( nIn.childNodes[i] );\n\t\t\t}\n\t\t}\n\t\treturn aOut;\n\t},\n\n\n\t/**\n\t * Equalise the heights of the rows in a given table node in a cross browser way\n\t *  @returns {void}\n\t *  @param   {String} nodeName Node type - thead, tbody or tfoot\n\t *  @param   {Node} original Original node to take the heights from\n\t *  @param   {Node} clone Copy the heights to\n\t *  @private\n\t */\n\t\"_fnEqualiseHeights\": function ( nodeName, original, clone )\n\t{\n\t\tif ( this.s.sHeightMatch == 'none' && nodeName !== 'thead' && nodeName !== 'tfoot' )\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tvar that = this,\n\t\t\ti, iLen, iHeight, iHeight2, iHeightOriginal, iHeightClone,\n\t\t\trootOriginal = original.getElementsByTagName(nodeName)[0],\n\t\t\trootClone    = clone.getElementsByTagName(nodeName)[0],\n\t\t\tjqBoxHack    = $('>'+nodeName+'>tr:eq(0)', original).children(':first'),\n\t\t\tiBoxHack     = jqBoxHack.outerHeight() - jqBoxHack.height(),\n\t\t\tanOriginal   = this._fnGetTrNodes( rootOriginal ),\n\t\t\tanClone      = this._fnGetTrNodes( rootClone ),\n\t\t\theights      = [];\n\n\t\tfor ( i=0, iLen=anClone.length ; i<iLen ; i++ )\n\t\t{\n\t\t\tiHeightOriginal = anOriginal[i].offsetHeight;\n\t\t\tiHeightClone = anClone[i].offsetHeight;\n\t\t\tiHeight = iHeightClone > iHeightOriginal ? iHeightClone : iHeightOriginal;\n\n\t\t\tif ( this.s.sHeightMatch == 'semiauto' )\n\t\t\t{\n\t\t\t\tanOriginal[i]._DTTC_iHeight = iHeight;\n\t\t\t}\n\n\t\t\theights.push( iHeight );\n\t\t}\n\n\t\tfor ( i=0, iLen=anClone.length ; i<iLen ; i++ )\n\t\t{\n\t\t\tanClone[i].style.height = heights[i]+\"px\";\n\t\t\tanOriginal[i].style.height = heights[i]+\"px\";\n\t\t}\n\t},\n\n\t/**\n\t * Determine if the UA suffers from Firefox's overflow:scroll scrollbars\n\t * not being shown bug.\n\t *\n\t * Firefox doesn't draw scrollbars, even if it is told to using\n\t * overflow:scroll, if the div is less than 34px height. See bugs 292284 and\n\t * 781885. Using UA detection here since this is particularly hard to detect\n\t * using objects - its a straight up rendering error in Firefox.\n\t *\n\t * @return {boolean} True if Firefox error is present, false otherwise\n\t */\n\t_firefoxScrollError: function () {\n\t\tif ( _firefoxScroll === undefined ) {\n\t\t\tvar test = $('<div/>')\n\t\t\t\t.css( {\n\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\ttop: 0,\n\t\t\t\t\tleft: 0,\n\t\t\t\t\theight: 10,\n\t\t\t\t\twidth: 50,\n\t\t\t\t\toverflow: 'scroll'\n\t\t\t\t} )\n\t\t\t\t.appendTo( 'body' );\n\n\t\t\t// Make sure this doesn't apply on Macs with 0 width scrollbars\n\t\t\t_firefoxScroll = (\n\t\t\t\ttest[0].clientWidth === test[0].offsetWidth && this._fnDTOverflow().bar !== 0\n\t\t\t);\n\n\t\t\ttest.remove();\n\t\t}\n\n\t\treturn _firefoxScroll;\n\t}\n} );\n\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * Statics\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n/**\n * FixedColumns default settings for initialisation\n *  @name FixedColumns.defaults\n *  @namespace\n *  @static\n */\nFixedColumns.defaults = /** @lends FixedColumns.defaults */{\n\t/**\n\t * Number of left hand columns to fix in position\n\t *  @type     int\n\t *  @default  1\n\t *  @static\n\t *  @example\n\t *      var  = $('#example').dataTable( {\n\t *          \"scrollX\": \"100%\"\n\t *      } );\n\t *      new $.fn.dataTable.fixedColumns( table, {\n\t *          \"leftColumns\": 2\n\t *      } );\n\t */\n\t\"iLeftColumns\": 1,\n\n\t/**\n\t * Number of right hand columns to fix in position\n\t *  @type     int\n\t *  @default  0\n\t *  @static\n\t *  @example\n\t *      var table = $('#example').dataTable( {\n\t *          \"scrollX\": \"100%\"\n\t *      } );\n\t *      new $.fn.dataTable.fixedColumns( table, {\n\t *          \"rightColumns\": 1\n\t *      } );\n\t */\n\t\"iRightColumns\": 0,\n\n\t/**\n\t * Draw callback function which is called when FixedColumns has redrawn the fixed assets\n\t *  @type     function(object, object):void\n\t *  @default  null\n\t *  @static\n\t *  @example\n\t *      var table = $('#example').dataTable( {\n\t *          \"scrollX\": \"100%\"\n\t *      } );\n\t *      new $.fn.dataTable.fixedColumns( table, {\n\t *          \"drawCallback\": function () {\n\t *\t            alert( \"FixedColumns redraw\" );\n\t *\t        }\n\t *      } );\n\t */\n\t\"fnDrawCallback\": null,\n\n\t/**\n\t * Height matching algorthim to use. This can be \"none\" which will result in no height\n\t * matching being applied by FixedColumns (height matching could be forced by CSS in this\n\t * case), \"semiauto\" whereby the height calculation will be performed once, and the result\n\t * cached to be used again (fnRecalculateHeight can be used to force recalculation), or\n\t * \"auto\" when height matching is performed on every draw (slowest but must accurate)\n\t *  @type     string\n\t *  @default  semiauto\n\t *  @static\n\t *  @example\n\t *      var table = $('#example').dataTable( {\n\t *          \"scrollX\": \"100%\"\n\t *      } );\n\t *      new $.fn.dataTable.fixedColumns( table, {\n\t *          \"heightMatch\": \"auto\"\n\t *      } );\n\t */\n\t\"sHeightMatch\": \"semiauto\"\n};\n\n\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * Constants\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n/**\n * FixedColumns version\n *  @name      FixedColumns.version\n *  @type      String\n *  @default   See code\n *  @static\n */\nFixedColumns.version = \"3.8.0\";\n\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * DataTables API integration\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\nDataTable.Api.register( 'fixedColumns()', function () {\n\treturn this;\n} );\n\nDataTable.Api.register( 'fixedColumns().update()', function () {\n\treturn this.iterator( 'table', function ( ctx ) {\n\t\tif ( ctx._oFixedColumns ) {\n\t\t\tctx._oFixedColumns.fnUpdate();\n\t\t}\n\t} );\n} );\n\nDataTable.Api.register( 'fixedColumns().relayout()', function () {\n\treturn this.iterator( 'table', function ( ctx ) {\n\t\tif ( ctx._oFixedColumns ) {\n\t\t\tctx._oFixedColumns.fnRedrawLayout();\n\t\t}\n\t} );\n} );\n\nDataTable.Api.register( 'rows().recalcHeight()', function () {\n\treturn this.iterator( 'row', function ( ctx, idx ) {\n\t\tif ( ctx._oFixedColumns ) {\n\t\t\tctx._oFixedColumns.fnRecalculateHeight( this.row(idx).node() );\n\t\t}\n\t} );\n} );\n\nDataTable.Api.register( 'fixedColumns().rowIndex()', function ( row ) {\n\trow = $(row);\n\n\treturn row.parents('.DTFC_Cloned').length ?\n\t\tthis.rows( { page: 'current' } ).indexes()[ row.index() ] :\n\t\tthis.row( row ).index();\n} );\n\nDataTable.Api.register( 'fixedColumns().cellIndex()', function ( cell ) {\n\tcell = $(cell);\n\n\tif ( cell.parents('.DTFC_Cloned').length ) {\n\t\tvar rowClonedIdx = cell.parent().index();\n\t\tvar rowIdx = this.rows( { page: 'current' } ).indexes()[ rowClonedIdx ];\n\t\tvar columnIdx;\n\n\t\tif ( cell.parents('.DTFC_LeftWrapper').length ) {\n\t\t\tcolumnIdx = cell.index();\n\t\t}\n\t\telse {\n\t\t\tvar columns = this.columns().flatten().length;\n\t\t\tcolumnIdx = columns - this.context[0]._oFixedColumns.s.iRightColumns + cell.index();\n\t\t}\n\n\t\treturn {\n\t\t\trow: rowIdx,\n\t\t\tcolumn: this.column.index( 'toData', columnIdx ),\n\t\t\tcolumnVisible: columnIdx\n\t\t};\n\t}\n\telse {\n\t\treturn this.cell( cell ).index();\n\t}\n} );\n\nDataTable.Api.registerPlural( 'cells().fixedNodes()', 'cell().fixedNode()', function () {\n\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\treturn settings._oFixedColumns\n\t\t\t? settings._oFixedColumns.fnToFixedNode( row, column )\n\t\t\t: this.node();\n\t}, 1 );\n} );\n\n\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * Initialisation\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n// Attach a listener to the document which listens for DataTables initialisation\n// events so we can automatically initialise\n$(document).on( 'init.dt.fixedColumns', function (e, settings) {\n\tif ( e.namespace !== 'dt' ) {\n\t\treturn;\n\t}\n\n\tvar init = settings.oInit.fixedColumns;\n\tvar defaults = DataTable.defaults.fixedColumns;\n\n\tif ( init || defaults ) {\n\t\tvar opts = $.extend( {}, init, defaults );\n\n\t\tif ( init !== false ) {\n\t\t\tnew FixedColumns( settings, opts );\n\t\t}\n\t}\n} );\n\n\n\n// Make FixedColumns accessible from the DataTables instance\n$.fn.dataTable.FixedColumns = FixedColumns;\n$.fn.DataTable.FixedColumns = FixedColumns;\n\nreturn FixedColumns;\n}));\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","window._ = require(\"lodash\");\nwindow.$ = require(\"jquery\");\n\n// Override jQuery original append method\n(function($) {\n  var origAppend = $.fn.append;\n\n  $.fn.append = function() {\n    return origAppend.apply(this, arguments).trigger(\"append\");\n  };\n})($);\n\n/**\n * We'll load the axios HTTP library which allows us to easily issue requests\n * to our Laravel back-end. This library automatically handles sending the\n * CSRF token as a header based on the value of the \"XSRF\" token cookie.\n */\n\nwindow.axios = require(\"axios\");\n\nwindow.axios.defaults.headers.common[\"X-Requested-With\"] = \"XMLHttpRequest\";\n\n/**\n * Echo exposes an expressive API for subscribing to channels and listening\n * for events that are broadcast by Laravel. Echo and event broadcasting\n * allows your team to easily build robust real-time web applications.\n */\n\n// import Echo from 'laravel-echo';\n\n// window.Pusher = require('pusher-js');\n\n// window.Echo = new Echo({\n//     broadcaster: 'pusher',\n//     key: process.env.MIX_PUSHER_APP_KEY,\n//     cluster: process.env.MIX_PUSHER_APP_CLUSTER,\n//     forceTLS: true\n// });\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\nmodule.exports = function isBuffer (obj) {\n  return obj != null && obj.constructor != null &&\n    typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n","/*! DataTables 1.10.20\n * ©2008-2019 SpryMedia Ltd - datatables.net/license\n */\n\n/**\n * @summary     DataTables\n * @description Paginate, search and order HTML tables\n * @version     1.10.20\n * @file        jquery.dataTables.js\n * @author      SpryMedia Ltd\n * @contact     www.datatables.net\n * @copyright   Copyright 2008-2019 SpryMedia Ltd.\n *\n * This source file is free software, available under the following license:\n *   MIT license - http://datatables.net/license\n *\n * This source file is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n * or FITNESS FOR A PARTICULAR PURPOSE. See the license files for details.\n *\n * For details please refer to: http://www.datatables.net\n */\n\n/*jslint evil: true, undef: true, browser: true */\n/*globals $,require,jQuery,define,_selector_run,_selector_opts,_selector_first,_selector_row_indexes,_ext,_Api,_api_register,_api_registerPlural,_re_new_lines,_re_html,_re_formatted_numeric,_re_escape_regex,_empty,_intVal,_numToDecimal,_isNumber,_isHtml,_htmlNumeric,_pluck,_pluck_order,_range,_stripHtml,_unique,_fnBuildAjax,_fnAjaxUpdate,_fnAjaxParameters,_fnAjaxUpdateDraw,_fnAjaxDataSrc,_fnAddColumn,_fnColumnOptions,_fnAdjustColumnSizing,_fnVisibleToColumnIndex,_fnColumnIndexToVisible,_fnVisbleColumns,_fnGetColumns,_fnColumnTypes,_fnApplyColumnDefs,_fnHungarianMap,_fnCamelToHungarian,_fnLanguageCompat,_fnBrowserDetect,_fnAddData,_fnAddTr,_fnNodeToDataIndex,_fnNodeToColumnIndex,_fnGetCellData,_fnSetCellData,_fnSplitObjNotation,_fnGetObjectDataFn,_fnSetObjectDataFn,_fnGetDataMaster,_fnClearTable,_fnDeleteIndex,_fnInvalidate,_fnGetRowElements,_fnCreateTr,_fnBuildHead,_fnDrawHead,_fnDraw,_fnReDraw,_fnAddOptionsHtml,_fnDetectHeader,_fnGetUniqueThs,_fnFeatureHtmlFilter,_fnFilterComplete,_fnFilterCustom,_fnFilterColumn,_fnFilter,_fnFilterCreateSearch,_fnEscapeRegex,_fnFilterData,_fnFeatureHtmlInfo,_fnUpdateInfo,_fnInfoMacros,_fnInitialise,_fnInitComplete,_fnLengthChange,_fnFeatureHtmlLength,_fnFeatureHtmlPaginate,_fnPageChange,_fnFeatureHtmlProcessing,_fnProcessingDisplay,_fnFeatureHtmlTable,_fnScrollDraw,_fnApplyToChildren,_fnCalculateColumnWidths,_fnThrottle,_fnConvertToWidth,_fnGetWidestNode,_fnGetMaxLenString,_fnStringToCss,_fnSortFlatten,_fnSort,_fnSortAria,_fnSortListener,_fnSortAttachListener,_fnSortingClasses,_fnSortData,_fnSaveState,_fnLoadState,_fnSettingsFromNode,_fnLog,_fnMap,_fnBindAction,_fnCallbackReg,_fnCallbackFire,_fnLengthOverflow,_fnRenderer,_fnDataSource,_fnRowAttributes*/\n\n(function( factory ) {\n\t\"use strict\";\n\n\tif ( typeof define === 'function' && define.amd ) {\n\t\t// AMD\n\t\tdefine( ['jquery'], function ( $ ) {\n\t\t\treturn factory( $, window, document );\n\t\t} );\n\t}\n\telse if ( typeof exports === 'object' ) {\n\t\t// CommonJS\n\t\tmodule.exports = function (root, $) {\n\t\t\tif ( ! root ) {\n\t\t\t\t// CommonJS environments without a window global must pass a\n\t\t\t\t// root. This will give an error otherwise\n\t\t\t\troot = window;\n\t\t\t}\n\n\t\t\tif ( ! $ ) {\n\t\t\t\t$ = typeof window !== 'undefined' ? // jQuery's factory checks for a global window\n\t\t\t\t\trequire('jquery') :\n\t\t\t\t\trequire('jquery')( root );\n\t\t\t}\n\n\t\t\treturn factory( $, root, root.document );\n\t\t};\n\t}\n\telse {\n\t\t// Browser\n\t\tfactory( jQuery, window, document );\n\t}\n}\n(function( $, window, document, undefined ) {\n\t\"use strict\";\n\n\t/**\n\t * DataTables is a plug-in for the jQuery Javascript library. It is a highly\n\t * flexible tool, based upon the foundations of progressive enhancement,\n\t * which will add advanced interaction controls to any HTML table. For a\n\t * full list of features please refer to\n\t * [DataTables.net](href=\"http://datatables.net).\n\t *\n\t * Note that the `DataTable` object is not a global variable but is aliased\n\t * to `jQuery.fn.DataTable` and `jQuery.fn.dataTable` through which it may\n\t * be  accessed.\n\t *\n\t *  @class\n\t *  @param {object} [init={}] Configuration object for DataTables. Options\n\t *    are defined by {@link DataTable.defaults}\n\t *  @requires jQuery 1.7+\n\t *\n\t *  @example\n\t *    // Basic initialisation\n\t *    $(document).ready( function {\n\t *      $('#example').dataTable();\n\t *    } );\n\t *\n\t *  @example\n\t *    // Initialisation with configuration options - in this case, disable\n\t *    // pagination and sorting.\n\t *    $(document).ready( function {\n\t *      $('#example').dataTable( {\n\t *        \"paginate\": false,\n\t *        \"sort\": false\n\t *      } );\n\t *    } );\n\t */\n\tvar DataTable = function ( options )\n\t{\n\t\t/**\n\t\t * Perform a jQuery selector action on the table's TR elements (from the tbody) and\n\t\t * return the resulting jQuery object.\n\t\t *  @param {string|node|jQuery} sSelector jQuery selector or node collection to act on\n\t\t *  @param {object} [oOpts] Optional parameters for modifying the rows to be included\n\t\t *  @param {string} [oOpts.filter=none] Select TR elements that meet the current filter\n\t\t *    criterion (\"applied\") or all TR elements (i.e. no filter).\n\t\t *  @param {string} [oOpts.order=current] Order of the TR elements in the processed array.\n\t\t *    Can be either 'current', whereby the current sorting of the table is used, or\n\t\t *    'original' whereby the original order the data was read into the table is used.\n\t\t *  @param {string} [oOpts.page=all] Limit the selection to the currently displayed page\n\t\t *    (\"current\") or not (\"all\"). If 'current' is given, then order is assumed to be\n\t\t *    'current' and filter is 'applied', regardless of what they might be given as.\n\t\t *  @returns {object} jQuery object, filtered by the given selector.\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Highlight every second row\n\t\t *      oTable.$('tr:odd').css('backgroundColor', 'blue');\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Filter to rows with 'Webkit' in them, add a background colour and then\n\t\t *      // remove the filter, thus highlighting the 'Webkit' rows only.\n\t\t *      oTable.fnFilter('Webkit');\n\t\t *      oTable.$('tr', {\"search\": \"applied\"}).css('backgroundColor', 'blue');\n\t\t *      oTable.fnFilter('');\n\t\t *    } );\n\t\t */\n\t\tthis.$ = function ( sSelector, oOpts )\n\t\t{\n\t\t\treturn this.api(true).$( sSelector, oOpts );\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Almost identical to $ in operation, but in this case returns the data for the matched\n\t\t * rows - as such, the jQuery selector used should match TR row nodes or TD/TH cell nodes\n\t\t * rather than any descendants, so the data can be obtained for the row/cell. If matching\n\t\t * rows are found, the data returned is the original data array/object that was used to\n\t\t * create the row (or a generated array if from a DOM source).\n\t\t *\n\t\t * This method is often useful in-combination with $ where both functions are given the\n\t\t * same parameters and the array indexes will match identically.\n\t\t *  @param {string|node|jQuery} sSelector jQuery selector or node collection to act on\n\t\t *  @param {object} [oOpts] Optional parameters for modifying the rows to be included\n\t\t *  @param {string} [oOpts.filter=none] Select elements that meet the current filter\n\t\t *    criterion (\"applied\") or all elements (i.e. no filter).\n\t\t *  @param {string} [oOpts.order=current] Order of the data in the processed array.\n\t\t *    Can be either 'current', whereby the current sorting of the table is used, or\n\t\t *    'original' whereby the original order the data was read into the table is used.\n\t\t *  @param {string} [oOpts.page=all] Limit the selection to the currently displayed page\n\t\t *    (\"current\") or not (\"all\"). If 'current' is given, then order is assumed to be\n\t\t *    'current' and filter is 'applied', regardless of what they might be given as.\n\t\t *  @returns {array} Data for the matched elements. If any elements, as a result of the\n\t\t *    selector, were not TR, TD or TH elements in the DataTable, they will have a null\n\t\t *    entry in the array.\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Get the data from the first row in the table\n\t\t *      var data = oTable._('tr:first');\n\t\t *\n\t\t *      // Do something useful with the data\n\t\t *      alert( \"First cell is: \"+data[0] );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Filter to 'Webkit' and get all data for\n\t\t *      oTable.fnFilter('Webkit');\n\t\t *      var data = oTable._('tr', {\"search\": \"applied\"});\n\t\t *\n\t\t *      // Do something with the data\n\t\t *      alert( data.length+\" rows matched the search\" );\n\t\t *    } );\n\t\t */\n\t\tthis._ = function ( sSelector, oOpts )\n\t\t{\n\t\t\treturn this.api(true).rows( sSelector, oOpts ).data();\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Create a DataTables Api instance, with the currently selected tables for\n\t\t * the Api's context.\n\t\t * @param {boolean} [traditional=false] Set the API instance's context to be\n\t\t *   only the table referred to by the `DataTable.ext.iApiIndex` option, as was\n\t\t *   used in the API presented by DataTables 1.9- (i.e. the traditional mode),\n\t\t *   or if all tables captured in the jQuery object should be used.\n\t\t * @return {DataTables.Api}\n\t\t */\n\t\tthis.api = function ( traditional )\n\t\t{\n\t\t\treturn traditional ?\n\t\t\t\tnew _Api(\n\t\t\t\t\t_fnSettingsFromNode( this[ _ext.iApiIndex ] )\n\t\t\t\t) :\n\t\t\t\tnew _Api( this );\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Add a single new row or multiple rows of data to the table. Please note\n\t\t * that this is suitable for client-side processing only - if you are using\n\t\t * server-side processing (i.e. \"bServerSide\": true), then to add data, you\n\t\t * must add it to the data source, i.e. the server-side, through an Ajax call.\n\t\t *  @param {array|object} data The data to be added to the table. This can be:\n\t\t *    <ul>\n\t\t *      <li>1D array of data - add a single row with the data provided</li>\n\t\t *      <li>2D array of arrays - add multiple rows in a single call</li>\n\t\t *      <li>object - data object when using <i>mData</i></li>\n\t\t *      <li>array of objects - multiple data objects when using <i>mData</i></li>\n\t\t *    </ul>\n\t\t *  @param {bool} [redraw=true] redraw the table or not\n\t\t *  @returns {array} An array of integers, representing the list of indexes in\n\t\t *    <i>aoData</i> ({@link DataTable.models.oSettings}) that have been added to\n\t\t *    the table.\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    // Global var for counter\n\t\t *    var giCount = 2;\n\t\t *\n\t\t *    $(document).ready(function() {\n\t\t *      $('#example').dataTable();\n\t\t *    } );\n\t\t *\n\t\t *    function fnClickAddRow() {\n\t\t *      $('#example').dataTable().fnAddData( [\n\t\t *        giCount+\".1\",\n\t\t *        giCount+\".2\",\n\t\t *        giCount+\".3\",\n\t\t *        giCount+\".4\" ]\n\t\t *      );\n\t\t *\n\t\t *      giCount++;\n\t\t *    }\n\t\t */\n\t\tthis.fnAddData = function( data, redraw )\n\t\t{\n\t\t\tvar api = this.api( true );\n\t\t\n\t\t\t/* Check if we want to add multiple rows or not */\n\t\t\tvar rows = $.isArray(data) && ( $.isArray(data[0]) || $.isPlainObject(data[0]) ) ?\n\t\t\t\tapi.rows.add( data ) :\n\t\t\t\tapi.row.add( data );\n\t\t\n\t\t\tif ( redraw === undefined || redraw ) {\n\t\t\t\tapi.draw();\n\t\t\t}\n\t\t\n\t\t\treturn rows.flatten().toArray();\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * This function will make DataTables recalculate the column sizes, based on the data\n\t\t * contained in the table and the sizes applied to the columns (in the DOM, CSS or\n\t\t * through the sWidth parameter). This can be useful when the width of the table's\n\t\t * parent element changes (for example a window resize).\n\t\t *  @param {boolean} [bRedraw=true] Redraw the table or not, you will typically want to\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable( {\n\t\t *        \"sScrollY\": \"200px\",\n\t\t *        \"bPaginate\": false\n\t\t *      } );\n\t\t *\n\t\t *      $(window).on('resize', function () {\n\t\t *        oTable.fnAdjustColumnSizing();\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\tthis.fnAdjustColumnSizing = function ( bRedraw )\n\t\t{\n\t\t\tvar api = this.api( true ).columns.adjust();\n\t\t\tvar settings = api.settings()[0];\n\t\t\tvar scroll = settings.oScroll;\n\t\t\n\t\t\tif ( bRedraw === undefined || bRedraw ) {\n\t\t\t\tapi.draw( false );\n\t\t\t}\n\t\t\telse if ( scroll.sX !== \"\" || scroll.sY !== \"\" ) {\n\t\t\t\t/* If not redrawing, but scrolling, we want to apply the new column sizes anyway */\n\t\t\t\t_fnScrollDraw( settings );\n\t\t\t}\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Quickly and simply clear a table\n\t\t *  @param {bool} [bRedraw=true] redraw the table or not\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Immediately 'nuke' the current rows (perhaps waiting for an Ajax callback...)\n\t\t *      oTable.fnClearTable();\n\t\t *    } );\n\t\t */\n\t\tthis.fnClearTable = function( bRedraw )\n\t\t{\n\t\t\tvar api = this.api( true ).clear();\n\t\t\n\t\t\tif ( bRedraw === undefined || bRedraw ) {\n\t\t\t\tapi.draw();\n\t\t\t}\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * The exact opposite of 'opening' a row, this function will close any rows which\n\t\t * are currently 'open'.\n\t\t *  @param {node} nTr the table row to 'close'\n\t\t *  @returns {int} 0 on success, or 1 if failed (can't find the row)\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable;\n\t\t *\n\t\t *      // 'open' an information row when a row is clicked on\n\t\t *      $('#example tbody tr').click( function () {\n\t\t *        if ( oTable.fnIsOpen(this) ) {\n\t\t *          oTable.fnClose( this );\n\t\t *        } else {\n\t\t *          oTable.fnOpen( this, \"Temporary row opened\", \"info_row\" );\n\t\t *        }\n\t\t *      } );\n\t\t *\n\t\t *      oTable = $('#example').dataTable();\n\t\t *    } );\n\t\t */\n\t\tthis.fnClose = function( nTr )\n\t\t{\n\t\t\tthis.api( true ).row( nTr ).child.hide();\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Remove a row for the table\n\t\t *  @param {mixed} target The index of the row from aoData to be deleted, or\n\t\t *    the TR element you want to delete\n\t\t *  @param {function|null} [callBack] Callback function\n\t\t *  @param {bool} [redraw=true] Redraw the table or not\n\t\t *  @returns {array} The row that was deleted\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Immediately remove the first row\n\t\t *      oTable.fnDeleteRow( 0 );\n\t\t *    } );\n\t\t */\n\t\tthis.fnDeleteRow = function( target, callback, redraw )\n\t\t{\n\t\t\tvar api = this.api( true );\n\t\t\tvar rows = api.rows( target );\n\t\t\tvar settings = rows.settings()[0];\n\t\t\tvar data = settings.aoData[ rows[0][0] ];\n\t\t\n\t\t\trows.remove();\n\t\t\n\t\t\tif ( callback ) {\n\t\t\t\tcallback.call( this, settings, data );\n\t\t\t}\n\t\t\n\t\t\tif ( redraw === undefined || redraw ) {\n\t\t\t\tapi.draw();\n\t\t\t}\n\t\t\n\t\t\treturn data;\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Restore the table to it's original state in the DOM by removing all of DataTables\n\t\t * enhancements, alterations to the DOM structure of the table and event listeners.\n\t\t *  @param {boolean} [remove=false] Completely remove the table from the DOM\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      // This example is fairly pointless in reality, but shows how fnDestroy can be used\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *      oTable.fnDestroy();\n\t\t *    } );\n\t\t */\n\t\tthis.fnDestroy = function ( remove )\n\t\t{\n\t\t\tthis.api( true ).destroy( remove );\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Redraw the table\n\t\t *  @param {bool} [complete=true] Re-filter and resort (if enabled) the table before the draw.\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Re-draw the table - you wouldn't want to do it here, but it's an example :-)\n\t\t *      oTable.fnDraw();\n\t\t *    } );\n\t\t */\n\t\tthis.fnDraw = function( complete )\n\t\t{\n\t\t\t// Note that this isn't an exact match to the old call to _fnDraw - it takes\n\t\t\t// into account the new data, but can hold position.\n\t\t\tthis.api( true ).draw( complete );\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Filter the input based on data\n\t\t *  @param {string} sInput String to filter the table on\n\t\t *  @param {int|null} [iColumn] Column to limit filtering to\n\t\t *  @param {bool} [bRegex=false] Treat as regular expression or not\n\t\t *  @param {bool} [bSmart=true] Perform smart filtering or not\n\t\t *  @param {bool} [bShowGlobal=true] Show the input global filter in it's input box(es)\n\t\t *  @param {bool} [bCaseInsensitive=true] Do case-insensitive matching (true) or not (false)\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Sometime later - filter...\n\t\t *      oTable.fnFilter( 'test string' );\n\t\t *    } );\n\t\t */\n\t\tthis.fnFilter = function( sInput, iColumn, bRegex, bSmart, bShowGlobal, bCaseInsensitive )\n\t\t{\n\t\t\tvar api = this.api( true );\n\t\t\n\t\t\tif ( iColumn === null || iColumn === undefined ) {\n\t\t\t\tapi.search( sInput, bRegex, bSmart, bCaseInsensitive );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tapi.column( iColumn ).search( sInput, bRegex, bSmart, bCaseInsensitive );\n\t\t\t}\n\t\t\n\t\t\tapi.draw();\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Get the data for the whole table, an individual row or an individual cell based on the\n\t\t * provided parameters.\n\t\t *  @param {int|node} [src] A TR row node, TD/TH cell node or an integer. If given as\n\t\t *    a TR node then the data source for the whole row will be returned. If given as a\n\t\t *    TD/TH cell node then iCol will be automatically calculated and the data for the\n\t\t *    cell returned. If given as an integer, then this is treated as the aoData internal\n\t\t *    data index for the row (see fnGetPosition) and the data for that row used.\n\t\t *  @param {int} [col] Optional column index that you want the data of.\n\t\t *  @returns {array|object|string} If mRow is undefined, then the data for all rows is\n\t\t *    returned. If mRow is defined, just data for that row, and is iCol is\n\t\t *    defined, only data for the designated cell is returned.\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    // Row data\n\t\t *    $(document).ready(function() {\n\t\t *      oTable = $('#example').dataTable();\n\t\t *\n\t\t *      oTable.$('tr').click( function () {\n\t\t *        var data = oTable.fnGetData( this );\n\t\t *        // ... do something with the array / object of data for the row\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Individual cell data\n\t\t *    $(document).ready(function() {\n\t\t *      oTable = $('#example').dataTable();\n\t\t *\n\t\t *      oTable.$('td').click( function () {\n\t\t *        var sData = oTable.fnGetData( this );\n\t\t *        alert( 'The cell clicked on had the value of '+sData );\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\tthis.fnGetData = function( src, col )\n\t\t{\n\t\t\tvar api = this.api( true );\n\t\t\n\t\t\tif ( src !== undefined ) {\n\t\t\t\tvar type = src.nodeName ? src.nodeName.toLowerCase() : '';\n\t\t\n\t\t\t\treturn col !== undefined || type == 'td' || type == 'th' ?\n\t\t\t\t\tapi.cell( src, col ).data() :\n\t\t\t\t\tapi.row( src ).data() || null;\n\t\t\t}\n\t\t\n\t\t\treturn api.data().toArray();\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Get an array of the TR nodes that are used in the table's body. Note that you will\n\t\t * typically want to use the '$' API method in preference to this as it is more\n\t\t * flexible.\n\t\t *  @param {int} [iRow] Optional row index for the TR element you want\n\t\t *  @returns {array|node} If iRow is undefined, returns an array of all TR elements\n\t\t *    in the table's body, or iRow is defined, just the TR element requested.\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Get the nodes from the table\n\t\t *      var nNodes = oTable.fnGetNodes( );\n\t\t *    } );\n\t\t */\n\t\tthis.fnGetNodes = function( iRow )\n\t\t{\n\t\t\tvar api = this.api( true );\n\t\t\n\t\t\treturn iRow !== undefined ?\n\t\t\t\tapi.row( iRow ).node() :\n\t\t\t\tapi.rows().nodes().flatten().toArray();\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Get the array indexes of a particular cell from it's DOM element\n\t\t * and column index including hidden columns\n\t\t *  @param {node} node this can either be a TR, TD or TH in the table's body\n\t\t *  @returns {int} If nNode is given as a TR, then a single index is returned, or\n\t\t *    if given as a cell, an array of [row index, column index (visible),\n\t\t *    column index (all)] is given.\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      $('#example tbody td').click( function () {\n\t\t *        // Get the position of the current data from the node\n\t\t *        var aPos = oTable.fnGetPosition( this );\n\t\t *\n\t\t *        // Get the data array for this row\n\t\t *        var aData = oTable.fnGetData( aPos[0] );\n\t\t *\n\t\t *        // Update the data array and return the value\n\t\t *        aData[ aPos[1] ] = 'clicked';\n\t\t *        this.innerHTML = 'clicked';\n\t\t *      } );\n\t\t *\n\t\t *      // Init DataTables\n\t\t *      oTable = $('#example').dataTable();\n\t\t *    } );\n\t\t */\n\t\tthis.fnGetPosition = function( node )\n\t\t{\n\t\t\tvar api = this.api( true );\n\t\t\tvar nodeName = node.nodeName.toUpperCase();\n\t\t\n\t\t\tif ( nodeName == 'TR' ) {\n\t\t\t\treturn api.row( node ).index();\n\t\t\t}\n\t\t\telse if ( nodeName == 'TD' || nodeName == 'TH' ) {\n\t\t\t\tvar cell = api.cell( node ).index();\n\t\t\n\t\t\t\treturn [\n\t\t\t\t\tcell.row,\n\t\t\t\t\tcell.columnVisible,\n\t\t\t\t\tcell.column\n\t\t\t\t];\n\t\t\t}\n\t\t\treturn null;\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Check to see if a row is 'open' or not.\n\t\t *  @param {node} nTr the table row to check\n\t\t *  @returns {boolean} true if the row is currently open, false otherwise\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable;\n\t\t *\n\t\t *      // 'open' an information row when a row is clicked on\n\t\t *      $('#example tbody tr').click( function () {\n\t\t *        if ( oTable.fnIsOpen(this) ) {\n\t\t *          oTable.fnClose( this );\n\t\t *        } else {\n\t\t *          oTable.fnOpen( this, \"Temporary row opened\", \"info_row\" );\n\t\t *        }\n\t\t *      } );\n\t\t *\n\t\t *      oTable = $('#example').dataTable();\n\t\t *    } );\n\t\t */\n\t\tthis.fnIsOpen = function( nTr )\n\t\t{\n\t\t\treturn this.api( true ).row( nTr ).child.isShown();\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * This function will place a new row directly after a row which is currently\n\t\t * on display on the page, with the HTML contents that is passed into the\n\t\t * function. This can be used, for example, to ask for confirmation that a\n\t\t * particular record should be deleted.\n\t\t *  @param {node} nTr The table row to 'open'\n\t\t *  @param {string|node|jQuery} mHtml The HTML to put into the row\n\t\t *  @param {string} sClass Class to give the new TD cell\n\t\t *  @returns {node} The row opened. Note that if the table row passed in as the\n\t\t *    first parameter, is not found in the table, this method will silently\n\t\t *    return.\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable;\n\t\t *\n\t\t *      // 'open' an information row when a row is clicked on\n\t\t *      $('#example tbody tr').click( function () {\n\t\t *        if ( oTable.fnIsOpen(this) ) {\n\t\t *          oTable.fnClose( this );\n\t\t *        } else {\n\t\t *          oTable.fnOpen( this, \"Temporary row opened\", \"info_row\" );\n\t\t *        }\n\t\t *      } );\n\t\t *\n\t\t *      oTable = $('#example').dataTable();\n\t\t *    } );\n\t\t */\n\t\tthis.fnOpen = function( nTr, mHtml, sClass )\n\t\t{\n\t\t\treturn this.api( true )\n\t\t\t\t.row( nTr )\n\t\t\t\t.child( mHtml, sClass )\n\t\t\t\t.show()\n\t\t\t\t.child()[0];\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Change the pagination - provides the internal logic for pagination in a simple API\n\t\t * function. With this function you can have a DataTables table go to the next,\n\t\t * previous, first or last pages.\n\t\t *  @param {string|int} mAction Paging action to take: \"first\", \"previous\", \"next\" or \"last\"\n\t\t *    or page number to jump to (integer), note that page 0 is the first page.\n\t\t *  @param {bool} [bRedraw=true] Redraw the table or not\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *      oTable.fnPageChange( 'next' );\n\t\t *    } );\n\t\t */\n\t\tthis.fnPageChange = function ( mAction, bRedraw )\n\t\t{\n\t\t\tvar api = this.api( true ).page( mAction );\n\t\t\n\t\t\tif ( bRedraw === undefined || bRedraw ) {\n\t\t\t\tapi.draw(false);\n\t\t\t}\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Show a particular column\n\t\t *  @param {int} iCol The column whose display should be changed\n\t\t *  @param {bool} bShow Show (true) or hide (false) the column\n\t\t *  @param {bool} [bRedraw=true] Redraw the table or not\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Hide the second column after initialisation\n\t\t *      oTable.fnSetColumnVis( 1, false );\n\t\t *    } );\n\t\t */\n\t\tthis.fnSetColumnVis = function ( iCol, bShow, bRedraw )\n\t\t{\n\t\t\tvar api = this.api( true ).column( iCol ).visible( bShow );\n\t\t\n\t\t\tif ( bRedraw === undefined || bRedraw ) {\n\t\t\t\tapi.columns.adjust().draw();\n\t\t\t}\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Get the settings for a particular table for external manipulation\n\t\t *  @returns {object} DataTables settings object. See\n\t\t *    {@link DataTable.models.oSettings}\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *      var oSettings = oTable.fnSettings();\n\t\t *\n\t\t *      // Show an example parameter from the settings\n\t\t *      alert( oSettings._iDisplayStart );\n\t\t *    } );\n\t\t */\n\t\tthis.fnSettings = function()\n\t\t{\n\t\t\treturn _fnSettingsFromNode( this[_ext.iApiIndex] );\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Sort the table by a particular column\n\t\t *  @param {int} iCol the data index to sort on. Note that this will not match the\n\t\t *    'display index' if you have hidden data entries\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Sort immediately with columns 0 and 1\n\t\t *      oTable.fnSort( [ [0,'asc'], [1,'asc'] ] );\n\t\t *    } );\n\t\t */\n\t\tthis.fnSort = function( aaSort )\n\t\t{\n\t\t\tthis.api( true ).order( aaSort ).draw();\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Attach a sort listener to an element for a given column\n\t\t *  @param {node} nNode the element to attach the sort listener to\n\t\t *  @param {int} iColumn the column that a click on this node will sort on\n\t\t *  @param {function} [fnCallback] callback function when sort is run\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Sort on column 1, when 'sorter' is clicked on\n\t\t *      oTable.fnSortListener( document.getElementById('sorter'), 1 );\n\t\t *    } );\n\t\t */\n\t\tthis.fnSortListener = function( nNode, iColumn, fnCallback )\n\t\t{\n\t\t\tthis.api( true ).order.listener( nNode, iColumn, fnCallback );\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Update a table cell or row - this method will accept either a single value to\n\t\t * update the cell with, an array of values with one element for each column or\n\t\t * an object in the same format as the original data source. The function is\n\t\t * self-referencing in order to make the multi column updates easier.\n\t\t *  @param {object|array|string} mData Data to update the cell/row with\n\t\t *  @param {node|int} mRow TR element you want to update or the aoData index\n\t\t *  @param {int} [iColumn] The column to update, give as null or undefined to\n\t\t *    update a whole row.\n\t\t *  @param {bool} [bRedraw=true] Redraw the table or not\n\t\t *  @param {bool} [bAction=true] Perform pre-draw actions or not\n\t\t *  @returns {int} 0 on success, 1 on error\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *      oTable.fnUpdate( 'Example update', 0, 0 ); // Single cell\n\t\t *      oTable.fnUpdate( ['a', 'b', 'c', 'd', 'e'], $('tbody tr')[0] ); // Row\n\t\t *    } );\n\t\t */\n\t\tthis.fnUpdate = function( mData, mRow, iColumn, bRedraw, bAction )\n\t\t{\n\t\t\tvar api = this.api( true );\n\t\t\n\t\t\tif ( iColumn === undefined || iColumn === null ) {\n\t\t\t\tapi.row( mRow ).data( mData );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tapi.cell( mRow, iColumn ).data( mData );\n\t\t\t}\n\t\t\n\t\t\tif ( bAction === undefined || bAction ) {\n\t\t\t\tapi.columns.adjust();\n\t\t\t}\n\t\t\n\t\t\tif ( bRedraw === undefined || bRedraw ) {\n\t\t\t\tapi.draw();\n\t\t\t}\n\t\t\treturn 0;\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Provide a common method for plug-ins to check the version of DataTables being used, in order\n\t\t * to ensure compatibility.\n\t\t *  @param {string} sVersion Version string to check for, in the format \"X.Y.Z\". Note that the\n\t\t *    formats \"X\" and \"X.Y\" are also acceptable.\n\t\t *  @returns {boolean} true if this version of DataTables is greater or equal to the required\n\t\t *    version, or false if this version of DataTales is not suitable\n\t\t *  @method\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *      alert( oTable.fnVersionCheck( '1.9.0' ) );\n\t\t *    } );\n\t\t */\n\t\tthis.fnVersionCheck = _ext.fnVersionCheck;\n\t\t\n\n\t\tvar _that = this;\n\t\tvar emptyInit = options === undefined;\n\t\tvar len = this.length;\n\n\t\tif ( emptyInit ) {\n\t\t\toptions = {};\n\t\t}\n\n\t\tthis.oApi = this.internal = _ext.internal;\n\n\t\t// Extend with old style plug-in API methods\n\t\tfor ( var fn in DataTable.ext.internal ) {\n\t\t\tif ( fn ) {\n\t\t\t\tthis[fn] = _fnExternApiFunc(fn);\n\t\t\t}\n\t\t}\n\n\t\tthis.each(function() {\n\t\t\t// For each initialisation we want to give it a clean initialisation\n\t\t\t// object that can be bashed around\n\t\t\tvar o = {};\n\t\t\tvar oInit = len > 1 ? // optimisation for single table case\n\t\t\t\t_fnExtend( o, options, true ) :\n\t\t\t\toptions;\n\n\t\t\t/*global oInit,_that,emptyInit*/\n\t\t\tvar i=0, iLen, j, jLen, k, kLen;\n\t\t\tvar sId = this.getAttribute( 'id' );\n\t\t\tvar bInitHandedOff = false;\n\t\t\tvar defaults = DataTable.defaults;\n\t\t\tvar $this = $(this);\n\t\t\t\n\t\t\t\n\t\t\t/* Sanity check */\n\t\t\tif ( this.nodeName.toLowerCase() != 'table' )\n\t\t\t{\n\t\t\t\t_fnLog( null, 0, 'Non-table node initialisation ('+this.nodeName+')', 2 );\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\t/* Backwards compatibility for the defaults */\n\t\t\t_fnCompatOpts( defaults );\n\t\t\t_fnCompatCols( defaults.column );\n\t\t\t\n\t\t\t/* Convert the camel-case defaults to Hungarian */\n\t\t\t_fnCamelToHungarian( defaults, defaults, true );\n\t\t\t_fnCamelToHungarian( defaults.column, defaults.column, true );\n\t\t\t\n\t\t\t/* Setting up the initialisation object */\n\t\t\t_fnCamelToHungarian( defaults, $.extend( oInit, $this.data() ), true );\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t/* Check to see if we are re-initialising a table */\n\t\t\tvar allSettings = DataTable.settings;\n\t\t\tfor ( i=0, iLen=allSettings.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\tvar s = allSettings[i];\n\t\t\t\n\t\t\t\t/* Base check on table node */\n\t\t\t\tif (\n\t\t\t\t\ts.nTable == this ||\n\t\t\t\t\t(s.nTHead && s.nTHead.parentNode == this) ||\n\t\t\t\t\t(s.nTFoot && s.nTFoot.parentNode == this)\n\t\t\t\t) {\n\t\t\t\t\tvar bRetrieve = oInit.bRetrieve !== undefined ? oInit.bRetrieve : defaults.bRetrieve;\n\t\t\t\t\tvar bDestroy = oInit.bDestroy !== undefined ? oInit.bDestroy : defaults.bDestroy;\n\t\t\t\n\t\t\t\t\tif ( emptyInit || bRetrieve )\n\t\t\t\t\t{\n\t\t\t\t\t\treturn s.oInstance;\n\t\t\t\t\t}\n\t\t\t\t\telse if ( bDestroy )\n\t\t\t\t\t{\n\t\t\t\t\t\ts.oInstance.fnDestroy();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t_fnLog( s, 0, 'Cannot reinitialise DataTable', 3 );\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\n\t\t\t\t/* If the element we are initialising has the same ID as a table which was previously\n\t\t\t\t * initialised, but the table nodes don't match (from before) then we destroy the old\n\t\t\t\t * instance by simply deleting it. This is under the assumption that the table has been\n\t\t\t\t * destroyed by other methods. Anyone using non-id selectors will need to do this manually\n\t\t\t\t */\n\t\t\t\tif ( s.sTableId == this.id )\n\t\t\t\t{\n\t\t\t\t\tallSettings.splice( i, 1 );\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t/* Ensure the table has an ID - required for accessibility */\n\t\t\tif ( sId === null || sId === \"\" )\n\t\t\t{\n\t\t\t\tsId = \"DataTables_Table_\"+(DataTable.ext._unique++);\n\t\t\t\tthis.id = sId;\n\t\t\t}\n\t\t\t\n\t\t\t/* Create the settings object for this table and set some of the default parameters */\n\t\t\tvar oSettings = $.extend( true, {}, DataTable.models.oSettings, {\n\t\t\t\t\"sDestroyWidth\": $this[0].style.width,\n\t\t\t\t\"sInstance\":     sId,\n\t\t\t\t\"sTableId\":      sId\n\t\t\t} );\n\t\t\toSettings.nTable = this;\n\t\t\toSettings.oApi   = _that.internal;\n\t\t\toSettings.oInit  = oInit;\n\t\t\t\n\t\t\tallSettings.push( oSettings );\n\t\t\t\n\t\t\t// Need to add the instance after the instance after the settings object has been added\n\t\t\t// to the settings array, so we can self reference the table instance if more than one\n\t\t\toSettings.oInstance = (_that.length===1) ? _that : $this.dataTable();\n\t\t\t\n\t\t\t// Backwards compatibility, before we apply all the defaults\n\t\t\t_fnCompatOpts( oInit );\n\t\t\t_fnLanguageCompat( oInit.oLanguage );\n\t\t\t\n\t\t\t// If the length menu is given, but the init display length is not, use the length menu\n\t\t\tif ( oInit.aLengthMenu && ! oInit.iDisplayLength )\n\t\t\t{\n\t\t\t\toInit.iDisplayLength = $.isArray( oInit.aLengthMenu[0] ) ?\n\t\t\t\t\toInit.aLengthMenu[0][0] : oInit.aLengthMenu[0];\n\t\t\t}\n\t\t\t\n\t\t\t// Apply the defaults and init options to make a single init object will all\n\t\t\t// options defined from defaults and instance options.\n\t\t\toInit = _fnExtend( $.extend( true, {}, defaults ), oInit );\n\t\t\t\n\t\t\t\n\t\t\t// Map the initialisation options onto the settings object\n\t\t\t_fnMap( oSettings.oFeatures, oInit, [\n\t\t\t\t\"bPaginate\",\n\t\t\t\t\"bLengthChange\",\n\t\t\t\t\"bFilter\",\n\t\t\t\t\"bSort\",\n\t\t\t\t\"bSortMulti\",\n\t\t\t\t\"bInfo\",\n\t\t\t\t\"bProcessing\",\n\t\t\t\t\"bAutoWidth\",\n\t\t\t\t\"bSortClasses\",\n\t\t\t\t\"bServerSide\",\n\t\t\t\t\"bDeferRender\"\n\t\t\t] );\n\t\t\t_fnMap( oSettings, oInit, [\n\t\t\t\t\"asStripeClasses\",\n\t\t\t\t\"ajax\",\n\t\t\t\t\"fnServerData\",\n\t\t\t\t\"fnFormatNumber\",\n\t\t\t\t\"sServerMethod\",\n\t\t\t\t\"aaSorting\",\n\t\t\t\t\"aaSortingFixed\",\n\t\t\t\t\"aLengthMenu\",\n\t\t\t\t\"sPaginationType\",\n\t\t\t\t\"sAjaxSource\",\n\t\t\t\t\"sAjaxDataProp\",\n\t\t\t\t\"iStateDuration\",\n\t\t\t\t\"sDom\",\n\t\t\t\t\"bSortCellsTop\",\n\t\t\t\t\"iTabIndex\",\n\t\t\t\t\"fnStateLoadCallback\",\n\t\t\t\t\"fnStateSaveCallback\",\n\t\t\t\t\"renderer\",\n\t\t\t\t\"searchDelay\",\n\t\t\t\t\"rowId\",\n\t\t\t\t[ \"iCookieDuration\", \"iStateDuration\" ], // backwards compat\n\t\t\t\t[ \"oSearch\", \"oPreviousSearch\" ],\n\t\t\t\t[ \"aoSearchCols\", \"aoPreSearchCols\" ],\n\t\t\t\t[ \"iDisplayLength\", \"_iDisplayLength\" ]\n\t\t\t] );\n\t\t\t_fnMap( oSettings.oScroll, oInit, [\n\t\t\t\t[ \"sScrollX\", \"sX\" ],\n\t\t\t\t[ \"sScrollXInner\", \"sXInner\" ],\n\t\t\t\t[ \"sScrollY\", \"sY\" ],\n\t\t\t\t[ \"bScrollCollapse\", \"bCollapse\" ]\n\t\t\t] );\n\t\t\t_fnMap( oSettings.oLanguage, oInit, \"fnInfoCallback\" );\n\t\t\t\n\t\t\t/* Callback functions which are array driven */\n\t\t\t_fnCallbackReg( oSettings, 'aoDrawCallback',       oInit.fnDrawCallback,      'user' );\n\t\t\t_fnCallbackReg( oSettings, 'aoServerParams',       oInit.fnServerParams,      'user' );\n\t\t\t_fnCallbackReg( oSettings, 'aoStateSaveParams',    oInit.fnStateSaveParams,   'user' );\n\t\t\t_fnCallbackReg( oSettings, 'aoStateLoadParams',    oInit.fnStateLoadParams,   'user' );\n\t\t\t_fnCallbackReg( oSettings, 'aoStateLoaded',        oInit.fnStateLoaded,       'user' );\n\t\t\t_fnCallbackReg( oSettings, 'aoRowCallback',        oInit.fnRowCallback,       'user' );\n\t\t\t_fnCallbackReg( oSettings, 'aoRowCreatedCallback', oInit.fnCreatedRow,        'user' );\n\t\t\t_fnCallbackReg( oSettings, 'aoHeaderCallback',     oInit.fnHeaderCallback,    'user' );\n\t\t\t_fnCallbackReg( oSettings, 'aoFooterCallback',     oInit.fnFooterCallback,    'user' );\n\t\t\t_fnCallbackReg( oSettings, 'aoInitComplete',       oInit.fnInitComplete,      'user' );\n\t\t\t_fnCallbackReg( oSettings, 'aoPreDrawCallback',    oInit.fnPreDrawCallback,   'user' );\n\t\t\t\n\t\t\toSettings.rowIdFn = _fnGetObjectDataFn( oInit.rowId );\n\t\t\t\n\t\t\t/* Browser support detection */\n\t\t\t_fnBrowserDetect( oSettings );\n\t\t\t\n\t\t\tvar oClasses = oSettings.oClasses;\n\t\t\t\n\t\t\t$.extend( oClasses, DataTable.ext.classes, oInit.oClasses );\n\t\t\t$this.addClass( oClasses.sTable );\n\t\t\t\n\t\t\t\n\t\t\tif ( oSettings.iInitDisplayStart === undefined )\n\t\t\t{\n\t\t\t\t/* Display start point, taking into account the save saving */\n\t\t\t\toSettings.iInitDisplayStart = oInit.iDisplayStart;\n\t\t\t\toSettings._iDisplayStart = oInit.iDisplayStart;\n\t\t\t}\n\t\t\t\n\t\t\tif ( oInit.iDeferLoading !== null )\n\t\t\t{\n\t\t\t\toSettings.bDeferLoading = true;\n\t\t\t\tvar tmp = $.isArray( oInit.iDeferLoading );\n\t\t\t\toSettings._iRecordsDisplay = tmp ? oInit.iDeferLoading[0] : oInit.iDeferLoading;\n\t\t\t\toSettings._iRecordsTotal = tmp ? oInit.iDeferLoading[1] : oInit.iDeferLoading;\n\t\t\t}\n\t\t\t\n\t\t\t/* Language definitions */\n\t\t\tvar oLanguage = oSettings.oLanguage;\n\t\t\t$.extend( true, oLanguage, oInit.oLanguage );\n\t\t\t\n\t\t\tif ( oLanguage.sUrl )\n\t\t\t{\n\t\t\t\t/* Get the language definitions from a file - because this Ajax call makes the language\n\t\t\t\t * get async to the remainder of this function we use bInitHandedOff to indicate that\n\t\t\t\t * _fnInitialise will be fired by the returned Ajax handler, rather than the constructor\n\t\t\t\t */\n\t\t\t\t$.ajax( {\n\t\t\t\t\tdataType: 'json',\n\t\t\t\t\turl: oLanguage.sUrl,\n\t\t\t\t\tsuccess: function ( json ) {\n\t\t\t\t\t\t_fnLanguageCompat( json );\n\t\t\t\t\t\t_fnCamelToHungarian( defaults.oLanguage, json );\n\t\t\t\t\t\t$.extend( true, oLanguage, json );\n\t\t\t\t\t\t_fnInitialise( oSettings );\n\t\t\t\t\t},\n\t\t\t\t\terror: function () {\n\t\t\t\t\t\t// Error occurred loading language file, continue on as best we can\n\t\t\t\t\t\t_fnInitialise( oSettings );\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t\tbInitHandedOff = true;\n\t\t\t}\n\t\t\t\n\t\t\t/*\n\t\t\t * Stripes\n\t\t\t */\n\t\t\tif ( oInit.asStripeClasses === null )\n\t\t\t{\n\t\t\t\toSettings.asStripeClasses =[\n\t\t\t\t\toClasses.sStripeOdd,\n\t\t\t\t\toClasses.sStripeEven\n\t\t\t\t];\n\t\t\t}\n\t\t\t\n\t\t\t/* Remove row stripe classes if they are already on the table row */\n\t\t\tvar stripeClasses = oSettings.asStripeClasses;\n\t\t\tvar rowOne = $this.children('tbody').find('tr').eq(0);\n\t\t\tif ( $.inArray( true, $.map( stripeClasses, function(el, i) {\n\t\t\t\treturn rowOne.hasClass(el);\n\t\t\t} ) ) !== -1 ) {\n\t\t\t\t$('tbody tr', this).removeClass( stripeClasses.join(' ') );\n\t\t\t\toSettings.asDestroyStripes = stripeClasses.slice();\n\t\t\t}\n\t\t\t\n\t\t\t/*\n\t\t\t * Columns\n\t\t\t * See if we should load columns automatically or use defined ones\n\t\t\t */\n\t\t\tvar anThs = [];\n\t\t\tvar aoColumnsInit;\n\t\t\tvar nThead = this.getElementsByTagName('thead');\n\t\t\tif ( nThead.length !== 0 )\n\t\t\t{\n\t\t\t\t_fnDetectHeader( oSettings.aoHeader, nThead[0] );\n\t\t\t\tanThs = _fnGetUniqueThs( oSettings );\n\t\t\t}\n\t\t\t\n\t\t\t/* If not given a column array, generate one with nulls */\n\t\t\tif ( oInit.aoColumns === null )\n\t\t\t{\n\t\t\t\taoColumnsInit = [];\n\t\t\t\tfor ( i=0, iLen=anThs.length ; i<iLen ; i++ )\n\t\t\t\t{\n\t\t\t\t\taoColumnsInit.push( null );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\taoColumnsInit = oInit.aoColumns;\n\t\t\t}\n\t\t\t\n\t\t\t/* Add the columns */\n\t\t\tfor ( i=0, iLen=aoColumnsInit.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\t_fnAddColumn( oSettings, anThs ? anThs[i] : null );\n\t\t\t}\n\t\t\t\n\t\t\t/* Apply the column definitions */\n\t\t\t_fnApplyColumnDefs( oSettings, oInit.aoColumnDefs, aoColumnsInit, function (iCol, oDef) {\n\t\t\t\t_fnColumnOptions( oSettings, iCol, oDef );\n\t\t\t} );\n\t\t\t\n\t\t\t/* HTML5 attribute detection - build an mData object automatically if the\n\t\t\t * attributes are found\n\t\t\t */\n\t\t\tif ( rowOne.length ) {\n\t\t\t\tvar a = function ( cell, name ) {\n\t\t\t\t\treturn cell.getAttribute( 'data-'+name ) !== null ? name : null;\n\t\t\t\t};\n\t\t\t\n\t\t\t\t$( rowOne[0] ).children('th, td').each( function (i, cell) {\n\t\t\t\t\tvar col = oSettings.aoColumns[i];\n\t\t\t\n\t\t\t\t\tif ( col.mData === i ) {\n\t\t\t\t\t\tvar sort = a( cell, 'sort' ) || a( cell, 'order' );\n\t\t\t\t\t\tvar filter = a( cell, 'filter' ) || a( cell, 'search' );\n\t\t\t\n\t\t\t\t\t\tif ( sort !== null || filter !== null ) {\n\t\t\t\t\t\t\tcol.mData = {\n\t\t\t\t\t\t\t\t_:      i+'.display',\n\t\t\t\t\t\t\t\tsort:   sort !== null   ? i+'.@data-'+sort   : undefined,\n\t\t\t\t\t\t\t\ttype:   sort !== null   ? i+'.@data-'+sort   : undefined,\n\t\t\t\t\t\t\t\tfilter: filter !== null ? i+'.@data-'+filter : undefined\n\t\t\t\t\t\t\t};\n\t\t\t\n\t\t\t\t\t\t\t_fnColumnOptions( oSettings, i );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\t\t\t\n\t\t\tvar features = oSettings.oFeatures;\n\t\t\tvar loadedInit = function () {\n\t\t\t\t/*\n\t\t\t\t * Sorting\n\t\t\t\t * @todo For modularisation (1.11) this needs to do into a sort start up handler\n\t\t\t\t */\n\t\t\t\n\t\t\t\t// If aaSorting is not defined, then we use the first indicator in asSorting\n\t\t\t\t// in case that has been altered, so the default sort reflects that option\n\t\t\t\tif ( oInit.aaSorting === undefined ) {\n\t\t\t\t\tvar sorting = oSettings.aaSorting;\n\t\t\t\t\tfor ( i=0, iLen=sorting.length ; i<iLen ; i++ ) {\n\t\t\t\t\t\tsorting[i][1] = oSettings.aoColumns[ i ].asSorting[0];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\n\t\t\t\t/* Do a first pass on the sorting classes (allows any size changes to be taken into\n\t\t\t\t * account, and also will apply sorting disabled classes if disabled\n\t\t\t\t */\n\t\t\t\t_fnSortingClasses( oSettings );\n\t\t\t\n\t\t\t\tif ( features.bSort ) {\n\t\t\t\t\t_fnCallbackReg( oSettings, 'aoDrawCallback', function () {\n\t\t\t\t\t\tif ( oSettings.bSorted ) {\n\t\t\t\t\t\t\tvar aSort = _fnSortFlatten( oSettings );\n\t\t\t\t\t\t\tvar sortedColumns = {};\n\t\t\t\n\t\t\t\t\t\t\t$.each( aSort, function (i, val) {\n\t\t\t\t\t\t\t\tsortedColumns[ val.src ] = val.dir;\n\t\t\t\t\t\t\t} );\n\t\t\t\n\t\t\t\t\t\t\t_fnCallbackFire( oSettings, null, 'order', [oSettings, aSort, sortedColumns] );\n\t\t\t\t\t\t\t_fnSortAria( oSettings );\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t\n\t\t\t\t_fnCallbackReg( oSettings, 'aoDrawCallback', function () {\n\t\t\t\t\tif ( oSettings.bSorted || _fnDataSource( oSettings ) === 'ssp' || features.bDeferRender ) {\n\t\t\t\t\t\t_fnSortingClasses( oSettings );\n\t\t\t\t\t}\n\t\t\t\t}, 'sc' );\n\t\t\t\n\t\t\t\n\t\t\t\t/*\n\t\t\t\t * Final init\n\t\t\t\t * Cache the header, body and footer as required, creating them if needed\n\t\t\t\t */\n\t\t\t\n\t\t\t\t// Work around for Webkit bug 83867 - store the caption-side before removing from doc\n\t\t\t\tvar captions = $this.children('caption').each( function () {\n\t\t\t\t\tthis._captionSide = $(this).css('caption-side');\n\t\t\t\t} );\n\t\t\t\n\t\t\t\tvar thead = $this.children('thead');\n\t\t\t\tif ( thead.length === 0 ) {\n\t\t\t\t\tthead = $('<thead/>').appendTo($this);\n\t\t\t\t}\n\t\t\t\toSettings.nTHead = thead[0];\n\t\t\t\n\t\t\t\tvar tbody = $this.children('tbody');\n\t\t\t\tif ( tbody.length === 0 ) {\n\t\t\t\t\ttbody = $('<tbody/>').appendTo($this);\n\t\t\t\t}\n\t\t\t\toSettings.nTBody = tbody[0];\n\t\t\t\n\t\t\t\tvar tfoot = $this.children('tfoot');\n\t\t\t\tif ( tfoot.length === 0 && captions.length > 0 && (oSettings.oScroll.sX !== \"\" || oSettings.oScroll.sY !== \"\") ) {\n\t\t\t\t\t// If we are a scrolling table, and no footer has been given, then we need to create\n\t\t\t\t\t// a tfoot element for the caption element to be appended to\n\t\t\t\t\ttfoot = $('<tfoot/>').appendTo($this);\n\t\t\t\t}\n\t\t\t\n\t\t\t\tif ( tfoot.length === 0 || tfoot.children().length === 0 ) {\n\t\t\t\t\t$this.addClass( oClasses.sNoFooter );\n\t\t\t\t}\n\t\t\t\telse if ( tfoot.length > 0 ) {\n\t\t\t\t\toSettings.nTFoot = tfoot[0];\n\t\t\t\t\t_fnDetectHeader( oSettings.aoFooter, oSettings.nTFoot );\n\t\t\t\t}\n\t\t\t\n\t\t\t\t/* Check if there is data passing into the constructor */\n\t\t\t\tif ( oInit.aaData ) {\n\t\t\t\t\tfor ( i=0 ; i<oInit.aaData.length ; i++ ) {\n\t\t\t\t\t\t_fnAddData( oSettings, oInit.aaData[ i ] );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if ( oSettings.bDeferLoading || _fnDataSource( oSettings ) == 'dom' ) {\n\t\t\t\t\t/* Grab the data from the page - only do this when deferred loading or no Ajax\n\t\t\t\t\t * source since there is no point in reading the DOM data if we are then going\n\t\t\t\t\t * to replace it with Ajax data\n\t\t\t\t\t */\n\t\t\t\t\t_fnAddTr( oSettings, $(oSettings.nTBody).children('tr') );\n\t\t\t\t}\n\t\t\t\n\t\t\t\t/* Copy the data index array */\n\t\t\t\toSettings.aiDisplay = oSettings.aiDisplayMaster.slice();\n\t\t\t\n\t\t\t\t/* Initialisation complete - table can be drawn */\n\t\t\t\toSettings.bInitialised = true;\n\t\t\t\n\t\t\t\t/* Check if we need to initialise the table (it might not have been handed off to the\n\t\t\t\t * language processor)\n\t\t\t\t */\n\t\t\t\tif ( bInitHandedOff === false ) {\n\t\t\t\t\t_fnInitialise( oSettings );\n\t\t\t\t}\n\t\t\t};\n\t\t\t\n\t\t\t/* Must be done after everything which can be overridden by the state saving! */\n\t\t\tif ( oInit.bStateSave )\n\t\t\t{\n\t\t\t\tfeatures.bStateSave = true;\n\t\t\t\t_fnCallbackReg( oSettings, 'aoDrawCallback', _fnSaveState, 'state_save' );\n\t\t\t\t_fnLoadState( oSettings, oInit, loadedInit );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tloadedInit();\n\t\t\t}\n\t\t\t\n\t\t} );\n\t\t_that = null;\n\t\treturn this;\n\t};\n\n\t\n\t/*\n\t * It is useful to have variables which are scoped locally so only the\n\t * DataTables functions can access them and they don't leak into global space.\n\t * At the same time these functions are often useful over multiple files in the\n\t * core and API, so we list, or at least document, all variables which are used\n\t * by DataTables as private variables here. This also ensures that there is no\n\t * clashing of variable names and that they can easily referenced for reuse.\n\t */\n\t\n\t\n\t// Defined else where\n\t//  _selector_run\n\t//  _selector_opts\n\t//  _selector_first\n\t//  _selector_row_indexes\n\t\n\tvar _ext; // DataTable.ext\n\tvar _Api; // DataTable.Api\n\tvar _api_register; // DataTable.Api.register\n\tvar _api_registerPlural; // DataTable.Api.registerPlural\n\t\n\tvar _re_dic = {};\n\tvar _re_new_lines = /[\\r\\n\\u2028]/g;\n\tvar _re_html = /<.*?>/g;\n\t\n\t// This is not strict ISO8601 - Date.parse() is quite lax, although\n\t// implementations differ between browsers.\n\tvar _re_date = /^\\d{2,4}[\\.\\/\\-]\\d{1,2}[\\.\\/\\-]\\d{1,2}([T ]{1}\\d{1,2}[:\\.]\\d{2}([\\.:]\\d{2})?)?$/;\n\t\n\t// Escape regular expression special characters\n\tvar _re_escape_regex = new RegExp( '(\\\\' + [ '/', '.', '*', '+', '?', '|', '(', ')', '[', ']', '{', '}', '\\\\', '$', '^', '-' ].join('|\\\\') + ')', 'g' );\n\t\n\t// http://en.wikipedia.org/wiki/Foreign_exchange_market\n\t// - \\u20BD - Russian ruble.\n\t// - \\u20a9 - South Korean Won\n\t// - \\u20BA - Turkish Lira\n\t// - \\u20B9 - Indian Rupee\n\t// - R - Brazil (R$) and South Africa\n\t// - fr - Swiss Franc\n\t// - kr - Swedish krona, Norwegian krone and Danish krone\n\t// - \\u2009 is thin space and \\u202F is narrow no-break space, both used in many\n\t// - Ƀ - Bitcoin\n\t// - Ξ - Ethereum\n\t//   standards as thousands separators.\n\tvar _re_formatted_numeric = /[',$£€¥%\\u2009\\u202F\\u20BD\\u20a9\\u20BArfkɃΞ]/gi;\n\t\n\t\n\tvar _empty = function ( d ) {\n\t\treturn !d || d === true || d === '-' ? true : false;\n\t};\n\t\n\t\n\tvar _intVal = function ( s ) {\n\t\tvar integer = parseInt( s, 10 );\n\t\treturn !isNaN(integer) && isFinite(s) ? integer : null;\n\t};\n\t\n\t// Convert from a formatted number with characters other than `.` as the\n\t// decimal place, to a Javascript number\n\tvar _numToDecimal = function ( num, decimalPoint ) {\n\t\t// Cache created regular expressions for speed as this function is called often\n\t\tif ( ! _re_dic[ decimalPoint ] ) {\n\t\t\t_re_dic[ decimalPoint ] = new RegExp( _fnEscapeRegex( decimalPoint ), 'g' );\n\t\t}\n\t\treturn typeof num === 'string' && decimalPoint !== '.' ?\n\t\t\tnum.replace( /\\./g, '' ).replace( _re_dic[ decimalPoint ], '.' ) :\n\t\t\tnum;\n\t};\n\t\n\t\n\tvar _isNumber = function ( d, decimalPoint, formatted ) {\n\t\tvar strType = typeof d === 'string';\n\t\n\t\t// If empty return immediately so there must be a number if it is a\n\t\t// formatted string (this stops the string \"k\", or \"kr\", etc being detected\n\t\t// as a formatted number for currency\n\t\tif ( _empty( d ) ) {\n\t\t\treturn true;\n\t\t}\n\t\n\t\tif ( decimalPoint && strType ) {\n\t\t\td = _numToDecimal( d, decimalPoint );\n\t\t}\n\t\n\t\tif ( formatted && strType ) {\n\t\t\td = d.replace( _re_formatted_numeric, '' );\n\t\t}\n\t\n\t\treturn !isNaN( parseFloat(d) ) && isFinite( d );\n\t};\n\t\n\t\n\t// A string without HTML in it can be considered to be HTML still\n\tvar _isHtml = function ( d ) {\n\t\treturn _empty( d ) || typeof d === 'string';\n\t};\n\t\n\t\n\tvar _htmlNumeric = function ( d, decimalPoint, formatted ) {\n\t\tif ( _empty( d ) ) {\n\t\t\treturn true;\n\t\t}\n\t\n\t\tvar html = _isHtml( d );\n\t\treturn ! html ?\n\t\t\tnull :\n\t\t\t_isNumber( _stripHtml( d ), decimalPoint, formatted ) ?\n\t\t\t\ttrue :\n\t\t\t\tnull;\n\t};\n\t\n\t\n\tvar _pluck = function ( a, prop, prop2 ) {\n\t\tvar out = [];\n\t\tvar i=0, ien=a.length;\n\t\n\t\t// Could have the test in the loop for slightly smaller code, but speed\n\t\t// is essential here\n\t\tif ( prop2 !== undefined ) {\n\t\t\tfor ( ; i<ien ; i++ ) {\n\t\t\t\tif ( a[i] && a[i][ prop ] ) {\n\t\t\t\t\tout.push( a[i][ prop ][ prop2 ] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tfor ( ; i<ien ; i++ ) {\n\t\t\t\tif ( a[i] ) {\n\t\t\t\t\tout.push( a[i][ prop ] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\treturn out;\n\t};\n\t\n\t\n\t// Basically the same as _pluck, but rather than looping over `a` we use `order`\n\t// as the indexes to pick from `a`\n\tvar _pluck_order = function ( a, order, prop, prop2 )\n\t{\n\t\tvar out = [];\n\t\tvar i=0, ien=order.length;\n\t\n\t\t// Could have the test in the loop for slightly smaller code, but speed\n\t\t// is essential here\n\t\tif ( prop2 !== undefined ) {\n\t\t\tfor ( ; i<ien ; i++ ) {\n\t\t\t\tif ( a[ order[i] ][ prop ] ) {\n\t\t\t\t\tout.push( a[ order[i] ][ prop ][ prop2 ] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tfor ( ; i<ien ; i++ ) {\n\t\t\t\tout.push( a[ order[i] ][ prop ] );\n\t\t\t}\n\t\t}\n\t\n\t\treturn out;\n\t};\n\t\n\t\n\tvar _range = function ( len, start )\n\t{\n\t\tvar out = [];\n\t\tvar end;\n\t\n\t\tif ( start === undefined ) {\n\t\t\tstart = 0;\n\t\t\tend = len;\n\t\t}\n\t\telse {\n\t\t\tend = start;\n\t\t\tstart = len;\n\t\t}\n\t\n\t\tfor ( var i=start ; i<end ; i++ ) {\n\t\t\tout.push( i );\n\t\t}\n\t\n\t\treturn out;\n\t};\n\t\n\t\n\tvar _removeEmpty = function ( a )\n\t{\n\t\tvar out = [];\n\t\n\t\tfor ( var i=0, ien=a.length ; i<ien ; i++ ) {\n\t\t\tif ( a[i] ) { // careful - will remove all falsy values!\n\t\t\t\tout.push( a[i] );\n\t\t\t}\n\t\t}\n\t\n\t\treturn out;\n\t};\n\t\n\t\n\tvar _stripHtml = function ( d ) {\n\t\treturn d.replace( _re_html, '' );\n\t};\n\t\n\t\n\t/**\n\t * Determine if all values in the array are unique. This means we can short\n\t * cut the _unique method at the cost of a single loop. A sorted array is used\n\t * to easily check the values.\n\t *\n\t * @param  {array} src Source array\n\t * @return {boolean} true if all unique, false otherwise\n\t * @ignore\n\t */\n\tvar _areAllUnique = function ( src ) {\n\t\tif ( src.length < 2 ) {\n\t\t\treturn true;\n\t\t}\n\t\n\t\tvar sorted = src.slice().sort();\n\t\tvar last = sorted[0];\n\t\n\t\tfor ( var i=1, ien=sorted.length ; i<ien ; i++ ) {\n\t\t\tif ( sorted[i] === last ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\tlast = sorted[i];\n\t\t}\n\t\n\t\treturn true;\n\t};\n\t\n\t\n\t/**\n\t * Find the unique elements in a source array.\n\t *\n\t * @param  {array} src Source array\n\t * @return {array} Array of unique items\n\t * @ignore\n\t */\n\tvar _unique = function ( src )\n\t{\n\t\tif ( _areAllUnique( src ) ) {\n\t\t\treturn src.slice();\n\t\t}\n\t\n\t\t// A faster unique method is to use object keys to identify used values,\n\t\t// but this doesn't work with arrays or objects, which we must also\n\t\t// consider. See jsperf.com/compare-array-unique-versions/4 for more\n\t\t// information.\n\t\tvar\n\t\t\tout = [],\n\t\t\tval,\n\t\t\ti, ien=src.length,\n\t\t\tj, k=0;\n\t\n\t\tagain: for ( i=0 ; i<ien ; i++ ) {\n\t\t\tval = src[i];\n\t\n\t\t\tfor ( j=0 ; j<k ; j++ ) {\n\t\t\t\tif ( out[j] === val ) {\n\t\t\t\t\tcontinue again;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tout.push( val );\n\t\t\tk++;\n\t\t}\n\t\n\t\treturn out;\n\t};\n\t\n\t\n\t/**\n\t * DataTables utility methods\n\t * \n\t * This namespace provides helper methods that DataTables uses internally to\n\t * create a DataTable, but which are not exclusively used only for DataTables.\n\t * These methods can be used by extension authors to save the duplication of\n\t * code.\n\t *\n\t *  @namespace\n\t */\n\tDataTable.util = {\n\t\t/**\n\t\t * Throttle the calls to a function. Arguments and context are maintained\n\t\t * for the throttled function.\n\t\t *\n\t\t * @param {function} fn Function to be called\n\t\t * @param {integer} freq Call frequency in mS\n\t\t * @return {function} Wrapped function\n\t\t */\n\t\tthrottle: function ( fn, freq ) {\n\t\t\tvar\n\t\t\t\tfrequency = freq !== undefined ? freq : 200,\n\t\t\t\tlast,\n\t\t\t\ttimer;\n\t\n\t\t\treturn function () {\n\t\t\t\tvar\n\t\t\t\t\tthat = this,\n\t\t\t\t\tnow  = +new Date(),\n\t\t\t\t\targs = arguments;\n\t\n\t\t\t\tif ( last && now < last + frequency ) {\n\t\t\t\t\tclearTimeout( timer );\n\t\n\t\t\t\t\ttimer = setTimeout( function () {\n\t\t\t\t\t\tlast = undefined;\n\t\t\t\t\t\tfn.apply( that, args );\n\t\t\t\t\t}, frequency );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlast = now;\n\t\t\t\t\tfn.apply( that, args );\n\t\t\t\t}\n\t\t\t};\n\t\t},\n\t\n\t\n\t\t/**\n\t\t * Escape a string such that it can be used in a regular expression\n\t\t *\n\t\t *  @param {string} val string to escape\n\t\t *  @returns {string} escaped string\n\t\t */\n\t\tescapeRegex: function ( val ) {\n\t\t\treturn val.replace( _re_escape_regex, '\\\\$1' );\n\t\t}\n\t};\n\t\n\t\n\t\n\t/**\n\t * Create a mapping object that allows camel case parameters to be looked up\n\t * for their Hungarian counterparts. The mapping is stored in a private\n\t * parameter called `_hungarianMap` which can be accessed on the source object.\n\t *  @param {object} o\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnHungarianMap ( o )\n\t{\n\t\tvar\n\t\t\thungarian = 'a aa ai ao as b fn i m o s ',\n\t\t\tmatch,\n\t\t\tnewKey,\n\t\t\tmap = {};\n\t\n\t\t$.each( o, function (key, val) {\n\t\t\tmatch = key.match(/^([^A-Z]+?)([A-Z])/);\n\t\n\t\t\tif ( match && hungarian.indexOf(match[1]+' ') !== -1 )\n\t\t\t{\n\t\t\t\tnewKey = key.replace( match[0], match[2].toLowerCase() );\n\t\t\t\tmap[ newKey ] = key;\n\t\n\t\t\t\tif ( match[1] === 'o' )\n\t\t\t\t{\n\t\t\t\t\t_fnHungarianMap( o[key] );\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t\n\t\to._hungarianMap = map;\n\t}\n\t\n\t\n\t/**\n\t * Convert from camel case parameters to Hungarian, based on a Hungarian map\n\t * created by _fnHungarianMap.\n\t *  @param {object} src The model object which holds all parameters that can be\n\t *    mapped.\n\t *  @param {object} user The object to convert from camel case to Hungarian.\n\t *  @param {boolean} force When set to `true`, properties which already have a\n\t *    Hungarian value in the `user` object will be overwritten. Otherwise they\n\t *    won't be.\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnCamelToHungarian ( src, user, force )\n\t{\n\t\tif ( ! src._hungarianMap ) {\n\t\t\t_fnHungarianMap( src );\n\t\t}\n\t\n\t\tvar hungarianKey;\n\t\n\t\t$.each( user, function (key, val) {\n\t\t\thungarianKey = src._hungarianMap[ key ];\n\t\n\t\t\tif ( hungarianKey !== undefined && (force || user[hungarianKey] === undefined) )\n\t\t\t{\n\t\t\t\t// For objects, we need to buzz down into the object to copy parameters\n\t\t\t\tif ( hungarianKey.charAt(0) === 'o' )\n\t\t\t\t{\n\t\t\t\t\t// Copy the camelCase options over to the hungarian\n\t\t\t\t\tif ( ! user[ hungarianKey ] ) {\n\t\t\t\t\t\tuser[ hungarianKey ] = {};\n\t\t\t\t\t}\n\t\t\t\t\t$.extend( true, user[hungarianKey], user[key] );\n\t\n\t\t\t\t\t_fnCamelToHungarian( src[hungarianKey], user[hungarianKey], force );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tuser[hungarianKey] = user[ key ];\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t}\n\t\n\t\n\t/**\n\t * Language compatibility - when certain options are given, and others aren't, we\n\t * need to duplicate the values over, in order to provide backwards compatibility\n\t * with older language files.\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnLanguageCompat( lang )\n\t{\n\t\t// Note the use of the Hungarian notation for the parameters in this method as\n\t\t// this is called after the mapping of camelCase to Hungarian\n\t\tvar defaults = DataTable.defaults.oLanguage;\n\t\n\t\t// Default mapping\n\t\tvar defaultDecimal = defaults.sDecimal;\n\t\tif ( defaultDecimal ) {\n\t\t\t_addNumericSort( defaultDecimal );\n\t\t}\n\t\n\t\tif ( lang ) {\n\t\t\tvar zeroRecords = lang.sZeroRecords;\n\t\n\t\t\t// Backwards compatibility - if there is no sEmptyTable given, then use the same as\n\t\t\t// sZeroRecords - assuming that is given.\n\t\t\tif ( ! lang.sEmptyTable && zeroRecords &&\n\t\t\t\tdefaults.sEmptyTable === \"No data available in table\" )\n\t\t\t{\n\t\t\t\t_fnMap( lang, lang, 'sZeroRecords', 'sEmptyTable' );\n\t\t\t}\n\t\n\t\t\t// Likewise with loading records\n\t\t\tif ( ! lang.sLoadingRecords && zeroRecords &&\n\t\t\t\tdefaults.sLoadingRecords === \"Loading...\" )\n\t\t\t{\n\t\t\t\t_fnMap( lang, lang, 'sZeroRecords', 'sLoadingRecords' );\n\t\t\t}\n\t\n\t\t\t// Old parameter name of the thousands separator mapped onto the new\n\t\t\tif ( lang.sInfoThousands ) {\n\t\t\t\tlang.sThousands = lang.sInfoThousands;\n\t\t\t}\n\t\n\t\t\tvar decimal = lang.sDecimal;\n\t\t\tif ( decimal && defaultDecimal !== decimal ) {\n\t\t\t\t_addNumericSort( decimal );\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Map one parameter onto another\n\t *  @param {object} o Object to map\n\t *  @param {*} knew The new parameter name\n\t *  @param {*} old The old parameter name\n\t */\n\tvar _fnCompatMap = function ( o, knew, old ) {\n\t\tif ( o[ knew ] !== undefined ) {\n\t\t\to[ old ] = o[ knew ];\n\t\t}\n\t};\n\t\n\t\n\t/**\n\t * Provide backwards compatibility for the main DT options. Note that the new\n\t * options are mapped onto the old parameters, so this is an external interface\n\t * change only.\n\t *  @param {object} init Object to map\n\t */\n\tfunction _fnCompatOpts ( init )\n\t{\n\t\t_fnCompatMap( init, 'ordering',      'bSort' );\n\t\t_fnCompatMap( init, 'orderMulti',    'bSortMulti' );\n\t\t_fnCompatMap( init, 'orderClasses',  'bSortClasses' );\n\t\t_fnCompatMap( init, 'orderCellsTop', 'bSortCellsTop' );\n\t\t_fnCompatMap( init, 'order',         'aaSorting' );\n\t\t_fnCompatMap( init, 'orderFixed',    'aaSortingFixed' );\n\t\t_fnCompatMap( init, 'paging',        'bPaginate' );\n\t\t_fnCompatMap( init, 'pagingType',    'sPaginationType' );\n\t\t_fnCompatMap( init, 'pageLength',    'iDisplayLength' );\n\t\t_fnCompatMap( init, 'searching',     'bFilter' );\n\t\n\t\t// Boolean initialisation of x-scrolling\n\t\tif ( typeof init.sScrollX === 'boolean' ) {\n\t\t\tinit.sScrollX = init.sScrollX ? '100%' : '';\n\t\t}\n\t\tif ( typeof init.scrollX === 'boolean' ) {\n\t\t\tinit.scrollX = init.scrollX ? '100%' : '';\n\t\t}\n\t\n\t\t// Column search objects are in an array, so it needs to be converted\n\t\t// element by element\n\t\tvar searchCols = init.aoSearchCols;\n\t\n\t\tif ( searchCols ) {\n\t\t\tfor ( var i=0, ien=searchCols.length ; i<ien ; i++ ) {\n\t\t\t\tif ( searchCols[i] ) {\n\t\t\t\t\t_fnCamelToHungarian( DataTable.models.oSearch, searchCols[i] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Provide backwards compatibility for column options. Note that the new options\n\t * are mapped onto the old parameters, so this is an external interface change\n\t * only.\n\t *  @param {object} init Object to map\n\t */\n\tfunction _fnCompatCols ( init )\n\t{\n\t\t_fnCompatMap( init, 'orderable',     'bSortable' );\n\t\t_fnCompatMap( init, 'orderData',     'aDataSort' );\n\t\t_fnCompatMap( init, 'orderSequence', 'asSorting' );\n\t\t_fnCompatMap( init, 'orderDataType', 'sortDataType' );\n\t\n\t\t// orderData can be given as an integer\n\t\tvar dataSort = init.aDataSort;\n\t\tif ( typeof dataSort === 'number' && ! $.isArray( dataSort ) ) {\n\t\t\tinit.aDataSort = [ dataSort ];\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Browser feature detection for capabilities, quirks\n\t *  @param {object} settings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnBrowserDetect( settings )\n\t{\n\t\t// We don't need to do this every time DataTables is constructed, the values\n\t\t// calculated are specific to the browser and OS configuration which we\n\t\t// don't expect to change between initialisations\n\t\tif ( ! DataTable.__browser ) {\n\t\t\tvar browser = {};\n\t\t\tDataTable.__browser = browser;\n\t\n\t\t\t// Scrolling feature / quirks detection\n\t\t\tvar n = $('<div/>')\n\t\t\t\t.css( {\n\t\t\t\t\tposition: 'fixed',\n\t\t\t\t\ttop: 0,\n\t\t\t\t\tleft: $(window).scrollLeft()*-1, // allow for scrolling\n\t\t\t\t\theight: 1,\n\t\t\t\t\twidth: 1,\n\t\t\t\t\toverflow: 'hidden'\n\t\t\t\t} )\n\t\t\t\t.append(\n\t\t\t\t\t$('<div/>')\n\t\t\t\t\t\t.css( {\n\t\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\t\ttop: 1,\n\t\t\t\t\t\t\tleft: 1,\n\t\t\t\t\t\t\twidth: 100,\n\t\t\t\t\t\t\toverflow: 'scroll'\n\t\t\t\t\t\t} )\n\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\t$('<div/>')\n\t\t\t\t\t\t\t\t.css( {\n\t\t\t\t\t\t\t\t\twidth: '100%',\n\t\t\t\t\t\t\t\t\theight: 10\n\t\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t\t.appendTo( 'body' );\n\t\n\t\t\tvar outer = n.children();\n\t\t\tvar inner = outer.children();\n\t\n\t\t\t// Numbers below, in order, are:\n\t\t\t// inner.offsetWidth, inner.clientWidth, outer.offsetWidth, outer.clientWidth\n\t\t\t//\n\t\t\t// IE6 XP:                           100 100 100  83\n\t\t\t// IE7 Vista:                        100 100 100  83\n\t\t\t// IE 8+ Windows:                     83  83 100  83\n\t\t\t// Evergreen Windows:                 83  83 100  83\n\t\t\t// Evergreen Mac with scrollbars:     85  85 100  85\n\t\t\t// Evergreen Mac without scrollbars: 100 100 100 100\n\t\n\t\t\t// Get scrollbar width\n\t\t\tbrowser.barWidth = outer[0].offsetWidth - outer[0].clientWidth;\n\t\n\t\t\t// IE6/7 will oversize a width 100% element inside a scrolling element, to\n\t\t\t// include the width of the scrollbar, while other browsers ensure the inner\n\t\t\t// element is contained without forcing scrolling\n\t\t\tbrowser.bScrollOversize = inner[0].offsetWidth === 100 && outer[0].clientWidth !== 100;\n\t\n\t\t\t// In rtl text layout, some browsers (most, but not all) will place the\n\t\t\t// scrollbar on the left, rather than the right.\n\t\t\tbrowser.bScrollbarLeft = Math.round( inner.offset().left ) !== 1;\n\t\n\t\t\t// IE8- don't provide height and width for getBoundingClientRect\n\t\t\tbrowser.bBounding = n[0].getBoundingClientRect().width ? true : false;\n\t\n\t\t\tn.remove();\n\t\t}\n\t\n\t\t$.extend( settings.oBrowser, DataTable.__browser );\n\t\tsettings.oScroll.iBarWidth = DataTable.__browser.barWidth;\n\t}\n\t\n\t\n\t/**\n\t * Array.prototype reduce[Right] method, used for browsers which don't support\n\t * JS 1.6. Done this way to reduce code size, since we iterate either way\n\t *  @param {object} settings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnReduce ( that, fn, init, start, end, inc )\n\t{\n\t\tvar\n\t\t\ti = start,\n\t\t\tvalue,\n\t\t\tisSet = false;\n\t\n\t\tif ( init !== undefined ) {\n\t\t\tvalue = init;\n\t\t\tisSet = true;\n\t\t}\n\t\n\t\twhile ( i !== end ) {\n\t\t\tif ( ! that.hasOwnProperty(i) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\n\t\t\tvalue = isSet ?\n\t\t\t\tfn( value, that[i], i, that ) :\n\t\t\t\tthat[i];\n\t\n\t\t\tisSet = true;\n\t\t\ti += inc;\n\t\t}\n\t\n\t\treturn value;\n\t}\n\t\n\t/**\n\t * Add a column to the list used for the table with default values\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {node} nTh The th element for this column\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnAddColumn( oSettings, nTh )\n\t{\n\t\t// Add column to aoColumns array\n\t\tvar oDefaults = DataTable.defaults.column;\n\t\tvar iCol = oSettings.aoColumns.length;\n\t\tvar oCol = $.extend( {}, DataTable.models.oColumn, oDefaults, {\n\t\t\t\"nTh\": nTh ? nTh : document.createElement('th'),\n\t\t\t\"sTitle\":    oDefaults.sTitle    ? oDefaults.sTitle    : nTh ? nTh.innerHTML : '',\n\t\t\t\"aDataSort\": oDefaults.aDataSort ? oDefaults.aDataSort : [iCol],\n\t\t\t\"mData\": oDefaults.mData ? oDefaults.mData : iCol,\n\t\t\tidx: iCol\n\t\t} );\n\t\toSettings.aoColumns.push( oCol );\n\t\n\t\t// Add search object for column specific search. Note that the `searchCols[ iCol ]`\n\t\t// passed into extend can be undefined. This allows the user to give a default\n\t\t// with only some of the parameters defined, and also not give a default\n\t\tvar searchCols = oSettings.aoPreSearchCols;\n\t\tsearchCols[ iCol ] = $.extend( {}, DataTable.models.oSearch, searchCols[ iCol ] );\n\t\n\t\t// Use the default column options function to initialise classes etc\n\t\t_fnColumnOptions( oSettings, iCol, $(nTh).data() );\n\t}\n\t\n\t\n\t/**\n\t * Apply options for a column\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {int} iCol column index to consider\n\t *  @param {object} oOptions object with sType, bVisible and bSearchable etc\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnColumnOptions( oSettings, iCol, oOptions )\n\t{\n\t\tvar oCol = oSettings.aoColumns[ iCol ];\n\t\tvar oClasses = oSettings.oClasses;\n\t\tvar th = $(oCol.nTh);\n\t\n\t\t// Try to get width information from the DOM. We can't get it from CSS\n\t\t// as we'd need to parse the CSS stylesheet. `width` option can override\n\t\tif ( ! oCol.sWidthOrig ) {\n\t\t\t// Width attribute\n\t\t\toCol.sWidthOrig = th.attr('width') || null;\n\t\n\t\t\t// Style attribute\n\t\t\tvar t = (th.attr('style') || '').match(/width:\\s*(\\d+[pxem%]+)/);\n\t\t\tif ( t ) {\n\t\t\t\toCol.sWidthOrig = t[1];\n\t\t\t}\n\t\t}\n\t\n\t\t/* User specified column options */\n\t\tif ( oOptions !== undefined && oOptions !== null )\n\t\t{\n\t\t\t// Backwards compatibility\n\t\t\t_fnCompatCols( oOptions );\n\t\n\t\t\t// Map camel case parameters to their Hungarian counterparts\n\t\t\t_fnCamelToHungarian( DataTable.defaults.column, oOptions, true );\n\t\n\t\t\t/* Backwards compatibility for mDataProp */\n\t\t\tif ( oOptions.mDataProp !== undefined && !oOptions.mData )\n\t\t\t{\n\t\t\t\toOptions.mData = oOptions.mDataProp;\n\t\t\t}\n\t\n\t\t\tif ( oOptions.sType )\n\t\t\t{\n\t\t\t\toCol._sManualType = oOptions.sType;\n\t\t\t}\n\t\n\t\t\t// `class` is a reserved word in Javascript, so we need to provide\n\t\t\t// the ability to use a valid name for the camel case input\n\t\t\tif ( oOptions.className && ! oOptions.sClass )\n\t\t\t{\n\t\t\t\toOptions.sClass = oOptions.className;\n\t\t\t}\n\t\t\tif ( oOptions.sClass ) {\n\t\t\t\tth.addClass( oOptions.sClass );\n\t\t\t}\n\t\n\t\t\t$.extend( oCol, oOptions );\n\t\t\t_fnMap( oCol, oOptions, \"sWidth\", \"sWidthOrig\" );\n\t\n\t\t\t/* iDataSort to be applied (backwards compatibility), but aDataSort will take\n\t\t\t * priority if defined\n\t\t\t */\n\t\t\tif ( oOptions.iDataSort !== undefined )\n\t\t\t{\n\t\t\t\toCol.aDataSort = [ oOptions.iDataSort ];\n\t\t\t}\n\t\t\t_fnMap( oCol, oOptions, \"aDataSort\" );\n\t\t}\n\t\n\t\t/* Cache the data get and set functions for speed */\n\t\tvar mDataSrc = oCol.mData;\n\t\tvar mData = _fnGetObjectDataFn( mDataSrc );\n\t\tvar mRender = oCol.mRender ? _fnGetObjectDataFn( oCol.mRender ) : null;\n\t\n\t\tvar attrTest = function( src ) {\n\t\t\treturn typeof src === 'string' && src.indexOf('@') !== -1;\n\t\t};\n\t\toCol._bAttrSrc = $.isPlainObject( mDataSrc ) && (\n\t\t\tattrTest(mDataSrc.sort) || attrTest(mDataSrc.type) || attrTest(mDataSrc.filter)\n\t\t);\n\t\toCol._setter = null;\n\t\n\t\toCol.fnGetData = function (rowData, type, meta) {\n\t\t\tvar innerData = mData( rowData, type, undefined, meta );\n\t\n\t\t\treturn mRender && type ?\n\t\t\t\tmRender( innerData, type, rowData, meta ) :\n\t\t\t\tinnerData;\n\t\t};\n\t\toCol.fnSetData = function ( rowData, val, meta ) {\n\t\t\treturn _fnSetObjectDataFn( mDataSrc )( rowData, val, meta );\n\t\t};\n\t\n\t\t// Indicate if DataTables should read DOM data as an object or array\n\t\t// Used in _fnGetRowElements\n\t\tif ( typeof mDataSrc !== 'number' ) {\n\t\t\toSettings._rowReadObject = true;\n\t\t}\n\t\n\t\t/* Feature sorting overrides column specific when off */\n\t\tif ( !oSettings.oFeatures.bSort )\n\t\t{\n\t\t\toCol.bSortable = false;\n\t\t\tth.addClass( oClasses.sSortableNone ); // Have to add class here as order event isn't called\n\t\t}\n\t\n\t\t/* Check that the class assignment is correct for sorting */\n\t\tvar bAsc = $.inArray('asc', oCol.asSorting) !== -1;\n\t\tvar bDesc = $.inArray('desc', oCol.asSorting) !== -1;\n\t\tif ( !oCol.bSortable || (!bAsc && !bDesc) )\n\t\t{\n\t\t\toCol.sSortingClass = oClasses.sSortableNone;\n\t\t\toCol.sSortingClassJUI = \"\";\n\t\t}\n\t\telse if ( bAsc && !bDesc )\n\t\t{\n\t\t\toCol.sSortingClass = oClasses.sSortableAsc;\n\t\t\toCol.sSortingClassJUI = oClasses.sSortJUIAscAllowed;\n\t\t}\n\t\telse if ( !bAsc && bDesc )\n\t\t{\n\t\t\toCol.sSortingClass = oClasses.sSortableDesc;\n\t\t\toCol.sSortingClassJUI = oClasses.sSortJUIDescAllowed;\n\t\t}\n\t\telse\n\t\t{\n\t\t\toCol.sSortingClass = oClasses.sSortable;\n\t\t\toCol.sSortingClassJUI = oClasses.sSortJUI;\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Adjust the table column widths for new data. Note: you would probably want to\n\t * do a redraw after calling this function!\n\t *  @param {object} settings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnAdjustColumnSizing ( settings )\n\t{\n\t\t/* Not interested in doing column width calculation if auto-width is disabled */\n\t\tif ( settings.oFeatures.bAutoWidth !== false )\n\t\t{\n\t\t\tvar columns = settings.aoColumns;\n\t\n\t\t\t_fnCalculateColumnWidths( settings );\n\t\t\tfor ( var i=0 , iLen=columns.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\tcolumns[i].nTh.style.width = columns[i].sWidth;\n\t\t\t}\n\t\t}\n\t\n\t\tvar scroll = settings.oScroll;\n\t\tif ( scroll.sY !== '' || scroll.sX !== '')\n\t\t{\n\t\t\t_fnScrollDraw( settings );\n\t\t}\n\t\n\t\t_fnCallbackFire( settings, null, 'column-sizing', [settings] );\n\t}\n\t\n\t\n\t/**\n\t * Covert the index of a visible column to the index in the data array (take account\n\t * of hidden columns)\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {int} iMatch Visible column index to lookup\n\t *  @returns {int} i the data index\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnVisibleToColumnIndex( oSettings, iMatch )\n\t{\n\t\tvar aiVis = _fnGetColumns( oSettings, 'bVisible' );\n\t\n\t\treturn typeof aiVis[iMatch] === 'number' ?\n\t\t\taiVis[iMatch] :\n\t\t\tnull;\n\t}\n\t\n\t\n\t/**\n\t * Covert the index of an index in the data array and convert it to the visible\n\t *   column index (take account of hidden columns)\n\t *  @param {int} iMatch Column index to lookup\n\t *  @param {object} oSettings dataTables settings object\n\t *  @returns {int} i the data index\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnColumnIndexToVisible( oSettings, iMatch )\n\t{\n\t\tvar aiVis = _fnGetColumns( oSettings, 'bVisible' );\n\t\tvar iPos = $.inArray( iMatch, aiVis );\n\t\n\t\treturn iPos !== -1 ? iPos : null;\n\t}\n\t\n\t\n\t/**\n\t * Get the number of visible columns\n\t *  @param {object} oSettings dataTables settings object\n\t *  @returns {int} i the number of visible columns\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnVisbleColumns( oSettings )\n\t{\n\t\tvar vis = 0;\n\t\n\t\t// No reduce in IE8, use a loop for now\n\t\t$.each( oSettings.aoColumns, function ( i, col ) {\n\t\t\tif ( col.bVisible && $(col.nTh).css('display') !== 'none' ) {\n\t\t\t\tvis++;\n\t\t\t}\n\t\t} );\n\t\n\t\treturn vis;\n\t}\n\t\n\t\n\t/**\n\t * Get an array of column indexes that match a given property\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {string} sParam Parameter in aoColumns to look for - typically\n\t *    bVisible or bSearchable\n\t *  @returns {array} Array of indexes with matched properties\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnGetColumns( oSettings, sParam )\n\t{\n\t\tvar a = [];\n\t\n\t\t$.map( oSettings.aoColumns, function(val, i) {\n\t\t\tif ( val[sParam] ) {\n\t\t\t\ta.push( i );\n\t\t\t}\n\t\t} );\n\t\n\t\treturn a;\n\t}\n\t\n\t\n\t/**\n\t * Calculate the 'type' of a column\n\t *  @param {object} settings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnColumnTypes ( settings )\n\t{\n\t\tvar columns = settings.aoColumns;\n\t\tvar data = settings.aoData;\n\t\tvar types = DataTable.ext.type.detect;\n\t\tvar i, ien, j, jen, k, ken;\n\t\tvar col, cell, detectedType, cache;\n\t\n\t\t// For each column, spin over the \n\t\tfor ( i=0, ien=columns.length ; i<ien ; i++ ) {\n\t\t\tcol = columns[i];\n\t\t\tcache = [];\n\t\n\t\t\tif ( ! col.sType && col._sManualType ) {\n\t\t\t\tcol.sType = col._sManualType;\n\t\t\t}\n\t\t\telse if ( ! col.sType ) {\n\t\t\t\tfor ( j=0, jen=types.length ; j<jen ; j++ ) {\n\t\t\t\t\tfor ( k=0, ken=data.length ; k<ken ; k++ ) {\n\t\t\t\t\t\t// Use a cache array so we only need to get the type data\n\t\t\t\t\t\t// from the formatter once (when using multiple detectors)\n\t\t\t\t\t\tif ( cache[k] === undefined ) {\n\t\t\t\t\t\t\tcache[k] = _fnGetCellData( settings, k, i, 'type' );\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tdetectedType = types[j]( cache[k], settings );\n\t\n\t\t\t\t\t\t// If null, then this type can't apply to this column, so\n\t\t\t\t\t\t// rather than testing all cells, break out. There is an\n\t\t\t\t\t\t// exception for the last type which is `html`. We need to\n\t\t\t\t\t\t// scan all rows since it is possible to mix string and HTML\n\t\t\t\t\t\t// types\n\t\t\t\t\t\tif ( ! detectedType && j !== types.length-1 ) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t// Only a single match is needed for html type since it is\n\t\t\t\t\t\t// bottom of the pile and very similar to string\n\t\t\t\t\t\tif ( detectedType === 'html' ) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Type is valid for all data points in the column - use this\n\t\t\t\t\t// type\n\t\t\t\t\tif ( detectedType ) {\n\t\t\t\t\t\tcol.sType = detectedType;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\t// Fall back - if no type was detected, always use string\n\t\t\t\tif ( ! col.sType ) {\n\t\t\t\t\tcol.sType = 'string';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Take the column definitions and static columns arrays and calculate how\n\t * they relate to column indexes. The callback function will then apply the\n\t * definition found for a column to a suitable configuration object.\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {array} aoColDefs The aoColumnDefs array that is to be applied\n\t *  @param {array} aoCols The aoColumns array that defines columns individually\n\t *  @param {function} fn Callback function - takes two parameters, the calculated\n\t *    column index and the definition for that column.\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnApplyColumnDefs( oSettings, aoColDefs, aoCols, fn )\n\t{\n\t\tvar i, iLen, j, jLen, k, kLen, def;\n\t\tvar columns = oSettings.aoColumns;\n\t\n\t\t// Column definitions with aTargets\n\t\tif ( aoColDefs )\n\t\t{\n\t\t\t/* Loop over the definitions array - loop in reverse so first instance has priority */\n\t\t\tfor ( i=aoColDefs.length-1 ; i>=0 ; i-- )\n\t\t\t{\n\t\t\t\tdef = aoColDefs[i];\n\t\n\t\t\t\t/* Each definition can target multiple columns, as it is an array */\n\t\t\t\tvar aTargets = def.targets !== undefined ?\n\t\t\t\t\tdef.targets :\n\t\t\t\t\tdef.aTargets;\n\t\n\t\t\t\tif ( ! $.isArray( aTargets ) )\n\t\t\t\t{\n\t\t\t\t\taTargets = [ aTargets ];\n\t\t\t\t}\n\t\n\t\t\t\tfor ( j=0, jLen=aTargets.length ; j<jLen ; j++ )\n\t\t\t\t{\n\t\t\t\t\tif ( typeof aTargets[j] === 'number' && aTargets[j] >= 0 )\n\t\t\t\t\t{\n\t\t\t\t\t\t/* Add columns that we don't yet know about */\n\t\t\t\t\t\twhile( columns.length <= aTargets[j] )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t_fnAddColumn( oSettings );\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t/* Integer, basic index */\n\t\t\t\t\t\tfn( aTargets[j], def );\n\t\t\t\t\t}\n\t\t\t\t\telse if ( typeof aTargets[j] === 'number' && aTargets[j] < 0 )\n\t\t\t\t\t{\n\t\t\t\t\t\t/* Negative integer, right to left column counting */\n\t\t\t\t\t\tfn( columns.length+aTargets[j], def );\n\t\t\t\t\t}\n\t\t\t\t\telse if ( typeof aTargets[j] === 'string' )\n\t\t\t\t\t{\n\t\t\t\t\t\t/* Class name matching on TH element */\n\t\t\t\t\t\tfor ( k=0, kLen=columns.length ; k<kLen ; k++ )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif ( aTargets[j] == \"_all\" ||\n\t\t\t\t\t\t\t     $(columns[k].nTh).hasClass( aTargets[j] ) )\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tfn( k, def );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\t// Statically defined columns array\n\t\tif ( aoCols )\n\t\t{\n\t\t\tfor ( i=0, iLen=aoCols.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\tfn( i, aoCols[i] );\n\t\t\t}\n\t\t}\n\t}\n\t\n\t/**\n\t * Add a data array to the table, creating DOM node etc. This is the parallel to\n\t * _fnGatherData, but for adding rows from a Javascript source, rather than a\n\t * DOM source.\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {array} aData data array to be added\n\t *  @param {node} [nTr] TR element to add to the table - optional. If not given,\n\t *    DataTables will create a row automatically\n\t *  @param {array} [anTds] Array of TD|TH elements for the row - must be given\n\t *    if nTr is.\n\t *  @returns {int} >=0 if successful (index of new aoData entry), -1 if failed\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnAddData ( oSettings, aDataIn, nTr, anTds )\n\t{\n\t\t/* Create the object for storing information about this new row */\n\t\tvar iRow = oSettings.aoData.length;\n\t\tvar oData = $.extend( true, {}, DataTable.models.oRow, {\n\t\t\tsrc: nTr ? 'dom' : 'data',\n\t\t\tidx: iRow\n\t\t} );\n\t\n\t\toData._aData = aDataIn;\n\t\toSettings.aoData.push( oData );\n\t\n\t\t/* Create the cells */\n\t\tvar nTd, sThisType;\n\t\tvar columns = oSettings.aoColumns;\n\t\n\t\t// Invalidate the column types as the new data needs to be revalidated\n\t\tfor ( var i=0, iLen=columns.length ; i<iLen ; i++ )\n\t\t{\n\t\t\tcolumns[i].sType = null;\n\t\t}\n\t\n\t\t/* Add to the display array */\n\t\toSettings.aiDisplayMaster.push( iRow );\n\t\n\t\tvar id = oSettings.rowIdFn( aDataIn );\n\t\tif ( id !== undefined ) {\n\t\t\toSettings.aIds[ id ] = oData;\n\t\t}\n\t\n\t\t/* Create the DOM information, or register it if already present */\n\t\tif ( nTr || ! oSettings.oFeatures.bDeferRender )\n\t\t{\n\t\t\t_fnCreateTr( oSettings, iRow, nTr, anTds );\n\t\t}\n\t\n\t\treturn iRow;\n\t}\n\t\n\t\n\t/**\n\t * Add one or more TR elements to the table. Generally we'd expect to\n\t * use this for reading data from a DOM sourced table, but it could be\n\t * used for an TR element. Note that if a TR is given, it is used (i.e.\n\t * it is not cloned).\n\t *  @param {object} settings dataTables settings object\n\t *  @param {array|node|jQuery} trs The TR element(s) to add to the table\n\t *  @returns {array} Array of indexes for the added rows\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnAddTr( settings, trs )\n\t{\n\t\tvar row;\n\t\n\t\t// Allow an individual node to be passed in\n\t\tif ( ! (trs instanceof $) ) {\n\t\t\ttrs = $(trs);\n\t\t}\n\t\n\t\treturn trs.map( function (i, el) {\n\t\t\trow = _fnGetRowElements( settings, el );\n\t\t\treturn _fnAddData( settings, row.data, el, row.cells );\n\t\t} );\n\t}\n\t\n\t\n\t/**\n\t * Take a TR element and convert it to an index in aoData\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {node} n the TR element to find\n\t *  @returns {int} index if the node is found, null if not\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnNodeToDataIndex( oSettings, n )\n\t{\n\t\treturn (n._DT_RowIndex!==undefined) ? n._DT_RowIndex : null;\n\t}\n\t\n\t\n\t/**\n\t * Take a TD element and convert it into a column data index (not the visible index)\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {int} iRow The row number the TD/TH can be found in\n\t *  @param {node} n The TD/TH element to find\n\t *  @returns {int} index if the node is found, -1 if not\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnNodeToColumnIndex( oSettings, iRow, n )\n\t{\n\t\treturn $.inArray( n, oSettings.aoData[ iRow ].anCells );\n\t}\n\t\n\t\n\t/**\n\t * Get the data for a given cell from the internal cache, taking into account data mapping\n\t *  @param {object} settings dataTables settings object\n\t *  @param {int} rowIdx aoData row id\n\t *  @param {int} colIdx Column index\n\t *  @param {string} type data get type ('display', 'type' 'filter' 'sort')\n\t *  @returns {*} Cell data\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnGetCellData( settings, rowIdx, colIdx, type )\n\t{\n\t\tvar draw           = settings.iDraw;\n\t\tvar col            = settings.aoColumns[colIdx];\n\t\tvar rowData        = settings.aoData[rowIdx]._aData;\n\t\tvar defaultContent = col.sDefaultContent;\n\t\tvar cellData       = col.fnGetData( rowData, type, {\n\t\t\tsettings: settings,\n\t\t\trow:      rowIdx,\n\t\t\tcol:      colIdx\n\t\t} );\n\t\n\t\tif ( cellData === undefined ) {\n\t\t\tif ( settings.iDrawError != draw && defaultContent === null ) {\n\t\t\t\t_fnLog( settings, 0, \"Requested unknown parameter \"+\n\t\t\t\t\t(typeof col.mData=='function' ? '{function}' : \"'\"+col.mData+\"'\")+\n\t\t\t\t\t\" for row \"+rowIdx+\", column \"+colIdx, 4 );\n\t\t\t\tsettings.iDrawError = draw;\n\t\t\t}\n\t\t\treturn defaultContent;\n\t\t}\n\t\n\t\t// When the data source is null and a specific data type is requested (i.e.\n\t\t// not the original data), we can use default column data\n\t\tif ( (cellData === rowData || cellData === null) && defaultContent !== null && type !== undefined ) {\n\t\t\tcellData = defaultContent;\n\t\t}\n\t\telse if ( typeof cellData === 'function' ) {\n\t\t\t// If the data source is a function, then we run it and use the return,\n\t\t\t// executing in the scope of the data object (for instances)\n\t\t\treturn cellData.call( rowData );\n\t\t}\n\t\n\t\tif ( cellData === null && type == 'display' ) {\n\t\t\treturn '';\n\t\t}\n\t\treturn cellData;\n\t}\n\t\n\t\n\t/**\n\t * Set the value for a specific cell, into the internal data cache\n\t *  @param {object} settings dataTables settings object\n\t *  @param {int} rowIdx aoData row id\n\t *  @param {int} colIdx Column index\n\t *  @param {*} val Value to set\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnSetCellData( settings, rowIdx, colIdx, val )\n\t{\n\t\tvar col     = settings.aoColumns[colIdx];\n\t\tvar rowData = settings.aoData[rowIdx]._aData;\n\t\n\t\tcol.fnSetData( rowData, val, {\n\t\t\tsettings: settings,\n\t\t\trow:      rowIdx,\n\t\t\tcol:      colIdx\n\t\t}  );\n\t}\n\t\n\t\n\t// Private variable that is used to match action syntax in the data property object\n\tvar __reArray = /\\[.*?\\]$/;\n\tvar __reFn = /\\(\\)$/;\n\t\n\t/**\n\t * Split string on periods, taking into account escaped periods\n\t * @param  {string} str String to split\n\t * @return {array} Split string\n\t */\n\tfunction _fnSplitObjNotation( str )\n\t{\n\t\treturn $.map( str.match(/(\\\\.|[^\\.])+/g) || [''], function ( s ) {\n\t\t\treturn s.replace(/\\\\\\./g, '.');\n\t\t} );\n\t}\n\t\n\t\n\t/**\n\t * Return a function that can be used to get data from a source object, taking\n\t * into account the ability to use nested objects as a source\n\t *  @param {string|int|function} mSource The data source for the object\n\t *  @returns {function} Data get function\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnGetObjectDataFn( mSource )\n\t{\n\t\tif ( $.isPlainObject( mSource ) )\n\t\t{\n\t\t\t/* Build an object of get functions, and wrap them in a single call */\n\t\t\tvar o = {};\n\t\t\t$.each( mSource, function (key, val) {\n\t\t\t\tif ( val ) {\n\t\t\t\t\to[key] = _fnGetObjectDataFn( val );\n\t\t\t\t}\n\t\t\t} );\n\t\n\t\t\treturn function (data, type, row, meta) {\n\t\t\t\tvar t = o[type] || o._;\n\t\t\t\treturn t !== undefined ?\n\t\t\t\t\tt(data, type, row, meta) :\n\t\t\t\t\tdata;\n\t\t\t};\n\t\t}\n\t\telse if ( mSource === null )\n\t\t{\n\t\t\t/* Give an empty string for rendering / sorting etc */\n\t\t\treturn function (data) { // type, row and meta also passed, but not used\n\t\t\t\treturn data;\n\t\t\t};\n\t\t}\n\t\telse if ( typeof mSource === 'function' )\n\t\t{\n\t\t\treturn function (data, type, row, meta) {\n\t\t\t\treturn mSource( data, type, row, meta );\n\t\t\t};\n\t\t}\n\t\telse if ( typeof mSource === 'string' && (mSource.indexOf('.') !== -1 ||\n\t\t\t      mSource.indexOf('[') !== -1 || mSource.indexOf('(') !== -1) )\n\t\t{\n\t\t\t/* If there is a . in the source string then the data source is in a\n\t\t\t * nested object so we loop over the data for each level to get the next\n\t\t\t * level down. On each loop we test for undefined, and if found immediately\n\t\t\t * return. This allows entire objects to be missing and sDefaultContent to\n\t\t\t * be used if defined, rather than throwing an error\n\t\t\t */\n\t\t\tvar fetchData = function (data, type, src) {\n\t\t\t\tvar arrayNotation, funcNotation, out, innerSrc;\n\t\n\t\t\t\tif ( src !== \"\" )\n\t\t\t\t{\n\t\t\t\t\tvar a = _fnSplitObjNotation( src );\n\t\n\t\t\t\t\tfor ( var i=0, iLen=a.length ; i<iLen ; i++ )\n\t\t\t\t\t{\n\t\t\t\t\t\t// Check if we are dealing with special notation\n\t\t\t\t\t\tarrayNotation = a[i].match(__reArray);\n\t\t\t\t\t\tfuncNotation = a[i].match(__reFn);\n\t\n\t\t\t\t\t\tif ( arrayNotation )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Array notation\n\t\t\t\t\t\t\ta[i] = a[i].replace(__reArray, '');\n\t\n\t\t\t\t\t\t\t// Condition allows simply [] to be passed in\n\t\t\t\t\t\t\tif ( a[i] !== \"\" ) {\n\t\t\t\t\t\t\t\tdata = data[ a[i] ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tout = [];\n\t\n\t\t\t\t\t\t\t// Get the remainder of the nested object to get\n\t\t\t\t\t\t\ta.splice( 0, i+1 );\n\t\t\t\t\t\t\tinnerSrc = a.join('.');\n\t\n\t\t\t\t\t\t\t// Traverse each entry in the array getting the properties requested\n\t\t\t\t\t\t\tif ( $.isArray( data ) ) {\n\t\t\t\t\t\t\t\tfor ( var j=0, jLen=data.length ; j<jLen ; j++ ) {\n\t\t\t\t\t\t\t\t\tout.push( fetchData( data[j], type, innerSrc ) );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t// If a string is given in between the array notation indicators, that\n\t\t\t\t\t\t\t// is used to join the strings together, otherwise an array is returned\n\t\t\t\t\t\t\tvar join = arrayNotation[0].substring(1, arrayNotation[0].length-1);\n\t\t\t\t\t\t\tdata = (join===\"\") ? out : out.join(join);\n\t\n\t\t\t\t\t\t\t// The inner call to fetchData has already traversed through the remainder\n\t\t\t\t\t\t\t// of the source requested, so we exit from the loop\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ( funcNotation )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Function call\n\t\t\t\t\t\t\ta[i] = a[i].replace(__reFn, '');\n\t\t\t\t\t\t\tdata = data[ a[i] ]();\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tif ( data === null || data[ a[i] ] === undefined )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdata = data[ a[i] ];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\treturn data;\n\t\t\t};\n\t\n\t\t\treturn function (data, type) { // row and meta also passed, but not used\n\t\t\t\treturn fetchData( data, type, mSource );\n\t\t\t};\n\t\t}\n\t\telse\n\t\t{\n\t\t\t/* Array or flat object mapping */\n\t\t\treturn function (data, type) { // row and meta also passed, but not used\n\t\t\t\treturn data[mSource];\n\t\t\t};\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Return a function that can be used to set data from a source object, taking\n\t * into account the ability to use nested objects as a source\n\t *  @param {string|int|function} mSource The data source for the object\n\t *  @returns {function} Data set function\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnSetObjectDataFn( mSource )\n\t{\n\t\tif ( $.isPlainObject( mSource ) )\n\t\t{\n\t\t\t/* Unlike get, only the underscore (global) option is used for for\n\t\t\t * setting data since we don't know the type here. This is why an object\n\t\t\t * option is not documented for `mData` (which is read/write), but it is\n\t\t\t * for `mRender` which is read only.\n\t\t\t */\n\t\t\treturn _fnSetObjectDataFn( mSource._ );\n\t\t}\n\t\telse if ( mSource === null )\n\t\t{\n\t\t\t/* Nothing to do when the data source is null */\n\t\t\treturn function () {};\n\t\t}\n\t\telse if ( typeof mSource === 'function' )\n\t\t{\n\t\t\treturn function (data, val, meta) {\n\t\t\t\tmSource( data, 'set', val, meta );\n\t\t\t};\n\t\t}\n\t\telse if ( typeof mSource === 'string' && (mSource.indexOf('.') !== -1 ||\n\t\t\t      mSource.indexOf('[') !== -1 || mSource.indexOf('(') !== -1) )\n\t\t{\n\t\t\t/* Like the get, we need to get data from a nested object */\n\t\t\tvar setData = function (data, val, src) {\n\t\t\t\tvar a = _fnSplitObjNotation( src ), b;\n\t\t\t\tvar aLast = a[a.length-1];\n\t\t\t\tvar arrayNotation, funcNotation, o, innerSrc;\n\t\n\t\t\t\tfor ( var i=0, iLen=a.length-1 ; i<iLen ; i++ )\n\t\t\t\t{\n\t\t\t\t\t// Check if we are dealing with an array notation request\n\t\t\t\t\tarrayNotation = a[i].match(__reArray);\n\t\t\t\t\tfuncNotation = a[i].match(__reFn);\n\t\n\t\t\t\t\tif ( arrayNotation )\n\t\t\t\t\t{\n\t\t\t\t\t\ta[i] = a[i].replace(__reArray, '');\n\t\t\t\t\t\tdata[ a[i] ] = [];\n\t\n\t\t\t\t\t\t// Get the remainder of the nested object to set so we can recurse\n\t\t\t\t\t\tb = a.slice();\n\t\t\t\t\t\tb.splice( 0, i+1 );\n\t\t\t\t\t\tinnerSrc = b.join('.');\n\t\n\t\t\t\t\t\t// Traverse each entry in the array setting the properties requested\n\t\t\t\t\t\tif ( $.isArray( val ) )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfor ( var j=0, jLen=val.length ; j<jLen ; j++ )\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\to = {};\n\t\t\t\t\t\t\t\tsetData( o, val[j], innerSrc );\n\t\t\t\t\t\t\t\tdata[ a[i] ].push( o );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// We've been asked to save data to an array, but it\n\t\t\t\t\t\t\t// isn't array data to be saved. Best that can be done\n\t\t\t\t\t\t\t// is to just save the value.\n\t\t\t\t\t\t\tdata[ a[i] ] = val;\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t// The inner call to setData has already traversed through the remainder\n\t\t\t\t\t\t// of the source and has set the data, thus we can exit here\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\telse if ( funcNotation )\n\t\t\t\t\t{\n\t\t\t\t\t\t// Function call\n\t\t\t\t\t\ta[i] = a[i].replace(__reFn, '');\n\t\t\t\t\t\tdata = data[ a[i] ]( val );\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// If the nested object doesn't currently exist - since we are\n\t\t\t\t\t// trying to set the value - create it\n\t\t\t\t\tif ( data[ a[i] ] === null || data[ a[i] ] === undefined )\n\t\t\t\t\t{\n\t\t\t\t\t\tdata[ a[i] ] = {};\n\t\t\t\t\t}\n\t\t\t\t\tdata = data[ a[i] ];\n\t\t\t\t}\n\t\n\t\t\t\t// Last item in the input - i.e, the actual set\n\t\t\t\tif ( aLast.match(__reFn ) )\n\t\t\t\t{\n\t\t\t\t\t// Function call\n\t\t\t\t\tdata = data[ aLast.replace(__reFn, '') ]( val );\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// If array notation is used, we just want to strip it and use the property name\n\t\t\t\t\t// and assign the value. If it isn't used, then we get the result we want anyway\n\t\t\t\t\tdata[ aLast.replace(__reArray, '') ] = val;\n\t\t\t\t}\n\t\t\t};\n\t\n\t\t\treturn function (data, val) { // meta is also passed in, but not used\n\t\t\t\treturn setData( data, val, mSource );\n\t\t\t};\n\t\t}\n\t\telse\n\t\t{\n\t\t\t/* Array or flat object mapping */\n\t\t\treturn function (data, val) { // meta is also passed in, but not used\n\t\t\t\tdata[mSource] = val;\n\t\t\t};\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Return an array with the full table data\n\t *  @param {object} oSettings dataTables settings object\n\t *  @returns array {array} aData Master data array\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnGetDataMaster ( settings )\n\t{\n\t\treturn _pluck( settings.aoData, '_aData' );\n\t}\n\t\n\t\n\t/**\n\t * Nuke the table\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnClearTable( settings )\n\t{\n\t\tsettings.aoData.length = 0;\n\t\tsettings.aiDisplayMaster.length = 0;\n\t\tsettings.aiDisplay.length = 0;\n\t\tsettings.aIds = {};\n\t}\n\t\n\t\n\t /**\n\t * Take an array of integers (index array) and remove a target integer (value - not\n\t * the key!)\n\t *  @param {array} a Index array to target\n\t *  @param {int} iTarget value to find\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnDeleteIndex( a, iTarget, splice )\n\t{\n\t\tvar iTargetIndex = -1;\n\t\n\t\tfor ( var i=0, iLen=a.length ; i<iLen ; i++ )\n\t\t{\n\t\t\tif ( a[i] == iTarget )\n\t\t\t{\n\t\t\t\tiTargetIndex = i;\n\t\t\t}\n\t\t\telse if ( a[i] > iTarget )\n\t\t\t{\n\t\t\t\ta[i]--;\n\t\t\t}\n\t\t}\n\t\n\t\tif ( iTargetIndex != -1 && splice === undefined )\n\t\t{\n\t\t\ta.splice( iTargetIndex, 1 );\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Mark cached data as invalid such that a re-read of the data will occur when\n\t * the cached data is next requested. Also update from the data source object.\n\t *\n\t * @param {object} settings DataTables settings object\n\t * @param {int}    rowIdx   Row index to invalidate\n\t * @param {string} [src]    Source to invalidate from: undefined, 'auto', 'dom'\n\t *     or 'data'\n\t * @param {int}    [colIdx] Column index to invalidate. If undefined the whole\n\t *     row will be invalidated\n\t * @memberof DataTable#oApi\n\t *\n\t * @todo For the modularisation of v1.11 this will need to become a callback, so\n\t *   the sort and filter methods can subscribe to it. That will required\n\t *   initialisation options for sorting, which is why it is not already baked in\n\t */\n\tfunction _fnInvalidate( settings, rowIdx, src, colIdx )\n\t{\n\t\tvar row = settings.aoData[ rowIdx ];\n\t\tvar i, ien;\n\t\tvar cellWrite = function ( cell, col ) {\n\t\t\t// This is very frustrating, but in IE if you just write directly\n\t\t\t// to innerHTML, and elements that are overwritten are GC'ed,\n\t\t\t// even if there is a reference to them elsewhere\n\t\t\twhile ( cell.childNodes.length ) {\n\t\t\t\tcell.removeChild( cell.firstChild );\n\t\t\t}\n\t\n\t\t\tcell.innerHTML = _fnGetCellData( settings, rowIdx, col, 'display' );\n\t\t};\n\t\n\t\t// Are we reading last data from DOM or the data object?\n\t\tif ( src === 'dom' || ((! src || src === 'auto') && row.src === 'dom') ) {\n\t\t\t// Read the data from the DOM\n\t\t\trow._aData = _fnGetRowElements(\n\t\t\t\t\tsettings, row, colIdx, colIdx === undefined ? undefined : row._aData\n\t\t\t\t)\n\t\t\t\t.data;\n\t\t}\n\t\telse {\n\t\t\t// Reading from data object, update the DOM\n\t\t\tvar cells = row.anCells;\n\t\n\t\t\tif ( cells ) {\n\t\t\t\tif ( colIdx !== undefined ) {\n\t\t\t\t\tcellWrite( cells[colIdx], colIdx );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tfor ( i=0, ien=cells.length ; i<ien ; i++ ) {\n\t\t\t\t\t\tcellWrite( cells[i], i );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\t// For both row and cell invalidation, the cached data for sorting and\n\t\t// filtering is nulled out\n\t\trow._aSortData = null;\n\t\trow._aFilterData = null;\n\t\n\t\t// Invalidate the type for a specific column (if given) or all columns since\n\t\t// the data might have changed\n\t\tvar cols = settings.aoColumns;\n\t\tif ( colIdx !== undefined ) {\n\t\t\tcols[ colIdx ].sType = null;\n\t\t}\n\t\telse {\n\t\t\tfor ( i=0, ien=cols.length ; i<ien ; i++ ) {\n\t\t\t\tcols[i].sType = null;\n\t\t\t}\n\t\n\t\t\t// Update DataTables special `DT_*` attributes for the row\n\t\t\t_fnRowAttributes( settings, row );\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Build a data source object from an HTML row, reading the contents of the\n\t * cells that are in the row.\n\t *\n\t * @param {object} settings DataTables settings object\n\t * @param {node|object} TR element from which to read data or existing row\n\t *   object from which to re-read the data from the cells\n\t * @param {int} [colIdx] Optional column index\n\t * @param {array|object} [d] Data source object. If `colIdx` is given then this\n\t *   parameter should also be given and will be used to write the data into.\n\t *   Only the column in question will be written\n\t * @returns {object} Object with two parameters: `data` the data read, in\n\t *   document order, and `cells` and array of nodes (they can be useful to the\n\t *   caller, so rather than needing a second traversal to get them, just return\n\t *   them from here).\n\t * @memberof DataTable#oApi\n\t */\n\tfunction _fnGetRowElements( settings, row, colIdx, d )\n\t{\n\t\tvar\n\t\t\ttds = [],\n\t\t\ttd = row.firstChild,\n\t\t\tname, col, o, i=0, contents,\n\t\t\tcolumns = settings.aoColumns,\n\t\t\tobjectRead = settings._rowReadObject;\n\t\n\t\t// Allow the data object to be passed in, or construct\n\t\td = d !== undefined ?\n\t\t\td :\n\t\t\tobjectRead ?\n\t\t\t\t{} :\n\t\t\t\t[];\n\t\n\t\tvar attr = function ( str, td  ) {\n\t\t\tif ( typeof str === 'string' ) {\n\t\t\t\tvar idx = str.indexOf('@');\n\t\n\t\t\t\tif ( idx !== -1 ) {\n\t\t\t\t\tvar attr = str.substring( idx+1 );\n\t\t\t\t\tvar setter = _fnSetObjectDataFn( str );\n\t\t\t\t\tsetter( d, td.getAttribute( attr ) );\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\n\t\t// Read data from a cell and store into the data object\n\t\tvar cellProcess = function ( cell ) {\n\t\t\tif ( colIdx === undefined || colIdx === i ) {\n\t\t\t\tcol = columns[i];\n\t\t\t\tcontents = $.trim(cell.innerHTML);\n\t\n\t\t\t\tif ( col && col._bAttrSrc ) {\n\t\t\t\t\tvar setter = _fnSetObjectDataFn( col.mData._ );\n\t\t\t\t\tsetter( d, contents );\n\t\n\t\t\t\t\tattr( col.mData.sort, cell );\n\t\t\t\t\tattr( col.mData.type, cell );\n\t\t\t\t\tattr( col.mData.filter, cell );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// Depending on the `data` option for the columns the data can\n\t\t\t\t\t// be read to either an object or an array.\n\t\t\t\t\tif ( objectRead ) {\n\t\t\t\t\t\tif ( ! col._setter ) {\n\t\t\t\t\t\t\t// Cache the setter function\n\t\t\t\t\t\t\tcol._setter = _fnSetObjectDataFn( col.mData );\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcol._setter( d, contents );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\td[i] = contents;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\ti++;\n\t\t};\n\t\n\t\tif ( td ) {\n\t\t\t// `tr` element was passed in\n\t\t\twhile ( td ) {\n\t\t\t\tname = td.nodeName.toUpperCase();\n\t\n\t\t\t\tif ( name == \"TD\" || name == \"TH\" ) {\n\t\t\t\t\tcellProcess( td );\n\t\t\t\t\ttds.push( td );\n\t\t\t\t}\n\t\n\t\t\t\ttd = td.nextSibling;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t// Existing row object passed in\n\t\t\ttds = row.anCells;\n\t\n\t\t\tfor ( var j=0, jen=tds.length ; j<jen ; j++ ) {\n\t\t\t\tcellProcess( tds[j] );\n\t\t\t}\n\t\t}\n\t\n\t\t// Read the ID from the DOM if present\n\t\tvar rowNode = row.firstChild ? row : row.nTr;\n\t\n\t\tif ( rowNode ) {\n\t\t\tvar id = rowNode.getAttribute( 'id' );\n\t\n\t\t\tif ( id ) {\n\t\t\t\t_fnSetObjectDataFn( settings.rowId )( d, id );\n\t\t\t}\n\t\t}\n\t\n\t\treturn {\n\t\t\tdata: d,\n\t\t\tcells: tds\n\t\t};\n\t}\n\t/**\n\t * Create a new TR element (and it's TD children) for a row\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {int} iRow Row to consider\n\t *  @param {node} [nTrIn] TR element to add to the table - optional. If not given,\n\t *    DataTables will create a row automatically\n\t *  @param {array} [anTds] Array of TD|TH elements for the row - must be given\n\t *    if nTr is.\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnCreateTr ( oSettings, iRow, nTrIn, anTds )\n\t{\n\t\tvar\n\t\t\trow = oSettings.aoData[iRow],\n\t\t\trowData = row._aData,\n\t\t\tcells = [],\n\t\t\tnTr, nTd, oCol,\n\t\t\ti, iLen, create;\n\t\n\t\tif ( row.nTr === null )\n\t\t{\n\t\t\tnTr = nTrIn || document.createElement('tr');\n\t\n\t\t\trow.nTr = nTr;\n\t\t\trow.anCells = cells;\n\t\n\t\t\t/* Use a private property on the node to allow reserve mapping from the node\n\t\t\t * to the aoData array for fast look up\n\t\t\t */\n\t\t\tnTr._DT_RowIndex = iRow;\n\t\n\t\t\t/* Special parameters can be given by the data source to be used on the row */\n\t\t\t_fnRowAttributes( oSettings, row );\n\t\n\t\t\t/* Process each column */\n\t\t\tfor ( i=0, iLen=oSettings.aoColumns.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\toCol = oSettings.aoColumns[i];\n\t\t\t\tcreate = nTrIn ? false : true;\n\t\n\t\t\t\tnTd = create ? document.createElement( oCol.sCellType ) : anTds[i];\n\t\t\t\tnTd._DT_CellIndex = {\n\t\t\t\t\trow: iRow,\n\t\t\t\t\tcolumn: i\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tcells.push( nTd );\n\t\n\t\t\t\t// Need to create the HTML if new, or if a rendering function is defined\n\t\t\t\tif ( create || ((!nTrIn || oCol.mRender || oCol.mData !== i) &&\n\t\t\t\t\t (!$.isPlainObject(oCol.mData) || oCol.mData._ !== i+'.display')\n\t\t\t\t)) {\n\t\t\t\t\tnTd.innerHTML = _fnGetCellData( oSettings, iRow, i, 'display' );\n\t\t\t\t}\n\t\n\t\t\t\t/* Add user defined class */\n\t\t\t\tif ( oCol.sClass )\n\t\t\t\t{\n\t\t\t\t\tnTd.className += ' '+oCol.sClass;\n\t\t\t\t}\n\t\n\t\t\t\t// Visibility - add or remove as required\n\t\t\t\tif ( oCol.bVisible && ! nTrIn )\n\t\t\t\t{\n\t\t\t\t\tnTr.appendChild( nTd );\n\t\t\t\t}\n\t\t\t\telse if ( ! oCol.bVisible && nTrIn )\n\t\t\t\t{\n\t\t\t\t\tnTd.parentNode.removeChild( nTd );\n\t\t\t\t}\n\t\n\t\t\t\tif ( oCol.fnCreatedCell )\n\t\t\t\t{\n\t\t\t\t\toCol.fnCreatedCell.call( oSettings.oInstance,\n\t\t\t\t\t\tnTd, _fnGetCellData( oSettings, iRow, i ), rowData, iRow, i\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t_fnCallbackFire( oSettings, 'aoRowCreatedCallback', null, [nTr, rowData, iRow, cells] );\n\t\t}\n\t\n\t\t// Remove once webkit bug 131819 and Chromium bug 365619 have been resolved\n\t\t// and deployed\n\t\trow.nTr.setAttribute( 'role', 'row' );\n\t}\n\t\n\t\n\t/**\n\t * Add attributes to a row based on the special `DT_*` parameters in a data\n\t * source object.\n\t *  @param {object} settings DataTables settings object\n\t *  @param {object} DataTables row object for the row to be modified\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnRowAttributes( settings, row )\n\t{\n\t\tvar tr = row.nTr;\n\t\tvar data = row._aData;\n\t\n\t\tif ( tr ) {\n\t\t\tvar id = settings.rowIdFn( data );\n\t\n\t\t\tif ( id ) {\n\t\t\t\ttr.id = id;\n\t\t\t}\n\t\n\t\t\tif ( data.DT_RowClass ) {\n\t\t\t\t// Remove any classes added by DT_RowClass before\n\t\t\t\tvar a = data.DT_RowClass.split(' ');\n\t\t\t\trow.__rowc = row.__rowc ?\n\t\t\t\t\t_unique( row.__rowc.concat( a ) ) :\n\t\t\t\t\ta;\n\t\n\t\t\t\t$(tr)\n\t\t\t\t\t.removeClass( row.__rowc.join(' ') )\n\t\t\t\t\t.addClass( data.DT_RowClass );\n\t\t\t}\n\t\n\t\t\tif ( data.DT_RowAttr ) {\n\t\t\t\t$(tr).attr( data.DT_RowAttr );\n\t\t\t}\n\t\n\t\t\tif ( data.DT_RowData ) {\n\t\t\t\t$(tr).data( data.DT_RowData );\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Create the HTML header for the table\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnBuildHead( oSettings )\n\t{\n\t\tvar i, ien, cell, row, column;\n\t\tvar thead = oSettings.nTHead;\n\t\tvar tfoot = oSettings.nTFoot;\n\t\tvar createHeader = $('th, td', thead).length === 0;\n\t\tvar classes = oSettings.oClasses;\n\t\tvar columns = oSettings.aoColumns;\n\t\n\t\tif ( createHeader ) {\n\t\t\trow = $('<tr/>').appendTo( thead );\n\t\t}\n\t\n\t\tfor ( i=0, ien=columns.length ; i<ien ; i++ ) {\n\t\t\tcolumn = columns[i];\n\t\t\tcell = $( column.nTh ).addClass( column.sClass );\n\t\n\t\t\tif ( createHeader ) {\n\t\t\t\tcell.appendTo( row );\n\t\t\t}\n\t\n\t\t\t// 1.11 move into sorting\n\t\t\tif ( oSettings.oFeatures.bSort ) {\n\t\t\t\tcell.addClass( column.sSortingClass );\n\t\n\t\t\t\tif ( column.bSortable !== false ) {\n\t\t\t\t\tcell\n\t\t\t\t\t\t.attr( 'tabindex', oSettings.iTabIndex )\n\t\t\t\t\t\t.attr( 'aria-controls', oSettings.sTableId );\n\t\n\t\t\t\t\t_fnSortAttachListener( oSettings, column.nTh, i );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tif ( column.sTitle != cell[0].innerHTML ) {\n\t\t\t\tcell.html( column.sTitle );\n\t\t\t}\n\t\n\t\t\t_fnRenderer( oSettings, 'header' )(\n\t\t\t\toSettings, cell, column, classes\n\t\t\t);\n\t\t}\n\t\n\t\tif ( createHeader ) {\n\t\t\t_fnDetectHeader( oSettings.aoHeader, thead );\n\t\t}\n\t\t\n\t\t/* ARIA role for the rows */\n\t \t$(thead).find('>tr').attr('role', 'row');\n\t\n\t\t/* Deal with the footer - add classes if required */\n\t\t$(thead).find('>tr>th, >tr>td').addClass( classes.sHeaderTH );\n\t\t$(tfoot).find('>tr>th, >tr>td').addClass( classes.sFooterTH );\n\t\n\t\t// Cache the footer cells. Note that we only take the cells from the first\n\t\t// row in the footer. If there is more than one row the user wants to\n\t\t// interact with, they need to use the table().foot() method. Note also this\n\t\t// allows cells to be used for multiple columns using colspan\n\t\tif ( tfoot !== null ) {\n\t\t\tvar cells = oSettings.aoFooter[0];\n\t\n\t\t\tfor ( i=0, ien=cells.length ; i<ien ; i++ ) {\n\t\t\t\tcolumn = columns[i];\n\t\t\t\tcolumn.nTf = cells[i].cell;\n\t\n\t\t\t\tif ( column.sClass ) {\n\t\t\t\t\t$(column.nTf).addClass( column.sClass );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Draw the header (or footer) element based on the column visibility states. The\n\t * methodology here is to use the layout array from _fnDetectHeader, modified for\n\t * the instantaneous column visibility, to construct the new layout. The grid is\n\t * traversed over cell at a time in a rows x columns grid fashion, although each\n\t * cell insert can cover multiple elements in the grid - which is tracks using the\n\t * aApplied array. Cell inserts in the grid will only occur where there isn't\n\t * already a cell in that position.\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param array {objects} aoSource Layout array from _fnDetectHeader\n\t *  @param {boolean} [bIncludeHidden=false] If true then include the hidden columns in the calc,\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnDrawHead( oSettings, aoSource, bIncludeHidden )\n\t{\n\t\tvar i, iLen, j, jLen, k, kLen, n, nLocalTr;\n\t\tvar aoLocal = [];\n\t\tvar aApplied = [];\n\t\tvar iColumns = oSettings.aoColumns.length;\n\t\tvar iRowspan, iColspan;\n\t\n\t\tif ( ! aoSource )\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\n\t\tif (  bIncludeHidden === undefined )\n\t\t{\n\t\t\tbIncludeHidden = false;\n\t\t}\n\t\n\t\t/* Make a copy of the master layout array, but without the visible columns in it */\n\t\tfor ( i=0, iLen=aoSource.length ; i<iLen ; i++ )\n\t\t{\n\t\t\taoLocal[i] = aoSource[i].slice();\n\t\t\taoLocal[i].nTr = aoSource[i].nTr;\n\t\n\t\t\t/* Remove any columns which are currently hidden */\n\t\t\tfor ( j=iColumns-1 ; j>=0 ; j-- )\n\t\t\t{\n\t\t\t\tif ( !oSettings.aoColumns[j].bVisible && !bIncludeHidden )\n\t\t\t\t{\n\t\t\t\t\taoLocal[i].splice( j, 1 );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t/* Prep the applied array - it needs an element for each row */\n\t\t\taApplied.push( [] );\n\t\t}\n\t\n\t\tfor ( i=0, iLen=aoLocal.length ; i<iLen ; i++ )\n\t\t{\n\t\t\tnLocalTr = aoLocal[i].nTr;\n\t\n\t\t\t/* All cells are going to be replaced, so empty out the row */\n\t\t\tif ( nLocalTr )\n\t\t\t{\n\t\t\t\twhile( (n = nLocalTr.firstChild) )\n\t\t\t\t{\n\t\t\t\t\tnLocalTr.removeChild( n );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tfor ( j=0, jLen=aoLocal[i].length ; j<jLen ; j++ )\n\t\t\t{\n\t\t\t\tiRowspan = 1;\n\t\t\t\tiColspan = 1;\n\t\n\t\t\t\t/* Check to see if there is already a cell (row/colspan) covering our target\n\t\t\t\t * insert point. If there is, then there is nothing to do.\n\t\t\t\t */\n\t\t\t\tif ( aApplied[i][j] === undefined )\n\t\t\t\t{\n\t\t\t\t\tnLocalTr.appendChild( aoLocal[i][j].cell );\n\t\t\t\t\taApplied[i][j] = 1;\n\t\n\t\t\t\t\t/* Expand the cell to cover as many rows as needed */\n\t\t\t\t\twhile ( aoLocal[i+iRowspan] !== undefined &&\n\t\t\t\t\t        aoLocal[i][j].cell == aoLocal[i+iRowspan][j].cell )\n\t\t\t\t\t{\n\t\t\t\t\t\taApplied[i+iRowspan][j] = 1;\n\t\t\t\t\t\tiRowspan++;\n\t\t\t\t\t}\n\t\n\t\t\t\t\t/* Expand the cell to cover as many columns as needed */\n\t\t\t\t\twhile ( aoLocal[i][j+iColspan] !== undefined &&\n\t\t\t\t\t        aoLocal[i][j].cell == aoLocal[i][j+iColspan].cell )\n\t\t\t\t\t{\n\t\t\t\t\t\t/* Must update the applied array over the rows for the columns */\n\t\t\t\t\t\tfor ( k=0 ; k<iRowspan ; k++ )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taApplied[i+k][j+iColspan] = 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tiColspan++;\n\t\t\t\t\t}\n\t\n\t\t\t\t\t/* Do the actual expansion in the DOM */\n\t\t\t\t\t$(aoLocal[i][j].cell)\n\t\t\t\t\t\t.attr('rowspan', iRowspan)\n\t\t\t\t\t\t.attr('colspan', iColspan);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Insert the required TR nodes into the table for display\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnDraw( oSettings )\n\t{\n\t\t/* Provide a pre-callback function which can be used to cancel the draw is false is returned */\n\t\tvar aPreDraw = _fnCallbackFire( oSettings, 'aoPreDrawCallback', 'preDraw', [oSettings] );\n\t\tif ( $.inArray( false, aPreDraw ) !== -1 )\n\t\t{\n\t\t\t_fnProcessingDisplay( oSettings, false );\n\t\t\treturn;\n\t\t}\n\t\n\t\tvar i, iLen, n;\n\t\tvar anRows = [];\n\t\tvar iRowCount = 0;\n\t\tvar asStripeClasses = oSettings.asStripeClasses;\n\t\tvar iStripes = asStripeClasses.length;\n\t\tvar iOpenRows = oSettings.aoOpenRows.length;\n\t\tvar oLang = oSettings.oLanguage;\n\t\tvar iInitDisplayStart = oSettings.iInitDisplayStart;\n\t\tvar bServerSide = _fnDataSource( oSettings ) == 'ssp';\n\t\tvar aiDisplay = oSettings.aiDisplay;\n\t\n\t\toSettings.bDrawing = true;\n\t\n\t\t/* Check and see if we have an initial draw position from state saving */\n\t\tif ( iInitDisplayStart !== undefined && iInitDisplayStart !== -1 )\n\t\t{\n\t\t\toSettings._iDisplayStart = bServerSide ?\n\t\t\t\tiInitDisplayStart :\n\t\t\t\tiInitDisplayStart >= oSettings.fnRecordsDisplay() ?\n\t\t\t\t\t0 :\n\t\t\t\t\tiInitDisplayStart;\n\t\n\t\t\toSettings.iInitDisplayStart = -1;\n\t\t}\n\t\n\t\tvar iDisplayStart = oSettings._iDisplayStart;\n\t\tvar iDisplayEnd = oSettings.fnDisplayEnd();\n\t\n\t\t/* Server-side processing draw intercept */\n\t\tif ( oSettings.bDeferLoading )\n\t\t{\n\t\t\toSettings.bDeferLoading = false;\n\t\t\toSettings.iDraw++;\n\t\t\t_fnProcessingDisplay( oSettings, false );\n\t\t}\n\t\telse if ( !bServerSide )\n\t\t{\n\t\t\toSettings.iDraw++;\n\t\t}\n\t\telse if ( !oSettings.bDestroying && !_fnAjaxUpdate( oSettings ) )\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\n\t\tif ( aiDisplay.length !== 0 )\n\t\t{\n\t\t\tvar iStart = bServerSide ? 0 : iDisplayStart;\n\t\t\tvar iEnd = bServerSide ? oSettings.aoData.length : iDisplayEnd;\n\t\n\t\t\tfor ( var j=iStart ; j<iEnd ; j++ )\n\t\t\t{\n\t\t\t\tvar iDataIndex = aiDisplay[j];\n\t\t\t\tvar aoData = oSettings.aoData[ iDataIndex ];\n\t\t\t\tif ( aoData.nTr === null )\n\t\t\t\t{\n\t\t\t\t\t_fnCreateTr( oSettings, iDataIndex );\n\t\t\t\t}\n\t\n\t\t\t\tvar nRow = aoData.nTr;\n\t\n\t\t\t\t/* Remove the old striping classes and then add the new one */\n\t\t\t\tif ( iStripes !== 0 )\n\t\t\t\t{\n\t\t\t\t\tvar sStripe = asStripeClasses[ iRowCount % iStripes ];\n\t\t\t\t\tif ( aoData._sRowStripe != sStripe )\n\t\t\t\t\t{\n\t\t\t\t\t\t$(nRow).removeClass( aoData._sRowStripe ).addClass( sStripe );\n\t\t\t\t\t\taoData._sRowStripe = sStripe;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\t// Row callback functions - might want to manipulate the row\n\t\t\t\t// iRowCount and j are not currently documented. Are they at all\n\t\t\t\t// useful?\n\t\t\t\t_fnCallbackFire( oSettings, 'aoRowCallback', null,\n\t\t\t\t\t[nRow, aoData._aData, iRowCount, j, iDataIndex] );\n\t\n\t\t\t\tanRows.push( nRow );\n\t\t\t\tiRowCount++;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t/* Table is empty - create a row with an empty message in it */\n\t\t\tvar sZero = oLang.sZeroRecords;\n\t\t\tif ( oSettings.iDraw == 1 &&  _fnDataSource( oSettings ) == 'ajax' )\n\t\t\t{\n\t\t\t\tsZero = oLang.sLoadingRecords;\n\t\t\t}\n\t\t\telse if ( oLang.sEmptyTable && oSettings.fnRecordsTotal() === 0 )\n\t\t\t{\n\t\t\t\tsZero = oLang.sEmptyTable;\n\t\t\t}\n\t\n\t\t\tanRows[ 0 ] = $( '<tr/>', { 'class': iStripes ? asStripeClasses[0] : '' } )\n\t\t\t\t.append( $('<td />', {\n\t\t\t\t\t'valign':  'top',\n\t\t\t\t\t'colSpan': _fnVisbleColumns( oSettings ),\n\t\t\t\t\t'class':   oSettings.oClasses.sRowEmpty\n\t\t\t\t} ).html( sZero ) )[0];\n\t\t}\n\t\n\t\t/* Header and footer callbacks */\n\t\t_fnCallbackFire( oSettings, 'aoHeaderCallback', 'header', [ $(oSettings.nTHead).children('tr')[0],\n\t\t\t_fnGetDataMaster( oSettings ), iDisplayStart, iDisplayEnd, aiDisplay ] );\n\t\n\t\t_fnCallbackFire( oSettings, 'aoFooterCallback', 'footer', [ $(oSettings.nTFoot).children('tr')[0],\n\t\t\t_fnGetDataMaster( oSettings ), iDisplayStart, iDisplayEnd, aiDisplay ] );\n\t\n\t\tvar body = $(oSettings.nTBody);\n\t\n\t\tbody.children().detach();\n\t\tbody.append( $(anRows) );\n\t\n\t\t/* Call all required callback functions for the end of a draw */\n\t\t_fnCallbackFire( oSettings, 'aoDrawCallback', 'draw', [oSettings] );\n\t\n\t\t/* Draw is complete, sorting and filtering must be as well */\n\t\toSettings.bSorted = false;\n\t\toSettings.bFiltered = false;\n\t\toSettings.bDrawing = false;\n\t}\n\t\n\t\n\t/**\n\t * Redraw the table - taking account of the various features which are enabled\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {boolean} [holdPosition] Keep the current paging position. By default\n\t *    the paging is reset to the first page\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnReDraw( settings, holdPosition )\n\t{\n\t\tvar\n\t\t\tfeatures = settings.oFeatures,\n\t\t\tsort     = features.bSort,\n\t\t\tfilter   = features.bFilter;\n\t\n\t\tif ( sort ) {\n\t\t\t_fnSort( settings );\n\t\t}\n\t\n\t\tif ( filter ) {\n\t\t\t_fnFilterComplete( settings, settings.oPreviousSearch );\n\t\t}\n\t\telse {\n\t\t\t// No filtering, so we want to just use the display master\n\t\t\tsettings.aiDisplay = settings.aiDisplayMaster.slice();\n\t\t}\n\t\n\t\tif ( holdPosition !== true ) {\n\t\t\tsettings._iDisplayStart = 0;\n\t\t}\n\t\n\t\t// Let any modules know about the draw hold position state (used by\n\t\t// scrolling internally)\n\t\tsettings._drawHold = holdPosition;\n\t\n\t\t_fnDraw( settings );\n\t\n\t\tsettings._drawHold = false;\n\t}\n\t\n\t\n\t/**\n\t * Add the options to the page HTML for the table\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnAddOptionsHtml ( oSettings )\n\t{\n\t\tvar classes = oSettings.oClasses;\n\t\tvar table = $(oSettings.nTable);\n\t\tvar holding = $('<div/>').insertBefore( table ); // Holding element for speed\n\t\tvar features = oSettings.oFeatures;\n\t\n\t\t// All DataTables are wrapped in a div\n\t\tvar insert = $('<div/>', {\n\t\t\tid:      oSettings.sTableId+'_wrapper',\n\t\t\t'class': classes.sWrapper + (oSettings.nTFoot ? '' : ' '+classes.sNoFooter)\n\t\t} );\n\t\n\t\toSettings.nHolding = holding[0];\n\t\toSettings.nTableWrapper = insert[0];\n\t\toSettings.nTableReinsertBefore = oSettings.nTable.nextSibling;\n\t\n\t\t/* Loop over the user set positioning and place the elements as needed */\n\t\tvar aDom = oSettings.sDom.split('');\n\t\tvar featureNode, cOption, nNewNode, cNext, sAttr, j;\n\t\tfor ( var i=0 ; i<aDom.length ; i++ )\n\t\t{\n\t\t\tfeatureNode = null;\n\t\t\tcOption = aDom[i];\n\t\n\t\t\tif ( cOption == '<' )\n\t\t\t{\n\t\t\t\t/* New container div */\n\t\t\t\tnNewNode = $('<div/>')[0];\n\t\n\t\t\t\t/* Check to see if we should append an id and/or a class name to the container */\n\t\t\t\tcNext = aDom[i+1];\n\t\t\t\tif ( cNext == \"'\" || cNext == '\"' )\n\t\t\t\t{\n\t\t\t\t\tsAttr = \"\";\n\t\t\t\t\tj = 2;\n\t\t\t\t\twhile ( aDom[i+j] != cNext )\n\t\t\t\t\t{\n\t\t\t\t\t\tsAttr += aDom[i+j];\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\n\t\t\t\t\t/* Replace jQuery UI constants @todo depreciated */\n\t\t\t\t\tif ( sAttr == \"H\" )\n\t\t\t\t\t{\n\t\t\t\t\t\tsAttr = classes.sJUIHeader;\n\t\t\t\t\t}\n\t\t\t\t\telse if ( sAttr == \"F\" )\n\t\t\t\t\t{\n\t\t\t\t\t\tsAttr = classes.sJUIFooter;\n\t\t\t\t\t}\n\t\n\t\t\t\t\t/* The attribute can be in the format of \"#id.class\", \"#id\" or \"class\" This logic\n\t\t\t\t\t * breaks the string into parts and applies them as needed\n\t\t\t\t\t */\n\t\t\t\t\tif ( sAttr.indexOf('.') != -1 )\n\t\t\t\t\t{\n\t\t\t\t\t\tvar aSplit = sAttr.split('.');\n\t\t\t\t\t\tnNewNode.id = aSplit[0].substr(1, aSplit[0].length-1);\n\t\t\t\t\t\tnNewNode.className = aSplit[1];\n\t\t\t\t\t}\n\t\t\t\t\telse if ( sAttr.charAt(0) == \"#\" )\n\t\t\t\t\t{\n\t\t\t\t\t\tnNewNode.id = sAttr.substr(1, sAttr.length-1);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tnNewNode.className = sAttr;\n\t\t\t\t\t}\n\t\n\t\t\t\t\ti += j; /* Move along the position array */\n\t\t\t\t}\n\t\n\t\t\t\tinsert.append( nNewNode );\n\t\t\t\tinsert = $(nNewNode);\n\t\t\t}\n\t\t\telse if ( cOption == '>' )\n\t\t\t{\n\t\t\t\t/* End container div */\n\t\t\t\tinsert = insert.parent();\n\t\t\t}\n\t\t\t// @todo Move options into their own plugins?\n\t\t\telse if ( cOption == 'l' && features.bPaginate && features.bLengthChange )\n\t\t\t{\n\t\t\t\t/* Length */\n\t\t\t\tfeatureNode = _fnFeatureHtmlLength( oSettings );\n\t\t\t}\n\t\t\telse if ( cOption == 'f' && features.bFilter )\n\t\t\t{\n\t\t\t\t/* Filter */\n\t\t\t\tfeatureNode = _fnFeatureHtmlFilter( oSettings );\n\t\t\t}\n\t\t\telse if ( cOption == 'r' && features.bProcessing )\n\t\t\t{\n\t\t\t\t/* pRocessing */\n\t\t\t\tfeatureNode = _fnFeatureHtmlProcessing( oSettings );\n\t\t\t}\n\t\t\telse if ( cOption == 't' )\n\t\t\t{\n\t\t\t\t/* Table */\n\t\t\t\tfeatureNode = _fnFeatureHtmlTable( oSettings );\n\t\t\t}\n\t\t\telse if ( cOption ==  'i' && features.bInfo )\n\t\t\t{\n\t\t\t\t/* Info */\n\t\t\t\tfeatureNode = _fnFeatureHtmlInfo( oSettings );\n\t\t\t}\n\t\t\telse if ( cOption == 'p' && features.bPaginate )\n\t\t\t{\n\t\t\t\t/* Pagination */\n\t\t\t\tfeatureNode = _fnFeatureHtmlPaginate( oSettings );\n\t\t\t}\n\t\t\telse if ( DataTable.ext.feature.length !== 0 )\n\t\t\t{\n\t\t\t\t/* Plug-in features */\n\t\t\t\tvar aoFeatures = DataTable.ext.feature;\n\t\t\t\tfor ( var k=0, kLen=aoFeatures.length ; k<kLen ; k++ )\n\t\t\t\t{\n\t\t\t\t\tif ( cOption == aoFeatures[k].cFeature )\n\t\t\t\t\t{\n\t\t\t\t\t\tfeatureNode = aoFeatures[k].fnInit( oSettings );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t/* Add to the 2D features array */\n\t\t\tif ( featureNode )\n\t\t\t{\n\t\t\t\tvar aanFeatures = oSettings.aanFeatures;\n\t\n\t\t\t\tif ( ! aanFeatures[cOption] )\n\t\t\t\t{\n\t\t\t\t\taanFeatures[cOption] = [];\n\t\t\t\t}\n\t\n\t\t\t\taanFeatures[cOption].push( featureNode );\n\t\t\t\tinsert.append( featureNode );\n\t\t\t}\n\t\t}\n\t\n\t\t/* Built our DOM structure - replace the holding div with what we want */\n\t\tholding.replaceWith( insert );\n\t\toSettings.nHolding = null;\n\t}\n\t\n\t\n\t/**\n\t * Use the DOM source to create up an array of header cells. The idea here is to\n\t * create a layout grid (array) of rows x columns, which contains a reference\n\t * to the cell that that point in the grid (regardless of col/rowspan), such that\n\t * any column / row could be removed and the new grid constructed\n\t *  @param array {object} aLayout Array to store the calculated layout in\n\t *  @param {node} nThead The header/footer element for the table\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnDetectHeader ( aLayout, nThead )\n\t{\n\t\tvar nTrs = $(nThead).children('tr');\n\t\tvar nTr, nCell;\n\t\tvar i, k, l, iLen, jLen, iColShifted, iColumn, iColspan, iRowspan;\n\t\tvar bUnique;\n\t\tvar fnShiftCol = function ( a, i, j ) {\n\t\t\tvar k = a[i];\n\t                while ( k[j] ) {\n\t\t\t\tj++;\n\t\t\t}\n\t\t\treturn j;\n\t\t};\n\t\n\t\taLayout.splice( 0, aLayout.length );\n\t\n\t\t/* We know how many rows there are in the layout - so prep it */\n\t\tfor ( i=0, iLen=nTrs.length ; i<iLen ; i++ )\n\t\t{\n\t\t\taLayout.push( [] );\n\t\t}\n\t\n\t\t/* Calculate a layout array */\n\t\tfor ( i=0, iLen=nTrs.length ; i<iLen ; i++ )\n\t\t{\n\t\t\tnTr = nTrs[i];\n\t\t\tiColumn = 0;\n\t\n\t\t\t/* For every cell in the row... */\n\t\t\tnCell = nTr.firstChild;\n\t\t\twhile ( nCell ) {\n\t\t\t\tif ( nCell.nodeName.toUpperCase() == \"TD\" ||\n\t\t\t\t     nCell.nodeName.toUpperCase() == \"TH\" )\n\t\t\t\t{\n\t\t\t\t\t/* Get the col and rowspan attributes from the DOM and sanitise them */\n\t\t\t\t\tiColspan = nCell.getAttribute('colspan') * 1;\n\t\t\t\t\tiRowspan = nCell.getAttribute('rowspan') * 1;\n\t\t\t\t\tiColspan = (!iColspan || iColspan===0 || iColspan===1) ? 1 : iColspan;\n\t\t\t\t\tiRowspan = (!iRowspan || iRowspan===0 || iRowspan===1) ? 1 : iRowspan;\n\t\n\t\t\t\t\t/* There might be colspan cells already in this row, so shift our target\n\t\t\t\t\t * accordingly\n\t\t\t\t\t */\n\t\t\t\t\tiColShifted = fnShiftCol( aLayout, i, iColumn );\n\t\n\t\t\t\t\t/* Cache calculation for unique columns */\n\t\t\t\t\tbUnique = iColspan === 1 ? true : false;\n\t\n\t\t\t\t\t/* If there is col / rowspan, copy the information into the layout grid */\n\t\t\t\t\tfor ( l=0 ; l<iColspan ; l++ )\n\t\t\t\t\t{\n\t\t\t\t\t\tfor ( k=0 ; k<iRowspan ; k++ )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taLayout[i+k][iColShifted+l] = {\n\t\t\t\t\t\t\t\t\"cell\": nCell,\n\t\t\t\t\t\t\t\t\"unique\": bUnique\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\taLayout[i+k].nTr = nTr;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tnCell = nCell.nextSibling;\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Get an array of unique th elements, one for each column\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {node} nHeader automatically detect the layout from this node - optional\n\t *  @param {array} aLayout thead/tfoot layout from _fnDetectHeader - optional\n\t *  @returns array {node} aReturn list of unique th's\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnGetUniqueThs ( oSettings, nHeader, aLayout )\n\t{\n\t\tvar aReturn = [];\n\t\tif ( !aLayout )\n\t\t{\n\t\t\taLayout = oSettings.aoHeader;\n\t\t\tif ( nHeader )\n\t\t\t{\n\t\t\t\taLayout = [];\n\t\t\t\t_fnDetectHeader( aLayout, nHeader );\n\t\t\t}\n\t\t}\n\t\n\t\tfor ( var i=0, iLen=aLayout.length ; i<iLen ; i++ )\n\t\t{\n\t\t\tfor ( var j=0, jLen=aLayout[i].length ; j<jLen ; j++ )\n\t\t\t{\n\t\t\t\tif ( aLayout[i][j].unique &&\n\t\t\t\t\t (!aReturn[j] || !oSettings.bSortCellsTop) )\n\t\t\t\t{\n\t\t\t\t\taReturn[j] = aLayout[i][j].cell;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\treturn aReturn;\n\t}\n\t\n\t/**\n\t * Create an Ajax call based on the table's settings, taking into account that\n\t * parameters can have multiple forms, and backwards compatibility.\n\t *\n\t * @param {object} oSettings dataTables settings object\n\t * @param {array} data Data to send to the server, required by\n\t *     DataTables - may be augmented by developer callbacks\n\t * @param {function} fn Callback function to run when data is obtained\n\t */\n\tfunction _fnBuildAjax( oSettings, data, fn )\n\t{\n\t\t// Compatibility with 1.9-, allow fnServerData and event to manipulate\n\t\t_fnCallbackFire( oSettings, 'aoServerParams', 'serverParams', [data] );\n\t\n\t\t// Convert to object based for 1.10+ if using the old array scheme which can\n\t\t// come from server-side processing or serverParams\n\t\tif ( data && $.isArray(data) ) {\n\t\t\tvar tmp = {};\n\t\t\tvar rbracket = /(.*?)\\[\\]$/;\n\t\n\t\t\t$.each( data, function (key, val) {\n\t\t\t\tvar match = val.name.match(rbracket);\n\t\n\t\t\t\tif ( match ) {\n\t\t\t\t\t// Support for arrays\n\t\t\t\t\tvar name = match[0];\n\t\n\t\t\t\t\tif ( ! tmp[ name ] ) {\n\t\t\t\t\t\ttmp[ name ] = [];\n\t\t\t\t\t}\n\t\t\t\t\ttmp[ name ].push( val.value );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\ttmp[val.name] = val.value;\n\t\t\t\t}\n\t\t\t} );\n\t\t\tdata = tmp;\n\t\t}\n\t\n\t\tvar ajaxData;\n\t\tvar ajax = oSettings.ajax;\n\t\tvar instance = oSettings.oInstance;\n\t\tvar callback = function ( json ) {\n\t\t\t_fnCallbackFire( oSettings, null, 'xhr', [oSettings, json, oSettings.jqXHR] );\n\t\t\tfn( json );\n\t\t};\n\t\n\t\tif ( $.isPlainObject( ajax ) && ajax.data )\n\t\t{\n\t\t\tajaxData = ajax.data;\n\t\n\t\t\tvar newData = typeof ajaxData === 'function' ?\n\t\t\t\tajaxData( data, oSettings ) :  // fn can manipulate data or return\n\t\t\t\tajaxData;                      // an object object or array to merge\n\t\n\t\t\t// If the function returned something, use that alone\n\t\t\tdata = typeof ajaxData === 'function' && newData ?\n\t\t\t\tnewData :\n\t\t\t\t$.extend( true, data, newData );\n\t\n\t\t\t// Remove the data property as we've resolved it already and don't want\n\t\t\t// jQuery to do it again (it is restored at the end of the function)\n\t\t\tdelete ajax.data;\n\t\t}\n\t\n\t\tvar baseAjax = {\n\t\t\t\"data\": data,\n\t\t\t\"success\": function (json) {\n\t\t\t\tvar error = json.error || json.sError;\n\t\t\t\tif ( error ) {\n\t\t\t\t\t_fnLog( oSettings, 0, error );\n\t\t\t\t}\n\t\n\t\t\t\toSettings.json = json;\n\t\t\t\tcallback( json );\n\t\t\t},\n\t\t\t\"dataType\": \"json\",\n\t\t\t\"cache\": false,\n\t\t\t\"type\": oSettings.sServerMethod,\n\t\t\t\"error\": function (xhr, error, thrown) {\n\t\t\t\tvar ret = _fnCallbackFire( oSettings, null, 'xhr', [oSettings, null, oSettings.jqXHR] );\n\t\n\t\t\t\tif ( $.inArray( true, ret ) === -1 ) {\n\t\t\t\t\tif ( error == \"parsererror\" ) {\n\t\t\t\t\t\t_fnLog( oSettings, 0, 'Invalid JSON response', 1 );\n\t\t\t\t\t}\n\t\t\t\t\telse if ( xhr.readyState === 4 ) {\n\t\t\t\t\t\t_fnLog( oSettings, 0, 'Ajax error', 7 );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\t_fnProcessingDisplay( oSettings, false );\n\t\t\t}\n\t\t};\n\t\n\t\t// Store the data submitted for the API\n\t\toSettings.oAjaxData = data;\n\t\n\t\t// Allow plug-ins and external processes to modify the data\n\t\t_fnCallbackFire( oSettings, null, 'preXhr', [oSettings, data] );\n\t\n\t\tif ( oSettings.fnServerData )\n\t\t{\n\t\t\t// DataTables 1.9- compatibility\n\t\t\toSettings.fnServerData.call( instance,\n\t\t\t\toSettings.sAjaxSource,\n\t\t\t\t$.map( data, function (val, key) { // Need to convert back to 1.9 trad format\n\t\t\t\t\treturn { name: key, value: val };\n\t\t\t\t} ),\n\t\t\t\tcallback,\n\t\t\t\toSettings\n\t\t\t);\n\t\t}\n\t\telse if ( oSettings.sAjaxSource || typeof ajax === 'string' )\n\t\t{\n\t\t\t// DataTables 1.9- compatibility\n\t\t\toSettings.jqXHR = $.ajax( $.extend( baseAjax, {\n\t\t\t\turl: ajax || oSettings.sAjaxSource\n\t\t\t} ) );\n\t\t}\n\t\telse if ( typeof ajax === 'function' )\n\t\t{\n\t\t\t// Is a function - let the caller define what needs to be done\n\t\t\toSettings.jqXHR = ajax.call( instance, data, callback, oSettings );\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Object to extend the base settings\n\t\t\toSettings.jqXHR = $.ajax( $.extend( baseAjax, ajax ) );\n\t\n\t\t\t// Restore for next time around\n\t\t\tajax.data = ajaxData;\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Update the table using an Ajax call\n\t *  @param {object} settings dataTables settings object\n\t *  @returns {boolean} Block the table drawing or not\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnAjaxUpdate( settings )\n\t{\n\t\tif ( settings.bAjaxDataGet ) {\n\t\t\tsettings.iDraw++;\n\t\t\t_fnProcessingDisplay( settings, true );\n\t\n\t\t\t_fnBuildAjax(\n\t\t\t\tsettings,\n\t\t\t\t_fnAjaxParameters( settings ),\n\t\t\t\tfunction(json) {\n\t\t\t\t\t_fnAjaxUpdateDraw( settings, json );\n\t\t\t\t}\n\t\t\t);\n\t\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\t\n\t\n\t/**\n\t * Build up the parameters in an object needed for a server-side processing\n\t * request. Note that this is basically done twice, is different ways - a modern\n\t * method which is used by default in DataTables 1.10 which uses objects and\n\t * arrays, or the 1.9- method with is name / value pairs. 1.9 method is used if\n\t * the sAjaxSource option is used in the initialisation, or the legacyAjax\n\t * option is set.\n\t *  @param {object} oSettings dataTables settings object\n\t *  @returns {bool} block the table drawing or not\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnAjaxParameters( settings )\n\t{\n\t\tvar\n\t\t\tcolumns = settings.aoColumns,\n\t\t\tcolumnCount = columns.length,\n\t\t\tfeatures = settings.oFeatures,\n\t\t\tpreSearch = settings.oPreviousSearch,\n\t\t\tpreColSearch = settings.aoPreSearchCols,\n\t\t\ti, data = [], dataProp, column, columnSearch,\n\t\t\tsort = _fnSortFlatten( settings ),\n\t\t\tdisplayStart = settings._iDisplayStart,\n\t\t\tdisplayLength = features.bPaginate !== false ?\n\t\t\t\tsettings._iDisplayLength :\n\t\t\t\t-1;\n\t\n\t\tvar param = function ( name, value ) {\n\t\t\tdata.push( { 'name': name, 'value': value } );\n\t\t};\n\t\n\t\t// DataTables 1.9- compatible method\n\t\tparam( 'sEcho',          settings.iDraw );\n\t\tparam( 'iColumns',       columnCount );\n\t\tparam( 'sColumns',       _pluck( columns, 'sName' ).join(',') );\n\t\tparam( 'iDisplayStart',  displayStart );\n\t\tparam( 'iDisplayLength', displayLength );\n\t\n\t\t// DataTables 1.10+ method\n\t\tvar d = {\n\t\t\tdraw:    settings.iDraw,\n\t\t\tcolumns: [],\n\t\t\torder:   [],\n\t\t\tstart:   displayStart,\n\t\t\tlength:  displayLength,\n\t\t\tsearch:  {\n\t\t\t\tvalue: preSearch.sSearch,\n\t\t\t\tregex: preSearch.bRegex\n\t\t\t}\n\t\t};\n\t\n\t\tfor ( i=0 ; i<columnCount ; i++ ) {\n\t\t\tcolumn = columns[i];\n\t\t\tcolumnSearch = preColSearch[i];\n\t\t\tdataProp = typeof column.mData==\"function\" ? 'function' : column.mData ;\n\t\n\t\t\td.columns.push( {\n\t\t\t\tdata:       dataProp,\n\t\t\t\tname:       column.sName,\n\t\t\t\tsearchable: column.bSearchable,\n\t\t\t\torderable:  column.bSortable,\n\t\t\t\tsearch:     {\n\t\t\t\t\tvalue: columnSearch.sSearch,\n\t\t\t\t\tregex: columnSearch.bRegex\n\t\t\t\t}\n\t\t\t} );\n\t\n\t\t\tparam( \"mDataProp_\"+i, dataProp );\n\t\n\t\t\tif ( features.bFilter ) {\n\t\t\t\tparam( 'sSearch_'+i,     columnSearch.sSearch );\n\t\t\t\tparam( 'bRegex_'+i,      columnSearch.bRegex );\n\t\t\t\tparam( 'bSearchable_'+i, column.bSearchable );\n\t\t\t}\n\t\n\t\t\tif ( features.bSort ) {\n\t\t\t\tparam( 'bSortable_'+i, column.bSortable );\n\t\t\t}\n\t\t}\n\t\n\t\tif ( features.bFilter ) {\n\t\t\tparam( 'sSearch', preSearch.sSearch );\n\t\t\tparam( 'bRegex', preSearch.bRegex );\n\t\t}\n\t\n\t\tif ( features.bSort ) {\n\t\t\t$.each( sort, function ( i, val ) {\n\t\t\t\td.order.push( { column: val.col, dir: val.dir } );\n\t\n\t\t\t\tparam( 'iSortCol_'+i, val.col );\n\t\t\t\tparam( 'sSortDir_'+i, val.dir );\n\t\t\t} );\n\t\n\t\t\tparam( 'iSortingCols', sort.length );\n\t\t}\n\t\n\t\t// If the legacy.ajax parameter is null, then we automatically decide which\n\t\t// form to use, based on sAjaxSource\n\t\tvar legacy = DataTable.ext.legacy.ajax;\n\t\tif ( legacy === null ) {\n\t\t\treturn settings.sAjaxSource ? data : d;\n\t\t}\n\t\n\t\t// Otherwise, if legacy has been specified then we use that to decide on the\n\t\t// form\n\t\treturn legacy ? data : d;\n\t}\n\t\n\t\n\t/**\n\t * Data the data from the server (nuking the old) and redraw the table\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {object} json json data return from the server.\n\t *  @param {string} json.sEcho Tracking flag for DataTables to match requests\n\t *  @param {int} json.iTotalRecords Number of records in the data set, not accounting for filtering\n\t *  @param {int} json.iTotalDisplayRecords Number of records in the data set, accounting for filtering\n\t *  @param {array} json.aaData The data to display on this page\n\t *  @param {string} [json.sColumns] Column ordering (sName, comma separated)\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnAjaxUpdateDraw ( settings, json )\n\t{\n\t\t// v1.10 uses camelCase variables, while 1.9 uses Hungarian notation.\n\t\t// Support both\n\t\tvar compat = function ( old, modern ) {\n\t\t\treturn json[old] !== undefined ? json[old] : json[modern];\n\t\t};\n\t\n\t\tvar data = _fnAjaxDataSrc( settings, json );\n\t\tvar draw            = compat( 'sEcho',                'draw' );\n\t\tvar recordsTotal    = compat( 'iTotalRecords',        'recordsTotal' );\n\t\tvar recordsFiltered = compat( 'iTotalDisplayRecords', 'recordsFiltered' );\n\t\n\t\tif ( draw ) {\n\t\t\t// Protect against out of sequence returns\n\t\t\tif ( draw*1 < settings.iDraw ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tsettings.iDraw = draw * 1;\n\t\t}\n\t\n\t\t_fnClearTable( settings );\n\t\tsettings._iRecordsTotal   = parseInt(recordsTotal, 10);\n\t\tsettings._iRecordsDisplay = parseInt(recordsFiltered, 10);\n\t\n\t\tfor ( var i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t\t_fnAddData( settings, data[i] );\n\t\t}\n\t\tsettings.aiDisplay = settings.aiDisplayMaster.slice();\n\t\n\t\tsettings.bAjaxDataGet = false;\n\t\t_fnDraw( settings );\n\t\n\t\tif ( ! settings._bInitComplete ) {\n\t\t\t_fnInitComplete( settings, json );\n\t\t}\n\t\n\t\tsettings.bAjaxDataGet = true;\n\t\t_fnProcessingDisplay( settings, false );\n\t}\n\t\n\t\n\t/**\n\t * Get the data from the JSON data source to use for drawing a table. Using\n\t * `_fnGetObjectDataFn` allows the data to be sourced from a property of the\n\t * source object, or from a processing function.\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param  {object} json Data source object / array from the server\n\t *  @return {array} Array of data to use\n\t */\n\tfunction _fnAjaxDataSrc ( oSettings, json )\n\t{\n\t\tvar dataSrc = $.isPlainObject( oSettings.ajax ) && oSettings.ajax.dataSrc !== undefined ?\n\t\t\toSettings.ajax.dataSrc :\n\t\t\toSettings.sAjaxDataProp; // Compatibility with 1.9-.\n\t\n\t\t// Compatibility with 1.9-. In order to read from aaData, check if the\n\t\t// default has been changed, if not, check for aaData\n\t\tif ( dataSrc === 'data' ) {\n\t\t\treturn json.aaData || json[dataSrc];\n\t\t}\n\t\n\t\treturn dataSrc !== \"\" ?\n\t\t\t_fnGetObjectDataFn( dataSrc )( json ) :\n\t\t\tjson;\n\t}\n\t\n\t/**\n\t * Generate the node required for filtering text\n\t *  @returns {node} Filter control element\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFeatureHtmlFilter ( settings )\n\t{\n\t\tvar classes = settings.oClasses;\n\t\tvar tableId = settings.sTableId;\n\t\tvar language = settings.oLanguage;\n\t\tvar previousSearch = settings.oPreviousSearch;\n\t\tvar features = settings.aanFeatures;\n\t\tvar input = '<input type=\"search\" class=\"'+classes.sFilterInput+'\"/>';\n\t\n\t\tvar str = language.sSearch;\n\t\tstr = str.match(/_INPUT_/) ?\n\t\t\tstr.replace('_INPUT_', input) :\n\t\t\tstr+input;\n\t\n\t\tvar filter = $('<div/>', {\n\t\t\t\t'id': ! features.f ? tableId+'_filter' : null,\n\t\t\t\t'class': classes.sFilter\n\t\t\t} )\n\t\t\t.append( $('<label/>' ).append( str ) );\n\t\n\t\tvar searchFn = function() {\n\t\t\t/* Update all other filter input elements for the new display */\n\t\t\tvar n = features.f;\n\t\t\tvar val = !this.value ? \"\" : this.value; // mental IE8 fix :-(\n\t\n\t\t\t/* Now do the filter */\n\t\t\tif ( val != previousSearch.sSearch ) {\n\t\t\t\t_fnFilterComplete( settings, {\n\t\t\t\t\t\"sSearch\": val,\n\t\t\t\t\t\"bRegex\": previousSearch.bRegex,\n\t\t\t\t\t\"bSmart\": previousSearch.bSmart ,\n\t\t\t\t\t\"bCaseInsensitive\": previousSearch.bCaseInsensitive\n\t\t\t\t} );\n\t\n\t\t\t\t// Need to redraw, without resorting\n\t\t\t\tsettings._iDisplayStart = 0;\n\t\t\t\t_fnDraw( settings );\n\t\t\t}\n\t\t};\n\t\n\t\tvar searchDelay = settings.searchDelay !== null ?\n\t\t\tsettings.searchDelay :\n\t\t\t_fnDataSource( settings ) === 'ssp' ?\n\t\t\t\t400 :\n\t\t\t\t0;\n\t\n\t\tvar jqFilter = $('input', filter)\n\t\t\t.val( previousSearch.sSearch )\n\t\t\t.attr( 'placeholder', language.sSearchPlaceholder )\n\t\t\t.on(\n\t\t\t\t'keyup.DT search.DT input.DT paste.DT cut.DT',\n\t\t\t\tsearchDelay ?\n\t\t\t\t\t_fnThrottle( searchFn, searchDelay ) :\n\t\t\t\t\tsearchFn\n\t\t\t)\n\t\t\t.on( 'keypress.DT', function(e) {\n\t\t\t\t/* Prevent form submission */\n\t\t\t\tif ( e.keyCode == 13 ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} )\n\t\t\t.attr('aria-controls', tableId);\n\t\n\t\t// Update the input elements whenever the table is filtered\n\t\t$(settings.nTable).on( 'search.dt.DT', function ( ev, s ) {\n\t\t\tif ( settings === s ) {\n\t\t\t\t// IE9 throws an 'unknown error' if document.activeElement is used\n\t\t\t\t// inside an iframe or frame...\n\t\t\t\ttry {\n\t\t\t\t\tif ( jqFilter[0] !== document.activeElement ) {\n\t\t\t\t\t\tjqFilter.val( previousSearch.sSearch );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcatch ( e ) {}\n\t\t\t}\n\t\t} );\n\t\n\t\treturn filter[0];\n\t}\n\t\n\t\n\t/**\n\t * Filter the table using both the global filter and column based filtering\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {object} oSearch search information\n\t *  @param {int} [iForce] force a research of the master array (1) or not (undefined or 0)\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFilterComplete ( oSettings, oInput, iForce )\n\t{\n\t\tvar oPrevSearch = oSettings.oPreviousSearch;\n\t\tvar aoPrevSearch = oSettings.aoPreSearchCols;\n\t\tvar fnSaveFilter = function ( oFilter ) {\n\t\t\t/* Save the filtering values */\n\t\t\toPrevSearch.sSearch = oFilter.sSearch;\n\t\t\toPrevSearch.bRegex = oFilter.bRegex;\n\t\t\toPrevSearch.bSmart = oFilter.bSmart;\n\t\t\toPrevSearch.bCaseInsensitive = oFilter.bCaseInsensitive;\n\t\t};\n\t\tvar fnRegex = function ( o ) {\n\t\t\t// Backwards compatibility with the bEscapeRegex option\n\t\t\treturn o.bEscapeRegex !== undefined ? !o.bEscapeRegex : o.bRegex;\n\t\t};\n\t\n\t\t// Resolve any column types that are unknown due to addition or invalidation\n\t\t// @todo As per sort - can this be moved into an event handler?\n\t\t_fnColumnTypes( oSettings );\n\t\n\t\t/* In server-side processing all filtering is done by the server, so no point hanging around here */\n\t\tif ( _fnDataSource( oSettings ) != 'ssp' )\n\t\t{\n\t\t\t/* Global filter */\n\t\t\t_fnFilter( oSettings, oInput.sSearch, iForce, fnRegex(oInput), oInput.bSmart, oInput.bCaseInsensitive );\n\t\t\tfnSaveFilter( oInput );\n\t\n\t\t\t/* Now do the individual column filter */\n\t\t\tfor ( var i=0 ; i<aoPrevSearch.length ; i++ )\n\t\t\t{\n\t\t\t\t_fnFilterColumn( oSettings, aoPrevSearch[i].sSearch, i, fnRegex(aoPrevSearch[i]),\n\t\t\t\t\taoPrevSearch[i].bSmart, aoPrevSearch[i].bCaseInsensitive );\n\t\t\t}\n\t\n\t\t\t/* Custom filtering */\n\t\t\t_fnFilterCustom( oSettings );\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfnSaveFilter( oInput );\n\t\t}\n\t\n\t\t/* Tell the draw function we have been filtering */\n\t\toSettings.bFiltered = true;\n\t\t_fnCallbackFire( oSettings, null, 'search', [oSettings] );\n\t}\n\t\n\t\n\t/**\n\t * Apply custom filtering functions\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFilterCustom( settings )\n\t{\n\t\tvar filters = DataTable.ext.search;\n\t\tvar displayRows = settings.aiDisplay;\n\t\tvar row, rowIdx;\n\t\n\t\tfor ( var i=0, ien=filters.length ; i<ien ; i++ ) {\n\t\t\tvar rows = [];\n\t\n\t\t\t// Loop over each row and see if it should be included\n\t\t\tfor ( var j=0, jen=displayRows.length ; j<jen ; j++ ) {\n\t\t\t\trowIdx = displayRows[ j ];\n\t\t\t\trow = settings.aoData[ rowIdx ];\n\t\n\t\t\t\tif ( filters[i]( settings, row._aFilterData, rowIdx, row._aData, j ) ) {\n\t\t\t\t\trows.push( rowIdx );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// So the array reference doesn't break set the results into the\n\t\t\t// existing array\n\t\t\tdisplayRows.length = 0;\n\t\t\t$.merge( displayRows, rows );\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Filter the table on a per-column basis\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {string} sInput string to filter on\n\t *  @param {int} iColumn column to filter\n\t *  @param {bool} bRegex treat search string as a regular expression or not\n\t *  @param {bool} bSmart use smart filtering or not\n\t *  @param {bool} bCaseInsensitive Do case insenstive matching or not\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFilterColumn ( settings, searchStr, colIdx, regex, smart, caseInsensitive )\n\t{\n\t\tif ( searchStr === '' ) {\n\t\t\treturn;\n\t\t}\n\t\n\t\tvar data;\n\t\tvar out = [];\n\t\tvar display = settings.aiDisplay;\n\t\tvar rpSearch = _fnFilterCreateSearch( searchStr, regex, smart, caseInsensitive );\n\t\n\t\tfor ( var i=0 ; i<display.length ; i++ ) {\n\t\t\tdata = settings.aoData[ display[i] ]._aFilterData[ colIdx ];\n\t\n\t\t\tif ( rpSearch.test( data ) ) {\n\t\t\t\tout.push( display[i] );\n\t\t\t}\n\t\t}\n\t\n\t\tsettings.aiDisplay = out;\n\t}\n\t\n\t\n\t/**\n\t * Filter the data table based on user input and draw the table\n\t *  @param {object} settings dataTables settings object\n\t *  @param {string} input string to filter on\n\t *  @param {int} force optional - force a research of the master array (1) or not (undefined or 0)\n\t *  @param {bool} regex treat as a regular expression or not\n\t *  @param {bool} smart perform smart filtering or not\n\t *  @param {bool} caseInsensitive Do case insenstive matching or not\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFilter( settings, input, force, regex, smart, caseInsensitive )\n\t{\n\t\tvar rpSearch = _fnFilterCreateSearch( input, regex, smart, caseInsensitive );\n\t\tvar prevSearch = settings.oPreviousSearch.sSearch;\n\t\tvar displayMaster = settings.aiDisplayMaster;\n\t\tvar display, invalidated, i;\n\t\tvar filtered = [];\n\t\n\t\t// Need to take account of custom filtering functions - always filter\n\t\tif ( DataTable.ext.search.length !== 0 ) {\n\t\t\tforce = true;\n\t\t}\n\t\n\t\t// Check if any of the rows were invalidated\n\t\tinvalidated = _fnFilterData( settings );\n\t\n\t\t// If the input is blank - we just want the full data set\n\t\tif ( input.length <= 0 ) {\n\t\t\tsettings.aiDisplay = displayMaster.slice();\n\t\t}\n\t\telse {\n\t\t\t// New search - start from the master array\n\t\t\tif ( invalidated ||\n\t\t\t\t force ||\n\t\t\t\t regex ||\n\t\t\t\t prevSearch.length > input.length ||\n\t\t\t\t input.indexOf(prevSearch) !== 0 ||\n\t\t\t\t settings.bSorted // On resort, the display master needs to be\n\t\t\t\t                  // re-filtered since indexes will have changed\n\t\t\t) {\n\t\t\t\tsettings.aiDisplay = displayMaster.slice();\n\t\t\t}\n\t\n\t\t\t// Search the display array\n\t\t\tdisplay = settings.aiDisplay;\n\t\n\t\t\tfor ( i=0 ; i<display.length ; i++ ) {\n\t\t\t\tif ( rpSearch.test( settings.aoData[ display[i] ]._sFilterRow ) ) {\n\t\t\t\t\tfiltered.push( display[i] );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tsettings.aiDisplay = filtered;\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Build a regular expression object suitable for searching a table\n\t *  @param {string} sSearch string to search for\n\t *  @param {bool} bRegex treat as a regular expression or not\n\t *  @param {bool} bSmart perform smart filtering or not\n\t *  @param {bool} bCaseInsensitive Do case insensitive matching or not\n\t *  @returns {RegExp} constructed object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFilterCreateSearch( search, regex, smart, caseInsensitive )\n\t{\n\t\tsearch = regex ?\n\t\t\tsearch :\n\t\t\t_fnEscapeRegex( search );\n\t\t\n\t\tif ( smart ) {\n\t\t\t/* For smart filtering we want to allow the search to work regardless of\n\t\t\t * word order. We also want double quoted text to be preserved, so word\n\t\t\t * order is important - a la google. So this is what we want to\n\t\t\t * generate:\n\t\t\t * \n\t\t\t * ^(?=.*?\\bone\\b)(?=.*?\\btwo three\\b)(?=.*?\\bfour\\b).*$\n\t\t\t */\n\t\t\tvar a = $.map( search.match( /\"[^\"]+\"|[^ ]+/g ) || [''], function ( word ) {\n\t\t\t\tif ( word.charAt(0) === '\"' ) {\n\t\t\t\t\tvar m = word.match( /^\"(.*)\"$/ );\n\t\t\t\t\tword = m ? m[1] : word;\n\t\t\t\t}\n\t\n\t\t\t\treturn word.replace('\"', '');\n\t\t\t} );\n\t\n\t\t\tsearch = '^(?=.*?'+a.join( ')(?=.*?' )+').*$';\n\t\t}\n\t\n\t\treturn new RegExp( search, caseInsensitive ? 'i' : '' );\n\t}\n\t\n\t\n\t/**\n\t * Escape a string such that it can be used in a regular expression\n\t *  @param {string} sVal string to escape\n\t *  @returns {string} escaped string\n\t *  @memberof DataTable#oApi\n\t */\n\tvar _fnEscapeRegex = DataTable.util.escapeRegex;\n\t\n\tvar __filter_div = $('<div>')[0];\n\tvar __filter_div_textContent = __filter_div.textContent !== undefined;\n\t\n\t// Update the filtering data for each row if needed (by invalidation or first run)\n\tfunction _fnFilterData ( settings )\n\t{\n\t\tvar columns = settings.aoColumns;\n\t\tvar column;\n\t\tvar i, j, ien, jen, filterData, cellData, row;\n\t\tvar fomatters = DataTable.ext.type.search;\n\t\tvar wasInvalidated = false;\n\t\n\t\tfor ( i=0, ien=settings.aoData.length ; i<ien ; i++ ) {\n\t\t\trow = settings.aoData[i];\n\t\n\t\t\tif ( ! row._aFilterData ) {\n\t\t\t\tfilterData = [];\n\t\n\t\t\t\tfor ( j=0, jen=columns.length ; j<jen ; j++ ) {\n\t\t\t\t\tcolumn = columns[j];\n\t\n\t\t\t\t\tif ( column.bSearchable ) {\n\t\t\t\t\t\tcellData = _fnGetCellData( settings, i, j, 'filter' );\n\t\n\t\t\t\t\t\tif ( fomatters[ column.sType ] ) {\n\t\t\t\t\t\t\tcellData = fomatters[ column.sType ]( cellData );\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t// Search in DataTables 1.10 is string based. In 1.11 this\n\t\t\t\t\t\t// should be altered to also allow strict type checking.\n\t\t\t\t\t\tif ( cellData === null ) {\n\t\t\t\t\t\t\tcellData = '';\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tif ( typeof cellData !== 'string' && cellData.toString ) {\n\t\t\t\t\t\t\tcellData = cellData.toString();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tcellData = '';\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// If it looks like there is an HTML entity in the string,\n\t\t\t\t\t// attempt to decode it so sorting works as expected. Note that\n\t\t\t\t\t// we could use a single line of jQuery to do this, but the DOM\n\t\t\t\t\t// method used here is much faster http://jsperf.com/html-decode\n\t\t\t\t\tif ( cellData.indexOf && cellData.indexOf('&') !== -1 ) {\n\t\t\t\t\t\t__filter_div.innerHTML = cellData;\n\t\t\t\t\t\tcellData = __filter_div_textContent ?\n\t\t\t\t\t\t\t__filter_div.textContent :\n\t\t\t\t\t\t\t__filter_div.innerText;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif ( cellData.replace ) {\n\t\t\t\t\t\tcellData = cellData.replace(/[\\r\\n\\u2028]/g, '');\n\t\t\t\t\t}\n\t\n\t\t\t\t\tfilterData.push( cellData );\n\t\t\t\t}\n\t\n\t\t\t\trow._aFilterData = filterData;\n\t\t\t\trow._sFilterRow = filterData.join('  ');\n\t\t\t\twasInvalidated = true;\n\t\t\t}\n\t\t}\n\t\n\t\treturn wasInvalidated;\n\t}\n\t\n\t\n\t/**\n\t * Convert from the internal Hungarian notation to camelCase for external\n\t * interaction\n\t *  @param {object} obj Object to convert\n\t *  @returns {object} Inverted object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnSearchToCamel ( obj )\n\t{\n\t\treturn {\n\t\t\tsearch:          obj.sSearch,\n\t\t\tsmart:           obj.bSmart,\n\t\t\tregex:           obj.bRegex,\n\t\t\tcaseInsensitive: obj.bCaseInsensitive\n\t\t};\n\t}\n\t\n\t\n\t\n\t/**\n\t * Convert from camelCase notation to the internal Hungarian. We could use the\n\t * Hungarian convert function here, but this is cleaner\n\t *  @param {object} obj Object to convert\n\t *  @returns {object} Inverted object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnSearchToHung ( obj )\n\t{\n\t\treturn {\n\t\t\tsSearch:          obj.search,\n\t\t\tbSmart:           obj.smart,\n\t\t\tbRegex:           obj.regex,\n\t\t\tbCaseInsensitive: obj.caseInsensitive\n\t\t};\n\t}\n\t\n\t/**\n\t * Generate the node required for the info display\n\t *  @param {object} oSettings dataTables settings object\n\t *  @returns {node} Information element\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFeatureHtmlInfo ( settings )\n\t{\n\t\tvar\n\t\t\ttid = settings.sTableId,\n\t\t\tnodes = settings.aanFeatures.i,\n\t\t\tn = $('<div/>', {\n\t\t\t\t'class': settings.oClasses.sInfo,\n\t\t\t\t'id': ! nodes ? tid+'_info' : null\n\t\t\t} );\n\t\n\t\tif ( ! nodes ) {\n\t\t\t// Update display on each draw\n\t\t\tsettings.aoDrawCallback.push( {\n\t\t\t\t\"fn\": _fnUpdateInfo,\n\t\t\t\t\"sName\": \"information\"\n\t\t\t} );\n\t\n\t\t\tn\n\t\t\t\t.attr( 'role', 'status' )\n\t\t\t\t.attr( 'aria-live', 'polite' );\n\t\n\t\t\t// Table is described by our info div\n\t\t\t$(settings.nTable).attr( 'aria-describedby', tid+'_info' );\n\t\t}\n\t\n\t\treturn n[0];\n\t}\n\t\n\t\n\t/**\n\t * Update the information elements in the display\n\t *  @param {object} settings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnUpdateInfo ( settings )\n\t{\n\t\t/* Show information about the table */\n\t\tvar nodes = settings.aanFeatures.i;\n\t\tif ( nodes.length === 0 ) {\n\t\t\treturn;\n\t\t}\n\t\n\t\tvar\n\t\t\tlang  = settings.oLanguage,\n\t\t\tstart = settings._iDisplayStart+1,\n\t\t\tend   = settings.fnDisplayEnd(),\n\t\t\tmax   = settings.fnRecordsTotal(),\n\t\t\ttotal = settings.fnRecordsDisplay(),\n\t\t\tout   = total ?\n\t\t\t\tlang.sInfo :\n\t\t\t\tlang.sInfoEmpty;\n\t\n\t\tif ( total !== max ) {\n\t\t\t/* Record set after filtering */\n\t\t\tout += ' ' + lang.sInfoFiltered;\n\t\t}\n\t\n\t\t// Convert the macros\n\t\tout += lang.sInfoPostFix;\n\t\tout = _fnInfoMacros( settings, out );\n\t\n\t\tvar callback = lang.fnInfoCallback;\n\t\tif ( callback !== null ) {\n\t\t\tout = callback.call( settings.oInstance,\n\t\t\t\tsettings, start, end, max, total, out\n\t\t\t);\n\t\t}\n\t\n\t\t$(nodes).html( out );\n\t}\n\t\n\t\n\tfunction _fnInfoMacros ( settings, str )\n\t{\n\t\t// When infinite scrolling, we are always starting at 1. _iDisplayStart is used only\n\t\t// internally\n\t\tvar\n\t\t\tformatter  = settings.fnFormatNumber,\n\t\t\tstart      = settings._iDisplayStart+1,\n\t\t\tlen        = settings._iDisplayLength,\n\t\t\tvis        = settings.fnRecordsDisplay(),\n\t\t\tall        = len === -1;\n\t\n\t\treturn str.\n\t\t\treplace(/_START_/g, formatter.call( settings, start ) ).\n\t\t\treplace(/_END_/g,   formatter.call( settings, settings.fnDisplayEnd() ) ).\n\t\t\treplace(/_MAX_/g,   formatter.call( settings, settings.fnRecordsTotal() ) ).\n\t\t\treplace(/_TOTAL_/g, formatter.call( settings, vis ) ).\n\t\t\treplace(/_PAGE_/g,  formatter.call( settings, all ? 1 : Math.ceil( start / len ) ) ).\n\t\t\treplace(/_PAGES_/g, formatter.call( settings, all ? 1 : Math.ceil( vis / len ) ) );\n\t}\n\t\n\t\n\t\n\t/**\n\t * Draw the table for the first time, adding all required features\n\t *  @param {object} settings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnInitialise ( settings )\n\t{\n\t\tvar i, iLen, iAjaxStart=settings.iInitDisplayStart;\n\t\tvar columns = settings.aoColumns, column;\n\t\tvar features = settings.oFeatures;\n\t\tvar deferLoading = settings.bDeferLoading; // value modified by the draw\n\t\n\t\t/* Ensure that the table data is fully initialised */\n\t\tif ( ! settings.bInitialised ) {\n\t\t\tsetTimeout( function(){ _fnInitialise( settings ); }, 200 );\n\t\t\treturn;\n\t\t}\n\t\n\t\t/* Show the display HTML options */\n\t\t_fnAddOptionsHtml( settings );\n\t\n\t\t/* Build and draw the header / footer for the table */\n\t\t_fnBuildHead( settings );\n\t\t_fnDrawHead( settings, settings.aoHeader );\n\t\t_fnDrawHead( settings, settings.aoFooter );\n\t\n\t\t/* Okay to show that something is going on now */\n\t\t_fnProcessingDisplay( settings, true );\n\t\n\t\t/* Calculate sizes for columns */\n\t\tif ( features.bAutoWidth ) {\n\t\t\t_fnCalculateColumnWidths( settings );\n\t\t}\n\t\n\t\tfor ( i=0, iLen=columns.length ; i<iLen ; i++ ) {\n\t\t\tcolumn = columns[i];\n\t\n\t\t\tif ( column.sWidth ) {\n\t\t\t\tcolumn.nTh.style.width = _fnStringToCss( column.sWidth );\n\t\t\t}\n\t\t}\n\t\n\t\t_fnCallbackFire( settings, null, 'preInit', [settings] );\n\t\n\t\t// If there is default sorting required - let's do it. The sort function\n\t\t// will do the drawing for us. Otherwise we draw the table regardless of the\n\t\t// Ajax source - this allows the table to look initialised for Ajax sourcing\n\t\t// data (show 'loading' message possibly)\n\t\t_fnReDraw( settings );\n\t\n\t\t// Server-side processing init complete is done by _fnAjaxUpdateDraw\n\t\tvar dataSrc = _fnDataSource( settings );\n\t\tif ( dataSrc != 'ssp' || deferLoading ) {\n\t\t\t// if there is an ajax source load the data\n\t\t\tif ( dataSrc == 'ajax' ) {\n\t\t\t\t_fnBuildAjax( settings, [], function(json) {\n\t\t\t\t\tvar aData = _fnAjaxDataSrc( settings, json );\n\t\n\t\t\t\t\t// Got the data - add it to the table\n\t\t\t\t\tfor ( i=0 ; i<aData.length ; i++ ) {\n\t\t\t\t\t\t_fnAddData( settings, aData[i] );\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Reset the init display for cookie saving. We've already done\n\t\t\t\t\t// a filter, and therefore cleared it before. So we need to make\n\t\t\t\t\t// it appear 'fresh'\n\t\t\t\t\tsettings.iInitDisplayStart = iAjaxStart;\n\t\n\t\t\t\t\t_fnReDraw( settings );\n\t\n\t\t\t\t\t_fnProcessingDisplay( settings, false );\n\t\t\t\t\t_fnInitComplete( settings, json );\n\t\t\t\t}, settings );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t_fnProcessingDisplay( settings, false );\n\t\t\t\t_fnInitComplete( settings );\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Draw the table for the first time, adding all required features\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {object} [json] JSON from the server that completed the table, if using Ajax source\n\t *    with client-side processing (optional)\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnInitComplete ( settings, json )\n\t{\n\t\tsettings._bInitComplete = true;\n\t\n\t\t// When data was added after the initialisation (data or Ajax) we need to\n\t\t// calculate the column sizing\n\t\tif ( json || settings.oInit.aaData ) {\n\t\t\t_fnAdjustColumnSizing( settings );\n\t\t}\n\t\n\t\t_fnCallbackFire( settings, null, 'plugin-init', [settings, json] );\n\t\t_fnCallbackFire( settings, 'aoInitComplete', 'init', [settings, json] );\n\t}\n\t\n\t\n\tfunction _fnLengthChange ( settings, val )\n\t{\n\t\tvar len = parseInt( val, 10 );\n\t\tsettings._iDisplayLength = len;\n\t\n\t\t_fnLengthOverflow( settings );\n\t\n\t\t// Fire length change event\n\t\t_fnCallbackFire( settings, null, 'length', [settings, len] );\n\t}\n\t\n\t\n\t/**\n\t * Generate the node required for user display length changing\n\t *  @param {object} settings dataTables settings object\n\t *  @returns {node} Display length feature node\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFeatureHtmlLength ( settings )\n\t{\n\t\tvar\n\t\t\tclasses  = settings.oClasses,\n\t\t\ttableId  = settings.sTableId,\n\t\t\tmenu     = settings.aLengthMenu,\n\t\t\td2       = $.isArray( menu[0] ),\n\t\t\tlengths  = d2 ? menu[0] : menu,\n\t\t\tlanguage = d2 ? menu[1] : menu;\n\t\n\t\tvar select = $('<select/>', {\n\t\t\t'name':          tableId+'_length',\n\t\t\t'aria-controls': tableId,\n\t\t\t'class':         classes.sLengthSelect\n\t\t} );\n\t\n\t\tfor ( var i=0, ien=lengths.length ; i<ien ; i++ ) {\n\t\t\tselect[0][ i ] = new Option(\n\t\t\t\ttypeof language[i] === 'number' ?\n\t\t\t\t\tsettings.fnFormatNumber( language[i] ) :\n\t\t\t\t\tlanguage[i],\n\t\t\t\tlengths[i]\n\t\t\t);\n\t\t}\n\t\n\t\tvar div = $('<div><label/></div>').addClass( classes.sLength );\n\t\tif ( ! settings.aanFeatures.l ) {\n\t\t\tdiv[0].id = tableId+'_length';\n\t\t}\n\t\n\t\tdiv.children().append(\n\t\t\tsettings.oLanguage.sLengthMenu.replace( '_MENU_', select[0].outerHTML )\n\t\t);\n\t\n\t\t// Can't use `select` variable as user might provide their own and the\n\t\t// reference is broken by the use of outerHTML\n\t\t$('select', div)\n\t\t\t.val( settings._iDisplayLength )\n\t\t\t.on( 'change.DT', function(e) {\n\t\t\t\t_fnLengthChange( settings, $(this).val() );\n\t\t\t\t_fnDraw( settings );\n\t\t\t} );\n\t\n\t\t// Update node value whenever anything changes the table's length\n\t\t$(settings.nTable).on( 'length.dt.DT', function (e, s, len) {\n\t\t\tif ( settings === s ) {\n\t\t\t\t$('select', div).val( len );\n\t\t\t}\n\t\t} );\n\t\n\t\treturn div[0];\n\t}\n\t\n\t\n\t\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * Note that most of the paging logic is done in\n\t * DataTable.ext.pager\n\t */\n\t\n\t/**\n\t * Generate the node required for default pagination\n\t *  @param {object} oSettings dataTables settings object\n\t *  @returns {node} Pagination feature node\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFeatureHtmlPaginate ( settings )\n\t{\n\t\tvar\n\t\t\ttype   = settings.sPaginationType,\n\t\t\tplugin = DataTable.ext.pager[ type ],\n\t\t\tmodern = typeof plugin === 'function',\n\t\t\tredraw = function( settings ) {\n\t\t\t\t_fnDraw( settings );\n\t\t\t},\n\t\t\tnode = $('<div/>').addClass( settings.oClasses.sPaging + type )[0],\n\t\t\tfeatures = settings.aanFeatures;\n\t\n\t\tif ( ! modern ) {\n\t\t\tplugin.fnInit( settings, node, redraw );\n\t\t}\n\t\n\t\t/* Add a draw callback for the pagination on first instance, to update the paging display */\n\t\tif ( ! features.p )\n\t\t{\n\t\t\tnode.id = settings.sTableId+'_paginate';\n\t\n\t\t\tsettings.aoDrawCallback.push( {\n\t\t\t\t\"fn\": function( settings ) {\n\t\t\t\t\tif ( modern ) {\n\t\t\t\t\t\tvar\n\t\t\t\t\t\t\tstart      = settings._iDisplayStart,\n\t\t\t\t\t\t\tlen        = settings._iDisplayLength,\n\t\t\t\t\t\t\tvisRecords = settings.fnRecordsDisplay(),\n\t\t\t\t\t\t\tall        = len === -1,\n\t\t\t\t\t\t\tpage = all ? 0 : Math.ceil( start / len ),\n\t\t\t\t\t\t\tpages = all ? 1 : Math.ceil( visRecords / len ),\n\t\t\t\t\t\t\tbuttons = plugin(page, pages),\n\t\t\t\t\t\t\ti, ien;\n\t\n\t\t\t\t\t\tfor ( i=0, ien=features.p.length ; i<ien ; i++ ) {\n\t\t\t\t\t\t\t_fnRenderer( settings, 'pageButton' )(\n\t\t\t\t\t\t\t\tsettings, features.p[i], i, buttons, page, pages\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tplugin.fnUpdate( settings, redraw );\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"sName\": \"pagination\"\n\t\t\t} );\n\t\t}\n\t\n\t\treturn node;\n\t}\n\t\n\t\n\t/**\n\t * Alter the display settings to change the page\n\t *  @param {object} settings DataTables settings object\n\t *  @param {string|int} action Paging action to take: \"first\", \"previous\",\n\t *    \"next\" or \"last\" or page number to jump to (integer)\n\t *  @param [bool] redraw Automatically draw the update or not\n\t *  @returns {bool} true page has changed, false - no change\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnPageChange ( settings, action, redraw )\n\t{\n\t\tvar\n\t\t\tstart     = settings._iDisplayStart,\n\t\t\tlen       = settings._iDisplayLength,\n\t\t\trecords   = settings.fnRecordsDisplay();\n\t\n\t\tif ( records === 0 || len === -1 )\n\t\t{\n\t\t\tstart = 0;\n\t\t}\n\t\telse if ( typeof action === \"number\" )\n\t\t{\n\t\t\tstart = action * len;\n\t\n\t\t\tif ( start > records )\n\t\t\t{\n\t\t\t\tstart = 0;\n\t\t\t}\n\t\t}\n\t\telse if ( action == \"first\" )\n\t\t{\n\t\t\tstart = 0;\n\t\t}\n\t\telse if ( action == \"previous\" )\n\t\t{\n\t\t\tstart = len >= 0 ?\n\t\t\t\tstart - len :\n\t\t\t\t0;\n\t\n\t\t\tif ( start < 0 )\n\t\t\t{\n\t\t\t  start = 0;\n\t\t\t}\n\t\t}\n\t\telse if ( action == \"next\" )\n\t\t{\n\t\t\tif ( start + len < records )\n\t\t\t{\n\t\t\t\tstart += len;\n\t\t\t}\n\t\t}\n\t\telse if ( action == \"last\" )\n\t\t{\n\t\t\tstart = Math.floor( (records-1) / len) * len;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t_fnLog( settings, 0, \"Unknown paging action: \"+action, 5 );\n\t\t}\n\t\n\t\tvar changed = settings._iDisplayStart !== start;\n\t\tsettings._iDisplayStart = start;\n\t\n\t\tif ( changed ) {\n\t\t\t_fnCallbackFire( settings, null, 'page', [settings] );\n\t\n\t\t\tif ( redraw ) {\n\t\t\t\t_fnDraw( settings );\n\t\t\t}\n\t\t}\n\t\n\t\treturn changed;\n\t}\n\t\n\t\n\t\n\t/**\n\t * Generate the node required for the processing node\n\t *  @param {object} settings dataTables settings object\n\t *  @returns {node} Processing element\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFeatureHtmlProcessing ( settings )\n\t{\n\t\treturn $('<div/>', {\n\t\t\t\t'id': ! settings.aanFeatures.r ? settings.sTableId+'_processing' : null,\n\t\t\t\t'class': settings.oClasses.sProcessing\n\t\t\t} )\n\t\t\t.html( settings.oLanguage.sProcessing )\n\t\t\t.insertBefore( settings.nTable )[0];\n\t}\n\t\n\t\n\t/**\n\t * Display or hide the processing indicator\n\t *  @param {object} settings dataTables settings object\n\t *  @param {bool} show Show the processing indicator (true) or not (false)\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnProcessingDisplay ( settings, show )\n\t{\n\t\tif ( settings.oFeatures.bProcessing ) {\n\t\t\t$(settings.aanFeatures.r).css( 'display', show ? 'block' : 'none' );\n\t\t}\n\t\n\t\t_fnCallbackFire( settings, null, 'processing', [settings, show] );\n\t}\n\t\n\t/**\n\t * Add any control elements for the table - specifically scrolling\n\t *  @param {object} settings dataTables settings object\n\t *  @returns {node} Node to add to the DOM\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFeatureHtmlTable ( settings )\n\t{\n\t\tvar table = $(settings.nTable);\n\t\n\t\t// Add the ARIA grid role to the table\n\t\ttable.attr( 'role', 'grid' );\n\t\n\t\t// Scrolling from here on in\n\t\tvar scroll = settings.oScroll;\n\t\n\t\tif ( scroll.sX === '' && scroll.sY === '' ) {\n\t\t\treturn settings.nTable;\n\t\t}\n\t\n\t\tvar scrollX = scroll.sX;\n\t\tvar scrollY = scroll.sY;\n\t\tvar classes = settings.oClasses;\n\t\tvar caption = table.children('caption');\n\t\tvar captionSide = caption.length ? caption[0]._captionSide : null;\n\t\tvar headerClone = $( table[0].cloneNode(false) );\n\t\tvar footerClone = $( table[0].cloneNode(false) );\n\t\tvar footer = table.children('tfoot');\n\t\tvar _div = '<div/>';\n\t\tvar size = function ( s ) {\n\t\t\treturn !s ? null : _fnStringToCss( s );\n\t\t};\n\t\n\t\tif ( ! footer.length ) {\n\t\t\tfooter = null;\n\t\t}\n\t\n\t\t/*\n\t\t * The HTML structure that we want to generate in this function is:\n\t\t *  div - scroller\n\t\t *    div - scroll head\n\t\t *      div - scroll head inner\n\t\t *        table - scroll head table\n\t\t *          thead - thead\n\t\t *    div - scroll body\n\t\t *      table - table (master table)\n\t\t *        thead - thead clone for sizing\n\t\t *        tbody - tbody\n\t\t *    div - scroll foot\n\t\t *      div - scroll foot inner\n\t\t *        table - scroll foot table\n\t\t *          tfoot - tfoot\n\t\t */\n\t\tvar scroller = $( _div, { 'class': classes.sScrollWrapper } )\n\t\t\t.append(\n\t\t\t\t$(_div, { 'class': classes.sScrollHead } )\n\t\t\t\t\t.css( {\n\t\t\t\t\t\toverflow: 'hidden',\n\t\t\t\t\t\tposition: 'relative',\n\t\t\t\t\t\tborder: 0,\n\t\t\t\t\t\twidth: scrollX ? size(scrollX) : '100%'\n\t\t\t\t\t} )\n\t\t\t\t\t.append(\n\t\t\t\t\t\t$(_div, { 'class': classes.sScrollHeadInner } )\n\t\t\t\t\t\t\t.css( {\n\t\t\t\t\t\t\t\t'box-sizing': 'content-box',\n\t\t\t\t\t\t\t\twidth: scroll.sXInner || '100%'\n\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\t\theaderClone\n\t\t\t\t\t\t\t\t\t.removeAttr('id')\n\t\t\t\t\t\t\t\t\t.css( 'margin-left', 0 )\n\t\t\t\t\t\t\t\t\t.append( captionSide === 'top' ? caption : null )\n\t\t\t\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\t\t\t\ttable.children('thead')\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t)\n\t\t\t.append(\n\t\t\t\t$(_div, { 'class': classes.sScrollBody } )\n\t\t\t\t\t.css( {\n\t\t\t\t\t\tposition: 'relative',\n\t\t\t\t\t\toverflow: 'auto',\n\t\t\t\t\t\twidth: size( scrollX )\n\t\t\t\t\t} )\n\t\t\t\t\t.append( table )\n\t\t\t);\n\t\n\t\tif ( footer ) {\n\t\t\tscroller.append(\n\t\t\t\t$(_div, { 'class': classes.sScrollFoot } )\n\t\t\t\t\t.css( {\n\t\t\t\t\t\toverflow: 'hidden',\n\t\t\t\t\t\tborder: 0,\n\t\t\t\t\t\twidth: scrollX ? size(scrollX) : '100%'\n\t\t\t\t\t} )\n\t\t\t\t\t.append(\n\t\t\t\t\t\t$(_div, { 'class': classes.sScrollFootInner } )\n\t\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\t\tfooterClone\n\t\t\t\t\t\t\t\t\t.removeAttr('id')\n\t\t\t\t\t\t\t\t\t.css( 'margin-left', 0 )\n\t\t\t\t\t\t\t\t\t.append( captionSide === 'bottom' ? caption : null )\n\t\t\t\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\t\t\t\ttable.children('tfoot')\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t);\n\t\t}\n\t\n\t\tvar children = scroller.children();\n\t\tvar scrollHead = children[0];\n\t\tvar scrollBody = children[1];\n\t\tvar scrollFoot = footer ? children[2] : null;\n\t\n\t\t// When the body is scrolled, then we also want to scroll the headers\n\t\tif ( scrollX ) {\n\t\t\t$(scrollBody).on( 'scroll.DT', function (e) {\n\t\t\t\tvar scrollLeft = this.scrollLeft;\n\t\n\t\t\t\tscrollHead.scrollLeft = scrollLeft;\n\t\n\t\t\t\tif ( footer ) {\n\t\t\t\t\tscrollFoot.scrollLeft = scrollLeft;\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\t\n\t\t$(scrollBody).css(\n\t\t\tscrollY && scroll.bCollapse ? 'max-height' : 'height', \n\t\t\tscrollY\n\t\t);\n\t\n\t\tsettings.nScrollHead = scrollHead;\n\t\tsettings.nScrollBody = scrollBody;\n\t\tsettings.nScrollFoot = scrollFoot;\n\t\n\t\t// On redraw - align columns\n\t\tsettings.aoDrawCallback.push( {\n\t\t\t\"fn\": _fnScrollDraw,\n\t\t\t\"sName\": \"scrolling\"\n\t\t} );\n\t\n\t\treturn scroller[0];\n\t}\n\t\n\t\n\t\n\t/**\n\t * Update the header, footer and body tables for resizing - i.e. column\n\t * alignment.\n\t *\n\t * Welcome to the most horrible function DataTables. The process that this\n\t * function follows is basically:\n\t *   1. Re-create the table inside the scrolling div\n\t *   2. Take live measurements from the DOM\n\t *   3. Apply the measurements to align the columns\n\t *   4. Clean up\n\t *\n\t *  @param {object} settings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnScrollDraw ( settings )\n\t{\n\t\t// Given that this is such a monster function, a lot of variables are use\n\t\t// to try and keep the minimised size as small as possible\n\t\tvar\n\t\t\tscroll         = settings.oScroll,\n\t\t\tscrollX        = scroll.sX,\n\t\t\tscrollXInner   = scroll.sXInner,\n\t\t\tscrollY        = scroll.sY,\n\t\t\tbarWidth       = scroll.iBarWidth,\n\t\t\tdivHeader      = $(settings.nScrollHead),\n\t\t\tdivHeaderStyle = divHeader[0].style,\n\t\t\tdivHeaderInner = divHeader.children('div'),\n\t\t\tdivHeaderInnerStyle = divHeaderInner[0].style,\n\t\t\tdivHeaderTable = divHeaderInner.children('table'),\n\t\t\tdivBodyEl      = settings.nScrollBody,\n\t\t\tdivBody        = $(divBodyEl),\n\t\t\tdivBodyStyle   = divBodyEl.style,\n\t\t\tdivFooter      = $(settings.nScrollFoot),\n\t\t\tdivFooterInner = divFooter.children('div'),\n\t\t\tdivFooterTable = divFooterInner.children('table'),\n\t\t\theader         = $(settings.nTHead),\n\t\t\ttable          = $(settings.nTable),\n\t\t\ttableEl        = table[0],\n\t\t\ttableStyle     = tableEl.style,\n\t\t\tfooter         = settings.nTFoot ? $(settings.nTFoot) : null,\n\t\t\tbrowser        = settings.oBrowser,\n\t\t\tie67           = browser.bScrollOversize,\n\t\t\tdtHeaderCells  = _pluck( settings.aoColumns, 'nTh' ),\n\t\t\theaderTrgEls, footerTrgEls,\n\t\t\theaderSrcEls, footerSrcEls,\n\t\t\theaderCopy, footerCopy,\n\t\t\theaderWidths=[], footerWidths=[],\n\t\t\theaderContent=[], footerContent=[],\n\t\t\tidx, correction, sanityWidth,\n\t\t\tzeroOut = function(nSizer) {\n\t\t\t\tvar style = nSizer.style;\n\t\t\t\tstyle.paddingTop = \"0\";\n\t\t\t\tstyle.paddingBottom = \"0\";\n\t\t\t\tstyle.borderTopWidth = \"0\";\n\t\t\t\tstyle.borderBottomWidth = \"0\";\n\t\t\t\tstyle.height = 0;\n\t\t\t};\n\t\n\t\t// If the scrollbar visibility has changed from the last draw, we need to\n\t\t// adjust the column sizes as the table width will have changed to account\n\t\t// for the scrollbar\n\t\tvar scrollBarVis = divBodyEl.scrollHeight > divBodyEl.clientHeight;\n\t\t\n\t\tif ( settings.scrollBarVis !== scrollBarVis && settings.scrollBarVis !== undefined ) {\n\t\t\tsettings.scrollBarVis = scrollBarVis;\n\t\t\t_fnAdjustColumnSizing( settings );\n\t\t\treturn; // adjust column sizing will call this function again\n\t\t}\n\t\telse {\n\t\t\tsettings.scrollBarVis = scrollBarVis;\n\t\t}\n\t\n\t\t/*\n\t\t * 1. Re-create the table inside the scrolling div\n\t\t */\n\t\n\t\t// Remove the old minimised thead and tfoot elements in the inner table\n\t\ttable.children('thead, tfoot').remove();\n\t\n\t\tif ( footer ) {\n\t\t\tfooterCopy = footer.clone().prependTo( table );\n\t\t\tfooterTrgEls = footer.find('tr'); // the original tfoot is in its own table and must be sized\n\t\t\tfooterSrcEls = footerCopy.find('tr');\n\t\t}\n\t\n\t\t// Clone the current header and footer elements and then place it into the inner table\n\t\theaderCopy = header.clone().prependTo( table );\n\t\theaderTrgEls = header.find('tr'); // original header is in its own table\n\t\theaderSrcEls = headerCopy.find('tr');\n\t\theaderCopy.find('th, td').removeAttr('tabindex');\n\t\n\t\n\t\t/*\n\t\t * 2. Take live measurements from the DOM - do not alter the DOM itself!\n\t\t */\n\t\n\t\t// Remove old sizing and apply the calculated column widths\n\t\t// Get the unique column headers in the newly created (cloned) header. We want to apply the\n\t\t// calculated sizes to this header\n\t\tif ( ! scrollX )\n\t\t{\n\t\t\tdivBodyStyle.width = '100%';\n\t\t\tdivHeader[0].style.width = '100%';\n\t\t}\n\t\n\t\t$.each( _fnGetUniqueThs( settings, headerCopy ), function ( i, el ) {\n\t\t\tidx = _fnVisibleToColumnIndex( settings, i );\n\t\t\tel.style.width = settings.aoColumns[idx].sWidth;\n\t\t} );\n\t\n\t\tif ( footer ) {\n\t\t\t_fnApplyToChildren( function(n) {\n\t\t\t\tn.style.width = \"\";\n\t\t\t}, footerSrcEls );\n\t\t}\n\t\n\t\t// Size the table as a whole\n\t\tsanityWidth = table.outerWidth();\n\t\tif ( scrollX === \"\" ) {\n\t\t\t// No x scrolling\n\t\t\ttableStyle.width = \"100%\";\n\t\n\t\t\t// IE7 will make the width of the table when 100% include the scrollbar\n\t\t\t// - which is shouldn't. When there is a scrollbar we need to take this\n\t\t\t// into account.\n\t\t\tif ( ie67 && (table.find('tbody').height() > divBodyEl.offsetHeight ||\n\t\t\t\tdivBody.css('overflow-y') == \"scroll\")\n\t\t\t) {\n\t\t\t\ttableStyle.width = _fnStringToCss( table.outerWidth() - barWidth);\n\t\t\t}\n\t\n\t\t\t// Recalculate the sanity width\n\t\t\tsanityWidth = table.outerWidth();\n\t\t}\n\t\telse if ( scrollXInner !== \"\" ) {\n\t\t\t// legacy x scroll inner has been given - use it\n\t\t\ttableStyle.width = _fnStringToCss(scrollXInner);\n\t\n\t\t\t// Recalculate the sanity width\n\t\t\tsanityWidth = table.outerWidth();\n\t\t}\n\t\n\t\t// Hidden header should have zero height, so remove padding and borders. Then\n\t\t// set the width based on the real headers\n\t\n\t\t// Apply all styles in one pass\n\t\t_fnApplyToChildren( zeroOut, headerSrcEls );\n\t\n\t\t// Read all widths in next pass\n\t\t_fnApplyToChildren( function(nSizer) {\n\t\t\theaderContent.push( nSizer.innerHTML );\n\t\t\theaderWidths.push( _fnStringToCss( $(nSizer).css('width') ) );\n\t\t}, headerSrcEls );\n\t\n\t\t// Apply all widths in final pass\n\t\t_fnApplyToChildren( function(nToSize, i) {\n\t\t\t// Only apply widths to the DataTables detected header cells - this\n\t\t\t// prevents complex headers from having contradictory sizes applied\n\t\t\tif ( $.inArray( nToSize, dtHeaderCells ) !== -1 ) {\n\t\t\t\tnToSize.style.width = headerWidths[i];\n\t\t\t}\n\t\t}, headerTrgEls );\n\t\n\t\t$(headerSrcEls).height(0);\n\t\n\t\t/* Same again with the footer if we have one */\n\t\tif ( footer )\n\t\t{\n\t\t\t_fnApplyToChildren( zeroOut, footerSrcEls );\n\t\n\t\t\t_fnApplyToChildren( function(nSizer) {\n\t\t\t\tfooterContent.push( nSizer.innerHTML );\n\t\t\t\tfooterWidths.push( _fnStringToCss( $(nSizer).css('width') ) );\n\t\t\t}, footerSrcEls );\n\t\n\t\t\t_fnApplyToChildren( function(nToSize, i) {\n\t\t\t\tnToSize.style.width = footerWidths[i];\n\t\t\t}, footerTrgEls );\n\t\n\t\t\t$(footerSrcEls).height(0);\n\t\t}\n\t\n\t\n\t\t/*\n\t\t * 3. Apply the measurements\n\t\t */\n\t\n\t\t// \"Hide\" the header and footer that we used for the sizing. We need to keep\n\t\t// the content of the cell so that the width applied to the header and body\n\t\t// both match, but we want to hide it completely. We want to also fix their\n\t\t// width to what they currently are\n\t\t_fnApplyToChildren( function(nSizer, i) {\n\t\t\tnSizer.innerHTML = '<div class=\"dataTables_sizing\">'+headerContent[i]+'</div>';\n\t\t\tnSizer.childNodes[0].style.height = \"0\";\n\t\t\tnSizer.childNodes[0].style.overflow = \"hidden\";\n\t\t\tnSizer.style.width = headerWidths[i];\n\t\t}, headerSrcEls );\n\t\n\t\tif ( footer )\n\t\t{\n\t\t\t_fnApplyToChildren( function(nSizer, i) {\n\t\t\t\tnSizer.innerHTML = '<div class=\"dataTables_sizing\">'+footerContent[i]+'</div>';\n\t\t\t\tnSizer.childNodes[0].style.height = \"0\";\n\t\t\t\tnSizer.childNodes[0].style.overflow = \"hidden\";\n\t\t\t\tnSizer.style.width = footerWidths[i];\n\t\t\t}, footerSrcEls );\n\t\t}\n\t\n\t\t// Sanity check that the table is of a sensible width. If not then we are going to get\n\t\t// misalignment - try to prevent this by not allowing the table to shrink below its min width\n\t\tif ( table.outerWidth() < sanityWidth )\n\t\t{\n\t\t\t// The min width depends upon if we have a vertical scrollbar visible or not */\n\t\t\tcorrection = ((divBodyEl.scrollHeight > divBodyEl.offsetHeight ||\n\t\t\t\tdivBody.css('overflow-y') == \"scroll\")) ?\n\t\t\t\t\tsanityWidth+barWidth :\n\t\t\t\t\tsanityWidth;\n\t\n\t\t\t// IE6/7 are a law unto themselves...\n\t\t\tif ( ie67 && (divBodyEl.scrollHeight >\n\t\t\t\tdivBodyEl.offsetHeight || divBody.css('overflow-y') == \"scroll\")\n\t\t\t) {\n\t\t\t\ttableStyle.width = _fnStringToCss( correction-barWidth );\n\t\t\t}\n\t\n\t\t\t// And give the user a warning that we've stopped the table getting too small\n\t\t\tif ( scrollX === \"\" || scrollXInner !== \"\" ) {\n\t\t\t\t_fnLog( settings, 1, 'Possible column misalignment', 6 );\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcorrection = '100%';\n\t\t}\n\t\n\t\t// Apply to the container elements\n\t\tdivBodyStyle.width = _fnStringToCss( correction );\n\t\tdivHeaderStyle.width = _fnStringToCss( correction );\n\t\n\t\tif ( footer ) {\n\t\t\tsettings.nScrollFoot.style.width = _fnStringToCss( correction );\n\t\t}\n\t\n\t\n\t\t/*\n\t\t * 4. Clean up\n\t\t */\n\t\tif ( ! scrollY ) {\n\t\t\t/* IE7< puts a vertical scrollbar in place (when it shouldn't be) due to subtracting\n\t\t\t * the scrollbar height from the visible display, rather than adding it on. We need to\n\t\t\t * set the height in order to sort this. Don't want to do it in any other browsers.\n\t\t\t */\n\t\t\tif ( ie67 ) {\n\t\t\t\tdivBodyStyle.height = _fnStringToCss( tableEl.offsetHeight+barWidth );\n\t\t\t}\n\t\t}\n\t\n\t\t/* Finally set the width's of the header and footer tables */\n\t\tvar iOuterWidth = table.outerWidth();\n\t\tdivHeaderTable[0].style.width = _fnStringToCss( iOuterWidth );\n\t\tdivHeaderInnerStyle.width = _fnStringToCss( iOuterWidth );\n\t\n\t\t// Figure out if there are scrollbar present - if so then we need a the header and footer to\n\t\t// provide a bit more space to allow \"overflow\" scrolling (i.e. past the scrollbar)\n\t\tvar bScrolling = table.height() > divBodyEl.clientHeight || divBody.css('overflow-y') == \"scroll\";\n\t\tvar padding = 'padding' + (browser.bScrollbarLeft ? 'Left' : 'Right' );\n\t\tdivHeaderInnerStyle[ padding ] = bScrolling ? barWidth+\"px\" : \"0px\";\n\t\n\t\tif ( footer ) {\n\t\t\tdivFooterTable[0].style.width = _fnStringToCss( iOuterWidth );\n\t\t\tdivFooterInner[0].style.width = _fnStringToCss( iOuterWidth );\n\t\t\tdivFooterInner[0].style[padding] = bScrolling ? barWidth+\"px\" : \"0px\";\n\t\t}\n\t\n\t\t// Correct DOM ordering for colgroup - comes before the thead\n\t\ttable.children('colgroup').insertBefore( table.children('thead') );\n\t\n\t\t/* Adjust the position of the header in case we loose the y-scrollbar */\n\t\tdivBody.trigger('scroll');\n\t\n\t\t// If sorting or filtering has occurred, jump the scrolling back to the top\n\t\t// only if we aren't holding the position\n\t\tif ( (settings.bSorted || settings.bFiltered) && ! settings._drawHold ) {\n\t\t\tdivBodyEl.scrollTop = 0;\n\t\t}\n\t}\n\t\n\t\n\t\n\t/**\n\t * Apply a given function to the display child nodes of an element array (typically\n\t * TD children of TR rows\n\t *  @param {function} fn Method to apply to the objects\n\t *  @param array {nodes} an1 List of elements to look through for display children\n\t *  @param array {nodes} an2 Another list (identical structure to the first) - optional\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnApplyToChildren( fn, an1, an2 )\n\t{\n\t\tvar index=0, i=0, iLen=an1.length;\n\t\tvar nNode1, nNode2;\n\t\n\t\twhile ( i < iLen ) {\n\t\t\tnNode1 = an1[i].firstChild;\n\t\t\tnNode2 = an2 ? an2[i].firstChild : null;\n\t\n\t\t\twhile ( nNode1 ) {\n\t\t\t\tif ( nNode1.nodeType === 1 ) {\n\t\t\t\t\tif ( an2 ) {\n\t\t\t\t\t\tfn( nNode1, nNode2, index );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tfn( nNode1, index );\n\t\t\t\t\t}\n\t\n\t\t\t\t\tindex++;\n\t\t\t\t}\n\t\n\t\t\t\tnNode1 = nNode1.nextSibling;\n\t\t\t\tnNode2 = an2 ? nNode2.nextSibling : null;\n\t\t\t}\n\t\n\t\t\ti++;\n\t\t}\n\t}\n\t\n\t\n\t\n\tvar __re_html_remove = /<.*?>/g;\n\t\n\t\n\t/**\n\t * Calculate the width of columns for the table\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnCalculateColumnWidths ( oSettings )\n\t{\n\t\tvar\n\t\t\ttable = oSettings.nTable,\n\t\t\tcolumns = oSettings.aoColumns,\n\t\t\tscroll = oSettings.oScroll,\n\t\t\tscrollY = scroll.sY,\n\t\t\tscrollX = scroll.sX,\n\t\t\tscrollXInner = scroll.sXInner,\n\t\t\tcolumnCount = columns.length,\n\t\t\tvisibleColumns = _fnGetColumns( oSettings, 'bVisible' ),\n\t\t\theaderCells = $('th', oSettings.nTHead),\n\t\t\ttableWidthAttr = table.getAttribute('width'), // from DOM element\n\t\t\ttableContainer = table.parentNode,\n\t\t\tuserInputs = false,\n\t\t\ti, column, columnIdx, width, outerWidth,\n\t\t\tbrowser = oSettings.oBrowser,\n\t\t\tie67 = browser.bScrollOversize;\n\t\n\t\tvar styleWidth = table.style.width;\n\t\tif ( styleWidth && styleWidth.indexOf('%') !== -1 ) {\n\t\t\ttableWidthAttr = styleWidth;\n\t\t}\n\t\n\t\t/* Convert any user input sizes into pixel sizes */\n\t\tfor ( i=0 ; i<visibleColumns.length ; i++ ) {\n\t\t\tcolumn = columns[ visibleColumns[i] ];\n\t\n\t\t\tif ( column.sWidth !== null ) {\n\t\t\t\tcolumn.sWidth = _fnConvertToWidth( column.sWidthOrig, tableContainer );\n\t\n\t\t\t\tuserInputs = true;\n\t\t\t}\n\t\t}\n\t\n\t\t/* If the number of columns in the DOM equals the number that we have to\n\t\t * process in DataTables, then we can use the offsets that are created by\n\t\t * the web- browser. No custom sizes can be set in order for this to happen,\n\t\t * nor scrolling used\n\t\t */\n\t\tif ( ie67 || ! userInputs && ! scrollX && ! scrollY &&\n\t\t     columnCount == _fnVisbleColumns( oSettings ) &&\n\t\t     columnCount == headerCells.length\n\t\t) {\n\t\t\tfor ( i=0 ; i<columnCount ; i++ ) {\n\t\t\t\tvar colIdx = _fnVisibleToColumnIndex( oSettings, i );\n\t\n\t\t\t\tif ( colIdx !== null ) {\n\t\t\t\t\tcolumns[ colIdx ].sWidth = _fnStringToCss( headerCells.eq(i).width() );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Otherwise construct a single row, worst case, table with the widest\n\t\t\t// node in the data, assign any user defined widths, then insert it into\n\t\t\t// the DOM and allow the browser to do all the hard work of calculating\n\t\t\t// table widths\n\t\t\tvar tmpTable = $(table).clone() // don't use cloneNode - IE8 will remove events on the main table\n\t\t\t\t.css( 'visibility', 'hidden' )\n\t\t\t\t.removeAttr( 'id' );\n\t\n\t\t\t// Clean up the table body\n\t\t\ttmpTable.find('tbody tr').remove();\n\t\t\tvar tr = $('<tr/>').appendTo( tmpTable.find('tbody') );\n\t\n\t\t\t// Clone the table header and footer - we can't use the header / footer\n\t\t\t// from the cloned table, since if scrolling is active, the table's\n\t\t\t// real header and footer are contained in different table tags\n\t\t\ttmpTable.find('thead, tfoot').remove();\n\t\t\ttmpTable\n\t\t\t\t.append( $(oSettings.nTHead).clone() )\n\t\t\t\t.append( $(oSettings.nTFoot).clone() );\n\t\n\t\t\t// Remove any assigned widths from the footer (from scrolling)\n\t\t\ttmpTable.find('tfoot th, tfoot td').css('width', '');\n\t\n\t\t\t// Apply custom sizing to the cloned header\n\t\t\theaderCells = _fnGetUniqueThs( oSettings, tmpTable.find('thead')[0] );\n\t\n\t\t\tfor ( i=0 ; i<visibleColumns.length ; i++ ) {\n\t\t\t\tcolumn = columns[ visibleColumns[i] ];\n\t\n\t\t\t\theaderCells[i].style.width = column.sWidthOrig !== null && column.sWidthOrig !== '' ?\n\t\t\t\t\t_fnStringToCss( column.sWidthOrig ) :\n\t\t\t\t\t'';\n\t\n\t\t\t\t// For scrollX we need to force the column width otherwise the\n\t\t\t\t// browser will collapse it. If this width is smaller than the\n\t\t\t\t// width the column requires, then it will have no effect\n\t\t\t\tif ( column.sWidthOrig && scrollX ) {\n\t\t\t\t\t$( headerCells[i] ).append( $('<div/>').css( {\n\t\t\t\t\t\twidth: column.sWidthOrig,\n\t\t\t\t\t\tmargin: 0,\n\t\t\t\t\t\tpadding: 0,\n\t\t\t\t\t\tborder: 0,\n\t\t\t\t\t\theight: 1\n\t\t\t\t\t} ) );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// Find the widest cell for each column and put it into the table\n\t\t\tif ( oSettings.aoData.length ) {\n\t\t\t\tfor ( i=0 ; i<visibleColumns.length ; i++ ) {\n\t\t\t\t\tcolumnIdx = visibleColumns[i];\n\t\t\t\t\tcolumn = columns[ columnIdx ];\n\t\n\t\t\t\t\t$( _fnGetWidestNode( oSettings, columnIdx ) )\n\t\t\t\t\t\t.clone( false )\n\t\t\t\t\t\t.append( column.sContentPadding )\n\t\t\t\t\t\t.appendTo( tr );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// Tidy the temporary table - remove name attributes so there aren't\n\t\t\t// duplicated in the dom (radio elements for example)\n\t\t\t$('[name]', tmpTable).removeAttr('name');\n\t\n\t\t\t// Table has been built, attach to the document so we can work with it.\n\t\t\t// A holding element is used, positioned at the top of the container\n\t\t\t// with minimal height, so it has no effect on if the container scrolls\n\t\t\t// or not. Otherwise it might trigger scrolling when it actually isn't\n\t\t\t// needed\n\t\t\tvar holder = $('<div/>').css( scrollX || scrollY ?\n\t\t\t\t\t{\n\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\theight: 1,\n\t\t\t\t\t\tright: 0,\n\t\t\t\t\t\toverflow: 'hidden'\n\t\t\t\t\t} :\n\t\t\t\t\t{}\n\t\t\t\t)\n\t\t\t\t.append( tmpTable )\n\t\t\t\t.appendTo( tableContainer );\n\t\n\t\t\t// When scrolling (X or Y) we want to set the width of the table as \n\t\t\t// appropriate. However, when not scrolling leave the table width as it\n\t\t\t// is. This results in slightly different, but I think correct behaviour\n\t\t\tif ( scrollX && scrollXInner ) {\n\t\t\t\ttmpTable.width( scrollXInner );\n\t\t\t}\n\t\t\telse if ( scrollX ) {\n\t\t\t\ttmpTable.css( 'width', 'auto' );\n\t\t\t\ttmpTable.removeAttr('width');\n\t\n\t\t\t\t// If there is no width attribute or style, then allow the table to\n\t\t\t\t// collapse\n\t\t\t\tif ( tmpTable.width() < tableContainer.clientWidth && tableWidthAttr ) {\n\t\t\t\t\ttmpTable.width( tableContainer.clientWidth );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if ( scrollY ) {\n\t\t\t\ttmpTable.width( tableContainer.clientWidth );\n\t\t\t}\n\t\t\telse if ( tableWidthAttr ) {\n\t\t\t\ttmpTable.width( tableWidthAttr );\n\t\t\t}\n\t\n\t\t\t// Get the width of each column in the constructed table - we need to\n\t\t\t// know the inner width (so it can be assigned to the other table's\n\t\t\t// cells) and the outer width so we can calculate the full width of the\n\t\t\t// table. This is safe since DataTables requires a unique cell for each\n\t\t\t// column, but if ever a header can span multiple columns, this will\n\t\t\t// need to be modified.\n\t\t\tvar total = 0;\n\t\t\tfor ( i=0 ; i<visibleColumns.length ; i++ ) {\n\t\t\t\tvar cell = $(headerCells[i]);\n\t\t\t\tvar border = cell.outerWidth() - cell.width();\n\t\n\t\t\t\t// Use getBounding... where possible (not IE8-) because it can give\n\t\t\t\t// sub-pixel accuracy, which we then want to round up!\n\t\t\t\tvar bounding = browser.bBounding ?\n\t\t\t\t\tMath.ceil( headerCells[i].getBoundingClientRect().width ) :\n\t\t\t\t\tcell.outerWidth();\n\t\n\t\t\t\t// Total is tracked to remove any sub-pixel errors as the outerWidth\n\t\t\t\t// of the table might not equal the total given here (IE!).\n\t\t\t\ttotal += bounding;\n\t\n\t\t\t\t// Width for each column to use\n\t\t\t\tcolumns[ visibleColumns[i] ].sWidth = _fnStringToCss( bounding - border );\n\t\t\t}\n\t\n\t\t\ttable.style.width = _fnStringToCss( total );\n\t\n\t\t\t// Finished with the table - ditch it\n\t\t\tholder.remove();\n\t\t}\n\t\n\t\t// If there is a width attr, we want to attach an event listener which\n\t\t// allows the table sizing to automatically adjust when the window is\n\t\t// resized. Use the width attr rather than CSS, since we can't know if the\n\t\t// CSS is a relative value or absolute - DOM read is always px.\n\t\tif ( tableWidthAttr ) {\n\t\t\ttable.style.width = _fnStringToCss( tableWidthAttr );\n\t\t}\n\t\n\t\tif ( (tableWidthAttr || scrollX) && ! oSettings._reszEvt ) {\n\t\t\tvar bindResize = function () {\n\t\t\t\t$(window).on('resize.DT-'+oSettings.sInstance, _fnThrottle( function () {\n\t\t\t\t\t_fnAdjustColumnSizing( oSettings );\n\t\t\t\t} ) );\n\t\t\t};\n\t\n\t\t\t// IE6/7 will crash if we bind a resize event handler on page load.\n\t\t\t// To be removed in 1.11 which drops IE6/7 support\n\t\t\tif ( ie67 ) {\n\t\t\t\tsetTimeout( bindResize, 1000 );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbindResize();\n\t\t\t}\n\t\n\t\t\toSettings._reszEvt = true;\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Throttle the calls to a function. Arguments and context are maintained for\n\t * the throttled function\n\t *  @param {function} fn Function to be called\n\t *  @param {int} [freq=200] call frequency in mS\n\t *  @returns {function} wrapped function\n\t *  @memberof DataTable#oApi\n\t */\n\tvar _fnThrottle = DataTable.util.throttle;\n\t\n\t\n\t/**\n\t * Convert a CSS unit width to pixels (e.g. 2em)\n\t *  @param {string} width width to be converted\n\t *  @param {node} parent parent to get the with for (required for relative widths) - optional\n\t *  @returns {int} width in pixels\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnConvertToWidth ( width, parent )\n\t{\n\t\tif ( ! width ) {\n\t\t\treturn 0;\n\t\t}\n\t\n\t\tvar n = $('<div/>')\n\t\t\t.css( 'width', _fnStringToCss( width ) )\n\t\t\t.appendTo( parent || document.body );\n\t\n\t\tvar val = n[0].offsetWidth;\n\t\tn.remove();\n\t\n\t\treturn val;\n\t}\n\t\n\t\n\t/**\n\t * Get the widest node\n\t *  @param {object} settings dataTables settings object\n\t *  @param {int} colIdx column of interest\n\t *  @returns {node} widest table node\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnGetWidestNode( settings, colIdx )\n\t{\n\t\tvar idx = _fnGetMaxLenString( settings, colIdx );\n\t\tif ( idx < 0 ) {\n\t\t\treturn null;\n\t\t}\n\t\n\t\tvar data = settings.aoData[ idx ];\n\t\treturn ! data.nTr ? // Might not have been created when deferred rendering\n\t\t\t$('<td/>').html( _fnGetCellData( settings, idx, colIdx, 'display' ) )[0] :\n\t\t\tdata.anCells[ colIdx ];\n\t}\n\t\n\t\n\t/**\n\t * Get the maximum strlen for each data column\n\t *  @param {object} settings dataTables settings object\n\t *  @param {int} colIdx column of interest\n\t *  @returns {string} max string length for each column\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnGetMaxLenString( settings, colIdx )\n\t{\n\t\tvar s, max=-1, maxIdx = -1;\n\t\n\t\tfor ( var i=0, ien=settings.aoData.length ; i<ien ; i++ ) {\n\t\t\ts = _fnGetCellData( settings, i, colIdx, 'display' )+'';\n\t\t\ts = s.replace( __re_html_remove, '' );\n\t\t\ts = s.replace( /&nbsp;/g, ' ' );\n\t\n\t\t\tif ( s.length > max ) {\n\t\t\t\tmax = s.length;\n\t\t\t\tmaxIdx = i;\n\t\t\t}\n\t\t}\n\t\n\t\treturn maxIdx;\n\t}\n\t\n\t\n\t/**\n\t * Append a CSS unit (only if required) to a string\n\t *  @param {string} value to css-ify\n\t *  @returns {string} value with css unit\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnStringToCss( s )\n\t{\n\t\tif ( s === null ) {\n\t\t\treturn '0px';\n\t\t}\n\t\n\t\tif ( typeof s == 'number' ) {\n\t\t\treturn s < 0 ?\n\t\t\t\t'0px' :\n\t\t\t\ts+'px';\n\t\t}\n\t\n\t\t// Check it has a unit character already\n\t\treturn s.match(/\\d$/) ?\n\t\t\ts+'px' :\n\t\t\ts;\n\t}\n\t\n\t\n\t\n\tfunction _fnSortFlatten ( settings )\n\t{\n\t\tvar\n\t\t\ti, iLen, k, kLen,\n\t\t\taSort = [],\n\t\t\taiOrig = [],\n\t\t\taoColumns = settings.aoColumns,\n\t\t\taDataSort, iCol, sType, srcCol,\n\t\t\tfixed = settings.aaSortingFixed,\n\t\t\tfixedObj = $.isPlainObject( fixed ),\n\t\t\tnestedSort = [],\n\t\t\tadd = function ( a ) {\n\t\t\t\tif ( a.length && ! $.isArray( a[0] ) ) {\n\t\t\t\t\t// 1D array\n\t\t\t\t\tnestedSort.push( a );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// 2D array\n\t\t\t\t\t$.merge( nestedSort, a );\n\t\t\t\t}\n\t\t\t};\n\t\n\t\t// Build the sort array, with pre-fix and post-fix options if they have been\n\t\t// specified\n\t\tif ( $.isArray( fixed ) ) {\n\t\t\tadd( fixed );\n\t\t}\n\t\n\t\tif ( fixedObj && fixed.pre ) {\n\t\t\tadd( fixed.pre );\n\t\t}\n\t\n\t\tadd( settings.aaSorting );\n\t\n\t\tif (fixedObj && fixed.post ) {\n\t\t\tadd( fixed.post );\n\t\t}\n\t\n\t\tfor ( i=0 ; i<nestedSort.length ; i++ )\n\t\t{\n\t\t\tsrcCol = nestedSort[i][0];\n\t\t\taDataSort = aoColumns[ srcCol ].aDataSort;\n\t\n\t\t\tfor ( k=0, kLen=aDataSort.length ; k<kLen ; k++ )\n\t\t\t{\n\t\t\t\tiCol = aDataSort[k];\n\t\t\t\tsType = aoColumns[ iCol ].sType || 'string';\n\t\n\t\t\t\tif ( nestedSort[i]._idx === undefined ) {\n\t\t\t\t\tnestedSort[i]._idx = $.inArray( nestedSort[i][1], aoColumns[iCol].asSorting );\n\t\t\t\t}\n\t\n\t\t\t\taSort.push( {\n\t\t\t\t\tsrc:       srcCol,\n\t\t\t\t\tcol:       iCol,\n\t\t\t\t\tdir:       nestedSort[i][1],\n\t\t\t\t\tindex:     nestedSort[i]._idx,\n\t\t\t\t\ttype:      sType,\n\t\t\t\t\tformatter: DataTable.ext.type.order[ sType+\"-pre\" ]\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\t\n\t\treturn aSort;\n\t}\n\t\n\t/**\n\t * Change the order of the table\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t *  @todo This really needs split up!\n\t */\n\tfunction _fnSort ( oSettings )\n\t{\n\t\tvar\n\t\t\ti, ien, iLen, j, jLen, k, kLen,\n\t\t\tsDataType, nTh,\n\t\t\taiOrig = [],\n\t\t\toExtSort = DataTable.ext.type.order,\n\t\t\taoData = oSettings.aoData,\n\t\t\taoColumns = oSettings.aoColumns,\n\t\t\taDataSort, data, iCol, sType, oSort,\n\t\t\tformatters = 0,\n\t\t\tsortCol,\n\t\t\tdisplayMaster = oSettings.aiDisplayMaster,\n\t\t\taSort;\n\t\n\t\t// Resolve any column types that are unknown due to addition or invalidation\n\t\t// @todo Can this be moved into a 'data-ready' handler which is called when\n\t\t//   data is going to be used in the table?\n\t\t_fnColumnTypes( oSettings );\n\t\n\t\taSort = _fnSortFlatten( oSettings );\n\t\n\t\tfor ( i=0, ien=aSort.length ; i<ien ; i++ ) {\n\t\t\tsortCol = aSort[i];\n\t\n\t\t\t// Track if we can use the fast sort algorithm\n\t\t\tif ( sortCol.formatter ) {\n\t\t\t\tformatters++;\n\t\t\t}\n\t\n\t\t\t// Load the data needed for the sort, for each cell\n\t\t\t_fnSortData( oSettings, sortCol.col );\n\t\t}\n\t\n\t\t/* No sorting required if server-side or no sorting array */\n\t\tif ( _fnDataSource( oSettings ) != 'ssp' && aSort.length !== 0 )\n\t\t{\n\t\t\t// Create a value - key array of the current row positions such that we can use their\n\t\t\t// current position during the sort, if values match, in order to perform stable sorting\n\t\t\tfor ( i=0, iLen=displayMaster.length ; i<iLen ; i++ ) {\n\t\t\t\taiOrig[ displayMaster[i] ] = i;\n\t\t\t}\n\t\n\t\t\t/* Do the sort - here we want multi-column sorting based on a given data source (column)\n\t\t\t * and sorting function (from oSort) in a certain direction. It's reasonably complex to\n\t\t\t * follow on it's own, but this is what we want (example two column sorting):\n\t\t\t *  fnLocalSorting = function(a,b){\n\t\t\t *    var iTest;\n\t\t\t *    iTest = oSort['string-asc']('data11', 'data12');\n\t\t\t *      if (iTest !== 0)\n\t\t\t *        return iTest;\n\t\t\t *    iTest = oSort['numeric-desc']('data21', 'data22');\n\t\t\t *    if (iTest !== 0)\n\t\t\t *      return iTest;\n\t\t\t *    return oSort['numeric-asc']( aiOrig[a], aiOrig[b] );\n\t\t\t *  }\n\t\t\t * Basically we have a test for each sorting column, if the data in that column is equal,\n\t\t\t * test the next column. If all columns match, then we use a numeric sort on the row\n\t\t\t * positions in the original data array to provide a stable sort.\n\t\t\t *\n\t\t\t * Note - I know it seems excessive to have two sorting methods, but the first is around\n\t\t\t * 15% faster, so the second is only maintained for backwards compatibility with sorting\n\t\t\t * methods which do not have a pre-sort formatting function.\n\t\t\t */\n\t\t\tif ( formatters === aSort.length ) {\n\t\t\t\t// All sort types have formatting functions\n\t\t\t\tdisplayMaster.sort( function ( a, b ) {\n\t\t\t\t\tvar\n\t\t\t\t\t\tx, y, k, test, sort,\n\t\t\t\t\t\tlen=aSort.length,\n\t\t\t\t\t\tdataA = aoData[a]._aSortData,\n\t\t\t\t\t\tdataB = aoData[b]._aSortData;\n\t\n\t\t\t\t\tfor ( k=0 ; k<len ; k++ ) {\n\t\t\t\t\t\tsort = aSort[k];\n\t\n\t\t\t\t\t\tx = dataA[ sort.col ];\n\t\t\t\t\t\ty = dataB[ sort.col ];\n\t\n\t\t\t\t\t\ttest = x<y ? -1 : x>y ? 1 : 0;\n\t\t\t\t\t\tif ( test !== 0 ) {\n\t\t\t\t\t\t\treturn sort.dir === 'asc' ? test : -test;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\tx = aiOrig[a];\n\t\t\t\t\ty = aiOrig[b];\n\t\t\t\t\treturn x<y ? -1 : x>y ? 1 : 0;\n\t\t\t\t} );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Depreciated - remove in 1.11 (providing a plug-in option)\n\t\t\t\t// Not all sort types have formatting methods, so we have to call their sorting\n\t\t\t\t// methods.\n\t\t\t\tdisplayMaster.sort( function ( a, b ) {\n\t\t\t\t\tvar\n\t\t\t\t\t\tx, y, k, l, test, sort, fn,\n\t\t\t\t\t\tlen=aSort.length,\n\t\t\t\t\t\tdataA = aoData[a]._aSortData,\n\t\t\t\t\t\tdataB = aoData[b]._aSortData;\n\t\n\t\t\t\t\tfor ( k=0 ; k<len ; k++ ) {\n\t\t\t\t\t\tsort = aSort[k];\n\t\n\t\t\t\t\t\tx = dataA[ sort.col ];\n\t\t\t\t\t\ty = dataB[ sort.col ];\n\t\n\t\t\t\t\t\tfn = oExtSort[ sort.type+\"-\"+sort.dir ] || oExtSort[ \"string-\"+sort.dir ];\n\t\t\t\t\t\ttest = fn( x, y );\n\t\t\t\t\t\tif ( test !== 0 ) {\n\t\t\t\t\t\t\treturn test;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\tx = aiOrig[a];\n\t\t\t\t\ty = aiOrig[b];\n\t\t\t\t\treturn x<y ? -1 : x>y ? 1 : 0;\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\t\n\t\t/* Tell the draw function that we have sorted the data */\n\t\toSettings.bSorted = true;\n\t}\n\t\n\t\n\tfunction _fnSortAria ( settings )\n\t{\n\t\tvar label;\n\t\tvar nextSort;\n\t\tvar columns = settings.aoColumns;\n\t\tvar aSort = _fnSortFlatten( settings );\n\t\tvar oAria = settings.oLanguage.oAria;\n\t\n\t\t// ARIA attributes - need to loop all columns, to update all (removing old\n\t\t// attributes as needed)\n\t\tfor ( var i=0, iLen=columns.length ; i<iLen ; i++ )\n\t\t{\n\t\t\tvar col = columns[i];\n\t\t\tvar asSorting = col.asSorting;\n\t\t\tvar sTitle = col.sTitle.replace( /<.*?>/g, \"\" );\n\t\t\tvar th = col.nTh;\n\t\n\t\t\t// IE7 is throwing an error when setting these properties with jQuery's\n\t\t\t// attr() and removeAttr() methods...\n\t\t\tth.removeAttribute('aria-sort');\n\t\n\t\t\t/* In ARIA only the first sorting column can be marked as sorting - no multi-sort option */\n\t\t\tif ( col.bSortable ) {\n\t\t\t\tif ( aSort.length > 0 && aSort[0].col == i ) {\n\t\t\t\t\tth.setAttribute('aria-sort', aSort[0].dir==\"asc\" ? \"ascending\" : \"descending\" );\n\t\t\t\t\tnextSort = asSorting[ aSort[0].index+1 ] || asSorting[0];\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tnextSort = asSorting[0];\n\t\t\t\t}\n\t\n\t\t\t\tlabel = sTitle + ( nextSort === \"asc\" ?\n\t\t\t\t\toAria.sSortAscending :\n\t\t\t\t\toAria.sSortDescending\n\t\t\t\t);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlabel = sTitle;\n\t\t\t}\n\t\n\t\t\tth.setAttribute('aria-label', label);\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Function to run on user sort request\n\t *  @param {object} settings dataTables settings object\n\t *  @param {node} attachTo node to attach the handler to\n\t *  @param {int} colIdx column sorting index\n\t *  @param {boolean} [append=false] Append the requested sort to the existing\n\t *    sort if true (i.e. multi-column sort)\n\t *  @param {function} [callback] callback function\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnSortListener ( settings, colIdx, append, callback )\n\t{\n\t\tvar col = settings.aoColumns[ colIdx ];\n\t\tvar sorting = settings.aaSorting;\n\t\tvar asSorting = col.asSorting;\n\t\tvar nextSortIdx;\n\t\tvar next = function ( a, overflow ) {\n\t\t\tvar idx = a._idx;\n\t\t\tif ( idx === undefined ) {\n\t\t\t\tidx = $.inArray( a[1], asSorting );\n\t\t\t}\n\t\n\t\t\treturn idx+1 < asSorting.length ?\n\t\t\t\tidx+1 :\n\t\t\t\toverflow ?\n\t\t\t\t\tnull :\n\t\t\t\t\t0;\n\t\t};\n\t\n\t\t// Convert to 2D array if needed\n\t\tif ( typeof sorting[0] === 'number' ) {\n\t\t\tsorting = settings.aaSorting = [ sorting ];\n\t\t}\n\t\n\t\t// If appending the sort then we are multi-column sorting\n\t\tif ( append && settings.oFeatures.bSortMulti ) {\n\t\t\t// Are we already doing some kind of sort on this column?\n\t\t\tvar sortIdx = $.inArray( colIdx, _pluck(sorting, '0') );\n\t\n\t\t\tif ( sortIdx !== -1 ) {\n\t\t\t\t// Yes, modify the sort\n\t\t\t\tnextSortIdx = next( sorting[sortIdx], true );\n\t\n\t\t\t\tif ( nextSortIdx === null && sorting.length === 1 ) {\n\t\t\t\t\tnextSortIdx = 0; // can't remove sorting completely\n\t\t\t\t}\n\t\n\t\t\t\tif ( nextSortIdx === null ) {\n\t\t\t\t\tsorting.splice( sortIdx, 1 );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tsorting[sortIdx][1] = asSorting[ nextSortIdx ];\n\t\t\t\t\tsorting[sortIdx]._idx = nextSortIdx;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// No sort on this column yet\n\t\t\t\tsorting.push( [ colIdx, asSorting[0], 0 ] );\n\t\t\t\tsorting[sorting.length-1]._idx = 0;\n\t\t\t}\n\t\t}\n\t\telse if ( sorting.length && sorting[0][0] == colIdx ) {\n\t\t\t// Single column - already sorting on this column, modify the sort\n\t\t\tnextSortIdx = next( sorting[0] );\n\t\n\t\t\tsorting.length = 1;\n\t\t\tsorting[0][1] = asSorting[ nextSortIdx ];\n\t\t\tsorting[0]._idx = nextSortIdx;\n\t\t}\n\t\telse {\n\t\t\t// Single column - sort only on this column\n\t\t\tsorting.length = 0;\n\t\t\tsorting.push( [ colIdx, asSorting[0] ] );\n\t\t\tsorting[0]._idx = 0;\n\t\t}\n\t\n\t\t// Run the sort by calling a full redraw\n\t\t_fnReDraw( settings );\n\t\n\t\t// callback used for async user interaction\n\t\tif ( typeof callback == 'function' ) {\n\t\t\tcallback( settings );\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Attach a sort handler (click) to a node\n\t *  @param {object} settings dataTables settings object\n\t *  @param {node} attachTo node to attach the handler to\n\t *  @param {int} colIdx column sorting index\n\t *  @param {function} [callback] callback function\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnSortAttachListener ( settings, attachTo, colIdx, callback )\n\t{\n\t\tvar col = settings.aoColumns[ colIdx ];\n\t\n\t\t_fnBindAction( attachTo, {}, function (e) {\n\t\t\t/* If the column is not sortable - don't to anything */\n\t\t\tif ( col.bSortable === false ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t// If processing is enabled use a timeout to allow the processing\n\t\t\t// display to be shown - otherwise to it synchronously\n\t\t\tif ( settings.oFeatures.bProcessing ) {\n\t\t\t\t_fnProcessingDisplay( settings, true );\n\t\n\t\t\t\tsetTimeout( function() {\n\t\t\t\t\t_fnSortListener( settings, colIdx, e.shiftKey, callback );\n\t\n\t\t\t\t\t// In server-side processing, the draw callback will remove the\n\t\t\t\t\t// processing display\n\t\t\t\t\tif ( _fnDataSource( settings ) !== 'ssp' ) {\n\t\t\t\t\t\t_fnProcessingDisplay( settings, false );\n\t\t\t\t\t}\n\t\t\t\t}, 0 );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t_fnSortListener( settings, colIdx, e.shiftKey, callback );\n\t\t\t}\n\t\t} );\n\t}\n\t\n\t\n\t/**\n\t * Set the sorting classes on table's body, Note: it is safe to call this function\n\t * when bSort and bSortClasses are false\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnSortingClasses( settings )\n\t{\n\t\tvar oldSort = settings.aLastSort;\n\t\tvar sortClass = settings.oClasses.sSortColumn;\n\t\tvar sort = _fnSortFlatten( settings );\n\t\tvar features = settings.oFeatures;\n\t\tvar i, ien, colIdx;\n\t\n\t\tif ( features.bSort && features.bSortClasses ) {\n\t\t\t// Remove old sorting classes\n\t\t\tfor ( i=0, ien=oldSort.length ; i<ien ; i++ ) {\n\t\t\t\tcolIdx = oldSort[i].src;\n\t\n\t\t\t\t// Remove column sorting\n\t\t\t\t$( _pluck( settings.aoData, 'anCells', colIdx ) )\n\t\t\t\t\t.removeClass( sortClass + (i<2 ? i+1 : 3) );\n\t\t\t}\n\t\n\t\t\t// Add new column sorting\n\t\t\tfor ( i=0, ien=sort.length ; i<ien ; i++ ) {\n\t\t\t\tcolIdx = sort[i].src;\n\t\n\t\t\t\t$( _pluck( settings.aoData, 'anCells', colIdx ) )\n\t\t\t\t\t.addClass( sortClass + (i<2 ? i+1 : 3) );\n\t\t\t}\n\t\t}\n\t\n\t\tsettings.aLastSort = sort;\n\t}\n\t\n\t\n\t// Get the data to sort a column, be it from cache, fresh (populating the\n\t// cache), or from a sort formatter\n\tfunction _fnSortData( settings, idx )\n\t{\n\t\t// Custom sorting function - provided by the sort data type\n\t\tvar column = settings.aoColumns[ idx ];\n\t\tvar customSort = DataTable.ext.order[ column.sSortDataType ];\n\t\tvar customData;\n\t\n\t\tif ( customSort ) {\n\t\t\tcustomData = customSort.call( settings.oInstance, settings, idx,\n\t\t\t\t_fnColumnIndexToVisible( settings, idx )\n\t\t\t);\n\t\t}\n\t\n\t\t// Use / populate cache\n\t\tvar row, cellData;\n\t\tvar formatter = DataTable.ext.type.order[ column.sType+\"-pre\" ];\n\t\n\t\tfor ( var i=0, ien=settings.aoData.length ; i<ien ; i++ ) {\n\t\t\trow = settings.aoData[i];\n\t\n\t\t\tif ( ! row._aSortData ) {\n\t\t\t\trow._aSortData = [];\n\t\t\t}\n\t\n\t\t\tif ( ! row._aSortData[idx] || customSort ) {\n\t\t\t\tcellData = customSort ?\n\t\t\t\t\tcustomData[i] : // If there was a custom sort function, use data from there\n\t\t\t\t\t_fnGetCellData( settings, i, idx, 'sort' );\n\t\n\t\t\t\trow._aSortData[ idx ] = formatter ?\n\t\t\t\t\tformatter( cellData ) :\n\t\t\t\t\tcellData;\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\t\n\t/**\n\t * Save the state of a table\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnSaveState ( settings )\n\t{\n\t\tif ( !settings.oFeatures.bStateSave || settings.bDestroying )\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\n\t\t/* Store the interesting variables */\n\t\tvar state = {\n\t\t\ttime:    +new Date(),\n\t\t\tstart:   settings._iDisplayStart,\n\t\t\tlength:  settings._iDisplayLength,\n\t\t\torder:   $.extend( true, [], settings.aaSorting ),\n\t\t\tsearch:  _fnSearchToCamel( settings.oPreviousSearch ),\n\t\t\tcolumns: $.map( settings.aoColumns, function ( col, i ) {\n\t\t\t\treturn {\n\t\t\t\t\tvisible: col.bVisible,\n\t\t\t\t\tsearch: _fnSearchToCamel( settings.aoPreSearchCols[i] )\n\t\t\t\t};\n\t\t\t} )\n\t\t};\n\t\n\t\t_fnCallbackFire( settings, \"aoStateSaveParams\", 'stateSaveParams', [settings, state] );\n\t\n\t\tsettings.oSavedState = state;\n\t\tsettings.fnStateSaveCallback.call( settings.oInstance, settings, state );\n\t}\n\t\n\t\n\t/**\n\t * Attempt to load a saved table state\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {object} oInit DataTables init object so we can override settings\n\t *  @param {function} callback Callback to execute when the state has been loaded\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnLoadState ( settings, oInit, callback )\n\t{\n\t\tvar i, ien;\n\t\tvar columns = settings.aoColumns;\n\t\tvar loaded = function ( s ) {\n\t\t\tif ( ! s || ! s.time ) {\n\t\t\t\tcallback();\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t// Allow custom and plug-in manipulation functions to alter the saved data set and\n\t\t\t// cancelling of loading by returning false\n\t\t\tvar abStateLoad = _fnCallbackFire( settings, 'aoStateLoadParams', 'stateLoadParams', [settings, s] );\n\t\t\tif ( $.inArray( false, abStateLoad ) !== -1 ) {\n\t\t\t\tcallback();\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t// Reject old data\n\t\t\tvar duration = settings.iStateDuration;\n\t\t\tif ( duration > 0 && s.time < +new Date() - (duration*1000) ) {\n\t\t\t\tcallback();\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t// Number of columns have changed - all bets are off, no restore of settings\n\t\t\tif ( s.columns && columns.length !== s.columns.length ) {\n\t\t\t\tcallback();\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t// Store the saved state so it might be accessed at any time\n\t\t\tsettings.oLoadedState = $.extend( true, {}, s );\n\t\n\t\t\t// Restore key features - todo - for 1.11 this needs to be done by\n\t\t\t// subscribed events\n\t\t\tif ( s.start !== undefined ) {\n\t\t\t\tsettings._iDisplayStart    = s.start;\n\t\t\t\tsettings.iInitDisplayStart = s.start;\n\t\t\t}\n\t\t\tif ( s.length !== undefined ) {\n\t\t\t\tsettings._iDisplayLength   = s.length;\n\t\t\t}\n\t\n\t\t\t// Order\n\t\t\tif ( s.order !== undefined ) {\n\t\t\t\tsettings.aaSorting = [];\n\t\t\t\t$.each( s.order, function ( i, col ) {\n\t\t\t\t\tsettings.aaSorting.push( col[0] >= columns.length ?\n\t\t\t\t\t\t[ 0, col[1] ] :\n\t\t\t\t\t\tcol\n\t\t\t\t\t);\n\t\t\t\t} );\n\t\t\t}\n\t\n\t\t\t// Search\n\t\t\tif ( s.search !== undefined ) {\n\t\t\t\t$.extend( settings.oPreviousSearch, _fnSearchToHung( s.search ) );\n\t\t\t}\n\t\n\t\t\t// Columns\n\t\t\t//\n\t\t\tif ( s.columns ) {\n\t\t\t\tfor ( i=0, ien=s.columns.length ; i<ien ; i++ ) {\n\t\t\t\t\tvar col = s.columns[i];\n\t\n\t\t\t\t\t// Visibility\n\t\t\t\t\tif ( col.visible !== undefined ) {\n\t\t\t\t\t\tcolumns[i].bVisible = col.visible;\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Search\n\t\t\t\t\tif ( col.search !== undefined ) {\n\t\t\t\t\t\t$.extend( settings.aoPreSearchCols[i], _fnSearchToHung( col.search ) );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t_fnCallbackFire( settings, 'aoStateLoaded', 'stateLoaded', [settings, s] );\n\t\t\tcallback();\n\t\t};\n\t\n\t\tif ( ! settings.oFeatures.bStateSave ) {\n\t\t\tcallback();\n\t\t\treturn;\n\t\t}\n\t\n\t\tvar state = settings.fnStateLoadCallback.call( settings.oInstance, settings, loaded );\n\t\n\t\tif ( state !== undefined ) {\n\t\t\tloaded( state );\n\t\t}\n\t\t// otherwise, wait for the loaded callback to be executed\n\t}\n\t\n\t\n\t/**\n\t * Return the settings object for a particular table\n\t *  @param {node} table table we are using as a dataTable\n\t *  @returns {object} Settings object - or null if not found\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnSettingsFromNode ( table )\n\t{\n\t\tvar settings = DataTable.settings;\n\t\tvar idx = $.inArray( table, _pluck( settings, 'nTable' ) );\n\t\n\t\treturn idx !== -1 ?\n\t\t\tsettings[ idx ] :\n\t\t\tnull;\n\t}\n\t\n\t\n\t/**\n\t * Log an error message\n\t *  @param {object} settings dataTables settings object\n\t *  @param {int} level log error messages, or display them to the user\n\t *  @param {string} msg error message\n\t *  @param {int} tn Technical note id to get more information about the error.\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnLog( settings, level, msg, tn )\n\t{\n\t\tmsg = 'DataTables warning: '+\n\t\t\t(settings ? 'table id='+settings.sTableId+' - ' : '')+msg;\n\t\n\t\tif ( tn ) {\n\t\t\tmsg += '. For more information about this error, please see '+\n\t\t\t'http://datatables.net/tn/'+tn;\n\t\t}\n\t\n\t\tif ( ! level  ) {\n\t\t\t// Backwards compatibility pre 1.10\n\t\t\tvar ext = DataTable.ext;\n\t\t\tvar type = ext.sErrMode || ext.errMode;\n\t\n\t\t\tif ( settings ) {\n\t\t\t\t_fnCallbackFire( settings, null, 'error', [ settings, tn, msg ] );\n\t\t\t}\n\t\n\t\t\tif ( type == 'alert' ) {\n\t\t\t\talert( msg );\n\t\t\t}\n\t\t\telse if ( type == 'throw' ) {\n\t\t\t\tthrow new Error(msg);\n\t\t\t}\n\t\t\telse if ( typeof type == 'function' ) {\n\t\t\t\ttype( settings, tn, msg );\n\t\t\t}\n\t\t}\n\t\telse if ( window.console && console.log ) {\n\t\t\tconsole.log( msg );\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * See if a property is defined on one object, if so assign it to the other object\n\t *  @param {object} ret target object\n\t *  @param {object} src source object\n\t *  @param {string} name property\n\t *  @param {string} [mappedName] name to map too - optional, name used if not given\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnMap( ret, src, name, mappedName )\n\t{\n\t\tif ( $.isArray( name ) ) {\n\t\t\t$.each( name, function (i, val) {\n\t\t\t\tif ( $.isArray( val ) ) {\n\t\t\t\t\t_fnMap( ret, src, val[0], val[1] );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t_fnMap( ret, src, val );\n\t\t\t\t}\n\t\t\t} );\n\t\n\t\t\treturn;\n\t\t}\n\t\n\t\tif ( mappedName === undefined ) {\n\t\t\tmappedName = name;\n\t\t}\n\t\n\t\tif ( src[name] !== undefined ) {\n\t\t\tret[mappedName] = src[name];\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Extend objects - very similar to jQuery.extend, but deep copy objects, and\n\t * shallow copy arrays. The reason we need to do this, is that we don't want to\n\t * deep copy array init values (such as aaSorting) since the dev wouldn't be\n\t * able to override them, but we do want to deep copy arrays.\n\t *  @param {object} out Object to extend\n\t *  @param {object} extender Object from which the properties will be applied to\n\t *      out\n\t *  @param {boolean} breakRefs If true, then arrays will be sliced to take an\n\t *      independent copy with the exception of the `data` or `aaData` parameters\n\t *      if they are present. This is so you can pass in a collection to\n\t *      DataTables and have that used as your data source without breaking the\n\t *      references\n\t *  @returns {object} out Reference, just for convenience - out === the return.\n\t *  @memberof DataTable#oApi\n\t *  @todo This doesn't take account of arrays inside the deep copied objects.\n\t */\n\tfunction _fnExtend( out, extender, breakRefs )\n\t{\n\t\tvar val;\n\t\n\t\tfor ( var prop in extender ) {\n\t\t\tif ( extender.hasOwnProperty(prop) ) {\n\t\t\t\tval = extender[prop];\n\t\n\t\t\t\tif ( $.isPlainObject( val ) ) {\n\t\t\t\t\tif ( ! $.isPlainObject( out[prop] ) ) {\n\t\t\t\t\t\tout[prop] = {};\n\t\t\t\t\t}\n\t\t\t\t\t$.extend( true, out[prop], val );\n\t\t\t\t}\n\t\t\t\telse if ( breakRefs && prop !== 'data' && prop !== 'aaData' && $.isArray(val) ) {\n\t\t\t\t\tout[prop] = val.slice();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tout[prop] = val;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\treturn out;\n\t}\n\t\n\t\n\t/**\n\t * Bind an event handers to allow a click or return key to activate the callback.\n\t * This is good for accessibility since a return on the keyboard will have the\n\t * same effect as a click, if the element has focus.\n\t *  @param {element} n Element to bind the action to\n\t *  @param {object} oData Data object to pass to the triggered function\n\t *  @param {function} fn Callback function for when the event is triggered\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnBindAction( n, oData, fn )\n\t{\n\t\t$(n)\n\t\t\t.on( 'click.DT', oData, function (e) {\n\t\t\t\t\t$(n).blur(); // Remove focus outline for mouse users\n\t\t\t\t\tfn(e);\n\t\t\t\t} )\n\t\t\t.on( 'keypress.DT', oData, function (e){\n\t\t\t\t\tif ( e.which === 13 ) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\tfn(e);\n\t\t\t\t\t}\n\t\t\t\t} )\n\t\t\t.on( 'selectstart.DT', function () {\n\t\t\t\t\t/* Take the brutal approach to cancelling text selection */\n\t\t\t\t\treturn false;\n\t\t\t\t} );\n\t}\n\t\n\t\n\t/**\n\t * Register a callback function. Easily allows a callback function to be added to\n\t * an array store of callback functions that can then all be called together.\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {string} sStore Name of the array storage for the callbacks in oSettings\n\t *  @param {function} fn Function to be called back\n\t *  @param {string} sName Identifying name for the callback (i.e. a label)\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnCallbackReg( oSettings, sStore, fn, sName )\n\t{\n\t\tif ( fn )\n\t\t{\n\t\t\toSettings[sStore].push( {\n\t\t\t\t\"fn\": fn,\n\t\t\t\t\"sName\": sName\n\t\t\t} );\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Fire callback functions and trigger events. Note that the loop over the\n\t * callback array store is done backwards! Further note that you do not want to\n\t * fire off triggers in time sensitive applications (for example cell creation)\n\t * as its slow.\n\t *  @param {object} settings dataTables settings object\n\t *  @param {string} callbackArr Name of the array storage for the callbacks in\n\t *      oSettings\n\t *  @param {string} eventName Name of the jQuery custom event to trigger. If\n\t *      null no trigger is fired\n\t *  @param {array} args Array of arguments to pass to the callback function /\n\t *      trigger\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnCallbackFire( settings, callbackArr, eventName, args )\n\t{\n\t\tvar ret = [];\n\t\n\t\tif ( callbackArr ) {\n\t\t\tret = $.map( settings[callbackArr].slice().reverse(), function (val, i) {\n\t\t\t\treturn val.fn.apply( settings.oInstance, args );\n\t\t\t} );\n\t\t}\n\t\n\t\tif ( eventName !== null ) {\n\t\t\tvar e = $.Event( eventName+'.dt' );\n\t\n\t\t\t$(settings.nTable).trigger( e, args );\n\t\n\t\t\tret.push( e.result );\n\t\t}\n\t\n\t\treturn ret;\n\t}\n\t\n\t\n\tfunction _fnLengthOverflow ( settings )\n\t{\n\t\tvar\n\t\t\tstart = settings._iDisplayStart,\n\t\t\tend = settings.fnDisplayEnd(),\n\t\t\tlen = settings._iDisplayLength;\n\t\n\t\t/* If we have space to show extra rows (backing up from the end point - then do so */\n\t\tif ( start >= end )\n\t\t{\n\t\t\tstart = end - len;\n\t\t}\n\t\n\t\t// Keep the start record on the current page\n\t\tstart -= (start % len);\n\t\n\t\tif ( len === -1 || start < 0 )\n\t\t{\n\t\t\tstart = 0;\n\t\t}\n\t\n\t\tsettings._iDisplayStart = start;\n\t}\n\t\n\t\n\tfunction _fnRenderer( settings, type )\n\t{\n\t\tvar renderer = settings.renderer;\n\t\tvar host = DataTable.ext.renderer[type];\n\t\n\t\tif ( $.isPlainObject( renderer ) && renderer[type] ) {\n\t\t\t// Specific renderer for this type. If available use it, otherwise use\n\t\t\t// the default.\n\t\t\treturn host[renderer[type]] || host._;\n\t\t}\n\t\telse if ( typeof renderer === 'string' ) {\n\t\t\t// Common renderer - if there is one available for this type use it,\n\t\t\t// otherwise use the default\n\t\t\treturn host[renderer] || host._;\n\t\t}\n\t\n\t\t// Use the default\n\t\treturn host._;\n\t}\n\t\n\t\n\t/**\n\t * Detect the data source being used for the table. Used to simplify the code\n\t * a little (ajax) and to make it compress a little smaller.\n\t *\n\t *  @param {object} settings dataTables settings object\n\t *  @returns {string} Data source\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnDataSource ( settings )\n\t{\n\t\tif ( settings.oFeatures.bServerSide ) {\n\t\t\treturn 'ssp';\n\t\t}\n\t\telse if ( settings.ajax || settings.sAjaxSource ) {\n\t\t\treturn 'ajax';\n\t\t}\n\t\treturn 'dom';\n\t}\n\t\n\n\t\n\t\n\t/**\n\t * Computed structure of the DataTables API, defined by the options passed to\n\t * `DataTable.Api.register()` when building the API.\n\t *\n\t * The structure is built in order to speed creation and extension of the Api\n\t * objects since the extensions are effectively pre-parsed.\n\t *\n\t * The array is an array of objects with the following structure, where this\n\t * base array represents the Api prototype base:\n\t *\n\t *     [\n\t *       {\n\t *         name:      'data'                -- string   - Property name\n\t *         val:       function () {},       -- function - Api method (or undefined if just an object\n\t *         methodExt: [ ... ],              -- array    - Array of Api object definitions to extend the method result\n\t *         propExt:   [ ... ]               -- array    - Array of Api object definitions to extend the property\n\t *       },\n\t *       {\n\t *         name:     'row'\n\t *         val:       {},\n\t *         methodExt: [ ... ],\n\t *         propExt:   [\n\t *           {\n\t *             name:      'data'\n\t *             val:       function () {},\n\t *             methodExt: [ ... ],\n\t *             propExt:   [ ... ]\n\t *           },\n\t *           ...\n\t *         ]\n\t *       }\n\t *     ]\n\t *\n\t * @type {Array}\n\t * @ignore\n\t */\n\tvar __apiStruct = [];\n\t\n\t\n\t/**\n\t * `Array.prototype` reference.\n\t *\n\t * @type object\n\t * @ignore\n\t */\n\tvar __arrayProto = Array.prototype;\n\t\n\t\n\t/**\n\t * Abstraction for `context` parameter of the `Api` constructor to allow it to\n\t * take several different forms for ease of use.\n\t *\n\t * Each of the input parameter types will be converted to a DataTables settings\n\t * object where possible.\n\t *\n\t * @param  {string|node|jQuery|object} mixed DataTable identifier. Can be one\n\t *   of:\n\t *\n\t *   * `string` - jQuery selector. Any DataTables' matching the given selector\n\t *     with be found and used.\n\t *   * `node` - `TABLE` node which has already been formed into a DataTable.\n\t *   * `jQuery` - A jQuery object of `TABLE` nodes.\n\t *   * `object` - DataTables settings object\n\t *   * `DataTables.Api` - API instance\n\t * @return {array|null} Matching DataTables settings objects. `null` or\n\t *   `undefined` is returned if no matching DataTable is found.\n\t * @ignore\n\t */\n\tvar _toSettings = function ( mixed )\n\t{\n\t\tvar idx, jq;\n\t\tvar settings = DataTable.settings;\n\t\tvar tables = $.map( settings, function (el, i) {\n\t\t\treturn el.nTable;\n\t\t} );\n\t\n\t\tif ( ! mixed ) {\n\t\t\treturn [];\n\t\t}\n\t\telse if ( mixed.nTable && mixed.oApi ) {\n\t\t\t// DataTables settings object\n\t\t\treturn [ mixed ];\n\t\t}\n\t\telse if ( mixed.nodeName && mixed.nodeName.toLowerCase() === 'table' ) {\n\t\t\t// Table node\n\t\t\tidx = $.inArray( mixed, tables );\n\t\t\treturn idx !== -1 ? [ settings[idx] ] : null;\n\t\t}\n\t\telse if ( mixed && typeof mixed.settings === 'function' ) {\n\t\t\treturn mixed.settings().toArray();\n\t\t}\n\t\telse if ( typeof mixed === 'string' ) {\n\t\t\t// jQuery selector\n\t\t\tjq = $(mixed);\n\t\t}\n\t\telse if ( mixed instanceof $ ) {\n\t\t\t// jQuery object (also DataTables instance)\n\t\t\tjq = mixed;\n\t\t}\n\t\n\t\tif ( jq ) {\n\t\t\treturn jq.map( function(i) {\n\t\t\t\tidx = $.inArray( this, tables );\n\t\t\t\treturn idx !== -1 ? settings[idx] : null;\n\t\t\t} ).toArray();\n\t\t}\n\t};\n\t\n\t\n\t/**\n\t * DataTables API class - used to control and interface with  one or more\n\t * DataTables enhanced tables.\n\t *\n\t * The API class is heavily based on jQuery, presenting a chainable interface\n\t * that you can use to interact with tables. Each instance of the API class has\n\t * a \"context\" - i.e. the tables that it will operate on. This could be a single\n\t * table, all tables on a page or a sub-set thereof.\n\t *\n\t * Additionally the API is designed to allow you to easily work with the data in\n\t * the tables, retrieving and manipulating it as required. This is done by\n\t * presenting the API class as an array like interface. The contents of the\n\t * array depend upon the actions requested by each method (for example\n\t * `rows().nodes()` will return an array of nodes, while `rows().data()` will\n\t * return an array of objects or arrays depending upon your table's\n\t * configuration). The API object has a number of array like methods (`push`,\n\t * `pop`, `reverse` etc) as well as additional helper methods (`each`, `pluck`,\n\t * `unique` etc) to assist your working with the data held in a table.\n\t *\n\t * Most methods (those which return an Api instance) are chainable, which means\n\t * the return from a method call also has all of the methods available that the\n\t * top level object had. For example, these two calls are equivalent:\n\t *\n\t *     // Not chained\n\t *     api.row.add( {...} );\n\t *     api.draw();\n\t *\n\t *     // Chained\n\t *     api.row.add( {...} ).draw();\n\t *\n\t * @class DataTable.Api\n\t * @param {array|object|string|jQuery} context DataTable identifier. This is\n\t *   used to define which DataTables enhanced tables this API will operate on.\n\t *   Can be one of:\n\t *\n\t *   * `string` - jQuery selector. Any DataTables' matching the given selector\n\t *     with be found and used.\n\t *   * `node` - `TABLE` node which has already been formed into a DataTable.\n\t *   * `jQuery` - A jQuery object of `TABLE` nodes.\n\t *   * `object` - DataTables settings object\n\t * @param {array} [data] Data to initialise the Api instance with.\n\t *\n\t * @example\n\t *   // Direct initialisation during DataTables construction\n\t *   var api = $('#example').DataTable();\n\t *\n\t * @example\n\t *   // Initialisation using a DataTables jQuery object\n\t *   var api = $('#example').dataTable().api();\n\t *\n\t * @example\n\t *   // Initialisation as a constructor\n\t *   var api = new $.fn.DataTable.Api( 'table.dataTable' );\n\t */\n\t_Api = function ( context, data )\n\t{\n\t\tif ( ! (this instanceof _Api) ) {\n\t\t\treturn new _Api( context, data );\n\t\t}\n\t\n\t\tvar settings = [];\n\t\tvar ctxSettings = function ( o ) {\n\t\t\tvar a = _toSettings( o );\n\t\t\tif ( a ) {\n\t\t\t\tsettings.push.apply( settings, a );\n\t\t\t}\n\t\t};\n\t\n\t\tif ( $.isArray( context ) ) {\n\t\t\tfor ( var i=0, ien=context.length ; i<ien ; i++ ) {\n\t\t\t\tctxSettings( context[i] );\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tctxSettings( context );\n\t\t}\n\t\n\t\t// Remove duplicates\n\t\tthis.context = _unique( settings );\n\t\n\t\t// Initial data\n\t\tif ( data ) {\n\t\t\t$.merge( this, data );\n\t\t}\n\t\n\t\t// selector\n\t\tthis.selector = {\n\t\t\trows: null,\n\t\t\tcols: null,\n\t\t\topts: null\n\t\t};\n\t\n\t\t_Api.extend( this, this, __apiStruct );\n\t};\n\t\n\tDataTable.Api = _Api;\n\t\n\t// Don't destroy the existing prototype, just extend it. Required for jQuery 2's\n\t// isPlainObject.\n\t$.extend( _Api.prototype, {\n\t\tany: function ()\n\t\t{\n\t\t\treturn this.count() !== 0;\n\t\t},\n\t\n\t\n\t\tconcat:  __arrayProto.concat,\n\t\n\t\n\t\tcontext: [], // array of table settings objects\n\t\n\t\n\t\tcount: function ()\n\t\t{\n\t\t\treturn this.flatten().length;\n\t\t},\n\t\n\t\n\t\teach: function ( fn )\n\t\t{\n\t\t\tfor ( var i=0, ien=this.length ; i<ien; i++ ) {\n\t\t\t\tfn.call( this, this[i], i, this );\n\t\t\t}\n\t\n\t\t\treturn this;\n\t\t},\n\t\n\t\n\t\teq: function ( idx )\n\t\t{\n\t\t\tvar ctx = this.context;\n\t\n\t\t\treturn ctx.length > idx ?\n\t\t\t\tnew _Api( ctx[idx], this[idx] ) :\n\t\t\t\tnull;\n\t\t},\n\t\n\t\n\t\tfilter: function ( fn )\n\t\t{\n\t\t\tvar a = [];\n\t\n\t\t\tif ( __arrayProto.filter ) {\n\t\t\t\ta = __arrayProto.filter.call( this, fn, this );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Compatibility for browsers without EMCA-252-5 (JS 1.6)\n\t\t\t\tfor ( var i=0, ien=this.length ; i<ien ; i++ ) {\n\t\t\t\t\tif ( fn.call( this, this[i], i, this ) ) {\n\t\t\t\t\t\ta.push( this[i] );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn new _Api( this.context, a );\n\t\t},\n\t\n\t\n\t\tflatten: function ()\n\t\t{\n\t\t\tvar a = [];\n\t\t\treturn new _Api( this.context, a.concat.apply( a, this.toArray() ) );\n\t\t},\n\t\n\t\n\t\tjoin:    __arrayProto.join,\n\t\n\t\n\t\tindexOf: __arrayProto.indexOf || function (obj, start)\n\t\t{\n\t\t\tfor ( var i=(start || 0), ien=this.length ; i<ien ; i++ ) {\n\t\t\t\tif ( this[i] === obj ) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn -1;\n\t\t},\n\t\n\t\titerator: function ( flatten, type, fn, alwaysNew ) {\n\t\t\tvar\n\t\t\t\ta = [], ret,\n\t\t\t\ti, ien, j, jen,\n\t\t\t\tcontext = this.context,\n\t\t\t\trows, items, item,\n\t\t\t\tselector = this.selector;\n\t\n\t\t\t// Argument shifting\n\t\t\tif ( typeof flatten === 'string' ) {\n\t\t\t\talwaysNew = fn;\n\t\t\t\tfn = type;\n\t\t\t\ttype = flatten;\n\t\t\t\tflatten = false;\n\t\t\t}\n\t\n\t\t\tfor ( i=0, ien=context.length ; i<ien ; i++ ) {\n\t\t\t\tvar apiInst = new _Api( context[i] );\n\t\n\t\t\t\tif ( type === 'table' ) {\n\t\t\t\t\tret = fn.call( apiInst, context[i], i );\n\t\n\t\t\t\t\tif ( ret !== undefined ) {\n\t\t\t\t\t\ta.push( ret );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if ( type === 'columns' || type === 'rows' ) {\n\t\t\t\t\t// this has same length as context - one entry for each table\n\t\t\t\t\tret = fn.call( apiInst, context[i], this[i], i );\n\t\n\t\t\t\t\tif ( ret !== undefined ) {\n\t\t\t\t\t\ta.push( ret );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if ( type === 'column' || type === 'column-rows' || type === 'row' || type === 'cell' ) {\n\t\t\t\t\t// columns and rows share the same structure.\n\t\t\t\t\t// 'this' is an array of column indexes for each context\n\t\t\t\t\titems = this[i];\n\t\n\t\t\t\t\tif ( type === 'column-rows' ) {\n\t\t\t\t\t\trows = _selector_row_indexes( context[i], selector.opts );\n\t\t\t\t\t}\n\t\n\t\t\t\t\tfor ( j=0, jen=items.length ; j<jen ; j++ ) {\n\t\t\t\t\t\titem = items[j];\n\t\n\t\t\t\t\t\tif ( type === 'cell' ) {\n\t\t\t\t\t\t\tret = fn.call( apiInst, context[i], item.row, item.column, i, j );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tret = fn.call( apiInst, context[i], item, i, j, rows );\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tif ( ret !== undefined ) {\n\t\t\t\t\t\t\ta.push( ret );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tif ( a.length || alwaysNew ) {\n\t\t\t\tvar api = new _Api( context, flatten ? a.concat.apply( [], a ) : a );\n\t\t\t\tvar apiSelector = api.selector;\n\t\t\t\tapiSelector.rows = selector.rows;\n\t\t\t\tapiSelector.cols = selector.cols;\n\t\t\t\tapiSelector.opts = selector.opts;\n\t\t\t\treturn api;\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\t\n\t\n\t\tlastIndexOf: __arrayProto.lastIndexOf || function (obj, start)\n\t\t{\n\t\t\t// Bit cheeky...\n\t\t\treturn this.indexOf.apply( this.toArray.reverse(), arguments );\n\t\t},\n\t\n\t\n\t\tlength:  0,\n\t\n\t\n\t\tmap: function ( fn )\n\t\t{\n\t\t\tvar a = [];\n\t\n\t\t\tif ( __arrayProto.map ) {\n\t\t\t\ta = __arrayProto.map.call( this, fn, this );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Compatibility for browsers without EMCA-252-5 (JS 1.6)\n\t\t\t\tfor ( var i=0, ien=this.length ; i<ien ; i++ ) {\n\t\t\t\t\ta.push( fn.call( this, this[i], i ) );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn new _Api( this.context, a );\n\t\t},\n\t\n\t\n\t\tpluck: function ( prop )\n\t\t{\n\t\t\treturn this.map( function ( el ) {\n\t\t\t\treturn el[ prop ];\n\t\t\t} );\n\t\t},\n\t\n\t\tpop:     __arrayProto.pop,\n\t\n\t\n\t\tpush:    __arrayProto.push,\n\t\n\t\n\t\t// Does not return an API instance\n\t\treduce: __arrayProto.reduce || function ( fn, init )\n\t\t{\n\t\t\treturn _fnReduce( this, fn, init, 0, this.length, 1 );\n\t\t},\n\t\n\t\n\t\treduceRight: __arrayProto.reduceRight || function ( fn, init )\n\t\t{\n\t\t\treturn _fnReduce( this, fn, init, this.length-1, -1, -1 );\n\t\t},\n\t\n\t\n\t\treverse: __arrayProto.reverse,\n\t\n\t\n\t\t// Object with rows, columns and opts\n\t\tselector: null,\n\t\n\t\n\t\tshift:   __arrayProto.shift,\n\t\n\t\n\t\tslice: function () {\n\t\t\treturn new _Api( this.context, this );\n\t\t},\n\t\n\t\n\t\tsort:    __arrayProto.sort, // ? name - order?\n\t\n\t\n\t\tsplice:  __arrayProto.splice,\n\t\n\t\n\t\ttoArray: function ()\n\t\t{\n\t\t\treturn __arrayProto.slice.call( this );\n\t\t},\n\t\n\t\n\t\tto$: function ()\n\t\t{\n\t\t\treturn $( this );\n\t\t},\n\t\n\t\n\t\ttoJQuery: function ()\n\t\t{\n\t\t\treturn $( this );\n\t\t},\n\t\n\t\n\t\tunique: function ()\n\t\t{\n\t\t\treturn new _Api( this.context, _unique(this) );\n\t\t},\n\t\n\t\n\t\tunshift: __arrayProto.unshift\n\t} );\n\t\n\t\n\t_Api.extend = function ( scope, obj, ext )\n\t{\n\t\t// Only extend API instances and static properties of the API\n\t\tif ( ! ext.length || ! obj || ( ! (obj instanceof _Api) && ! obj.__dt_wrapper ) ) {\n\t\t\treturn;\n\t\t}\n\t\n\t\tvar\n\t\t\ti, ien,\n\t\t\tstruct,\n\t\t\tmethodScoping = function ( scope, fn, struc ) {\n\t\t\t\treturn function () {\n\t\t\t\t\tvar ret = fn.apply( scope, arguments );\n\t\n\t\t\t\t\t// Method extension\n\t\t\t\t\t_Api.extend( ret, ret, struc.methodExt );\n\t\t\t\t\treturn ret;\n\t\t\t\t};\n\t\t\t};\n\t\n\t\tfor ( i=0, ien=ext.length ; i<ien ; i++ ) {\n\t\t\tstruct = ext[i];\n\t\n\t\t\t// Value\n\t\t\tobj[ struct.name ] = struct.type === 'function' ?\n\t\t\t\tmethodScoping( scope, struct.val, struct ) :\n\t\t\t\tstruct.type === 'object' ?\n\t\t\t\t\t{} :\n\t\t\t\t\tstruct.val;\n\t\n\t\t\tobj[ struct.name ].__dt_wrapper = true;\n\t\n\t\t\t// Property extension\n\t\t\t_Api.extend( scope, obj[ struct.name ], struct.propExt );\n\t\t}\n\t};\n\t\n\t\n\t// @todo - Is there need for an augment function?\n\t// _Api.augment = function ( inst, name )\n\t// {\n\t// \t// Find src object in the structure from the name\n\t// \tvar parts = name.split('.');\n\t\n\t// \t_Api.extend( inst, obj );\n\t// };\n\t\n\t\n\t//     [\n\t//       {\n\t//         name:      'data'                -- string   - Property name\n\t//         val:       function () {},       -- function - Api method (or undefined if just an object\n\t//         methodExt: [ ... ],              -- array    - Array of Api object definitions to extend the method result\n\t//         propExt:   [ ... ]               -- array    - Array of Api object definitions to extend the property\n\t//       },\n\t//       {\n\t//         name:     'row'\n\t//         val:       {},\n\t//         methodExt: [ ... ],\n\t//         propExt:   [\n\t//           {\n\t//             name:      'data'\n\t//             val:       function () {},\n\t//             methodExt: [ ... ],\n\t//             propExt:   [ ... ]\n\t//           },\n\t//           ...\n\t//         ]\n\t//       }\n\t//     ]\n\t\n\t_Api.register = _api_register = function ( name, val )\n\t{\n\t\tif ( $.isArray( name ) ) {\n\t\t\tfor ( var j=0, jen=name.length ; j<jen ; j++ ) {\n\t\t\t\t_Api.register( name[j], val );\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\n\t\tvar\n\t\t\ti, ien,\n\t\t\their = name.split('.'),\n\t\t\tstruct = __apiStruct,\n\t\t\tkey, method;\n\t\n\t\tvar find = function ( src, name ) {\n\t\t\tfor ( var i=0, ien=src.length ; i<ien ; i++ ) {\n\t\t\t\tif ( src[i].name === name ) {\n\t\t\t\t\treturn src[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t};\n\t\n\t\tfor ( i=0, ien=heir.length ; i<ien ; i++ ) {\n\t\t\tmethod = heir[i].indexOf('()') !== -1;\n\t\t\tkey = method ?\n\t\t\t\their[i].replace('()', '') :\n\t\t\t\their[i];\n\t\n\t\t\tvar src = find( struct, key );\n\t\t\tif ( ! src ) {\n\t\t\t\tsrc = {\n\t\t\t\t\tname:      key,\n\t\t\t\t\tval:       {},\n\t\t\t\t\tmethodExt: [],\n\t\t\t\t\tpropExt:   [],\n\t\t\t\t\ttype:      'object'\n\t\t\t\t};\n\t\t\t\tstruct.push( src );\n\t\t\t}\n\t\n\t\t\tif ( i === ien-1 ) {\n\t\t\t\tsrc.val = val;\n\t\t\t\tsrc.type = typeof val === 'function' ?\n\t\t\t\t\t'function' :\n\t\t\t\t\t$.isPlainObject( val ) ?\n\t\t\t\t\t\t'object' :\n\t\t\t\t\t\t'other';\n\t\t\t}\n\t\t\telse {\n\t\t\t\tstruct = method ?\n\t\t\t\t\tsrc.methodExt :\n\t\t\t\t\tsrc.propExt;\n\t\t\t}\n\t\t}\n\t};\n\t\n\t_Api.registerPlural = _api_registerPlural = function ( pluralName, singularName, val ) {\n\t\t_Api.register( pluralName, val );\n\t\n\t\t_Api.register( singularName, function () {\n\t\t\tvar ret = val.apply( this, arguments );\n\t\n\t\t\tif ( ret === this ) {\n\t\t\t\t// Returned item is the API instance that was passed in, return it\n\t\t\t\treturn this;\n\t\t\t}\n\t\t\telse if ( ret instanceof _Api ) {\n\t\t\t\t// New API instance returned, want the value from the first item\n\t\t\t\t// in the returned array for the singular result.\n\t\t\t\treturn ret.length ?\n\t\t\t\t\t$.isArray( ret[0] ) ?\n\t\t\t\t\t\tnew _Api( ret.context, ret[0] ) : // Array results are 'enhanced'\n\t\t\t\t\t\tret[0] :\n\t\t\t\t\tundefined;\n\t\t\t}\n\t\n\t\t\t// Non-API return - just fire it back\n\t\t\treturn ret;\n\t\t} );\n\t};\n\t\n\t\n\t/**\n\t * Selector for HTML tables. Apply the given selector to the give array of\n\t * DataTables settings objects.\n\t *\n\t * @param {string|integer} [selector] jQuery selector string or integer\n\t * @param  {array} Array of DataTables settings objects to be filtered\n\t * @return {array}\n\t * @ignore\n\t */\n\tvar __table_selector = function ( selector, a )\n\t{\n\t\t// Integer is used to pick out a table by index\n\t\tif ( typeof selector === 'number' ) {\n\t\t\treturn [ a[ selector ] ];\n\t\t}\n\t\n\t\t// Perform a jQuery selector on the table nodes\n\t\tvar nodes = $.map( a, function (el, i) {\n\t\t\treturn el.nTable;\n\t\t} );\n\t\n\t\treturn $(nodes)\n\t\t\t.filter( selector )\n\t\t\t.map( function (i) {\n\t\t\t\t// Need to translate back from the table node to the settings\n\t\t\t\tvar idx = $.inArray( this, nodes );\n\t\t\t\treturn a[ idx ];\n\t\t\t} )\n\t\t\t.toArray();\n\t};\n\t\n\t\n\t\n\t/**\n\t * Context selector for the API's context (i.e. the tables the API instance\n\t * refers to.\n\t *\n\t * @name    DataTable.Api#tables\n\t * @param {string|integer} [selector] Selector to pick which tables the iterator\n\t *   should operate on. If not given, all tables in the current context are\n\t *   used. This can be given as a jQuery selector (for example `':gt(0)'`) to\n\t *   select multiple tables or as an integer to select a single table.\n\t * @returns {DataTable.Api} Returns a new API instance if a selector is given.\n\t */\n\t_api_register( 'tables()', function ( selector ) {\n\t\t// A new instance is created if there was a selector specified\n\t\treturn selector ?\n\t\t\tnew _Api( __table_selector( selector, this.context ) ) :\n\t\t\tthis;\n\t} );\n\t\n\t\n\t_api_register( 'table()', function ( selector ) {\n\t\tvar tables = this.tables( selector );\n\t\tvar ctx = tables.context;\n\t\n\t\t// Truncate to the first matched table\n\t\treturn ctx.length ?\n\t\t\tnew _Api( ctx[0] ) :\n\t\t\ttables;\n\t} );\n\t\n\t\n\t_api_registerPlural( 'tables().nodes()', 'table().node()' , function () {\n\t\treturn this.iterator( 'table', function ( ctx ) {\n\t\t\treturn ctx.nTable;\n\t\t}, 1 );\n\t} );\n\t\n\t\n\t_api_registerPlural( 'tables().body()', 'table().body()' , function () {\n\t\treturn this.iterator( 'table', function ( ctx ) {\n\t\t\treturn ctx.nTBody;\n\t\t}, 1 );\n\t} );\n\t\n\t\n\t_api_registerPlural( 'tables().header()', 'table().header()' , function () {\n\t\treturn this.iterator( 'table', function ( ctx ) {\n\t\t\treturn ctx.nTHead;\n\t\t}, 1 );\n\t} );\n\t\n\t\n\t_api_registerPlural( 'tables().footer()', 'table().footer()' , function () {\n\t\treturn this.iterator( 'table', function ( ctx ) {\n\t\t\treturn ctx.nTFoot;\n\t\t}, 1 );\n\t} );\n\t\n\t\n\t_api_registerPlural( 'tables().containers()', 'table().container()' , function () {\n\t\treturn this.iterator( 'table', function ( ctx ) {\n\t\t\treturn ctx.nTableWrapper;\n\t\t}, 1 );\n\t} );\n\t\n\t\n\t\n\t/**\n\t * Redraw the tables in the current context.\n\t */\n\t_api_register( 'draw()', function ( paging ) {\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\tif ( paging === 'page' ) {\n\t\t\t\t_fnDraw( settings );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif ( typeof paging === 'string' ) {\n\t\t\t\t\tpaging = paging === 'full-hold' ?\n\t\t\t\t\t\tfalse :\n\t\t\t\t\t\ttrue;\n\t\t\t\t}\n\t\n\t\t\t\t_fnReDraw( settings, paging===false );\n\t\t\t}\n\t\t} );\n\t} );\n\t\n\t\n\t\n\t/**\n\t * Get the current page index.\n\t *\n\t * @return {integer} Current page index (zero based)\n\t *//**\n\t * Set the current page.\n\t *\n\t * Note that if you attempt to show a page which does not exist, DataTables will\n\t * not throw an error, but rather reset the paging.\n\t *\n\t * @param {integer|string} action The paging action to take. This can be one of:\n\t *  * `integer` - The page index to jump to\n\t *  * `string` - An action to take:\n\t *    * `first` - Jump to first page.\n\t *    * `next` - Jump to the next page\n\t *    * `previous` - Jump to previous page\n\t *    * `last` - Jump to the last page.\n\t * @returns {DataTables.Api} this\n\t */\n\t_api_register( 'page()', function ( action ) {\n\t\tif ( action === undefined ) {\n\t\t\treturn this.page.info().page; // not an expensive call\n\t\t}\n\t\n\t\t// else, have an action to take on all tables\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\t_fnPageChange( settings, action );\n\t\t} );\n\t} );\n\t\n\t\n\t/**\n\t * Paging information for the first table in the current context.\n\t *\n\t * If you require paging information for another table, use the `table()` method\n\t * with a suitable selector.\n\t *\n\t * @return {object} Object with the following properties set:\n\t *  * `page` - Current page index (zero based - i.e. the first page is `0`)\n\t *  * `pages` - Total number of pages\n\t *  * `start` - Display index for the first record shown on the current page\n\t *  * `end` - Display index for the last record shown on the current page\n\t *  * `length` - Display length (number of records). Note that generally `start\n\t *    + length = end`, but this is not always true, for example if there are\n\t *    only 2 records to show on the final page, with a length of 10.\n\t *  * `recordsTotal` - Full data set length\n\t *  * `recordsDisplay` - Data set length once the current filtering criterion\n\t *    are applied.\n\t */\n\t_api_register( 'page.info()', function ( action ) {\n\t\tif ( this.context.length === 0 ) {\n\t\t\treturn undefined;\n\t\t}\n\t\n\t\tvar\n\t\t\tsettings   = this.context[0],\n\t\t\tstart      = settings._iDisplayStart,\n\t\t\tlen        = settings.oFeatures.bPaginate ? settings._iDisplayLength : -1,\n\t\t\tvisRecords = settings.fnRecordsDisplay(),\n\t\t\tall        = len === -1;\n\t\n\t\treturn {\n\t\t\t\"page\":           all ? 0 : Math.floor( start / len ),\n\t\t\t\"pages\":          all ? 1 : Math.ceil( visRecords / len ),\n\t\t\t\"start\":          start,\n\t\t\t\"end\":            settings.fnDisplayEnd(),\n\t\t\t\"length\":         len,\n\t\t\t\"recordsTotal\":   settings.fnRecordsTotal(),\n\t\t\t\"recordsDisplay\": visRecords,\n\t\t\t\"serverSide\":     _fnDataSource( settings ) === 'ssp'\n\t\t};\n\t} );\n\t\n\t\n\t/**\n\t * Get the current page length.\n\t *\n\t * @return {integer} Current page length. Note `-1` indicates that all records\n\t *   are to be shown.\n\t *//**\n\t * Set the current page length.\n\t *\n\t * @param {integer} Page length to set. Use `-1` to show all records.\n\t * @returns {DataTables.Api} this\n\t */\n\t_api_register( 'page.len()', function ( len ) {\n\t\t// Note that we can't call this function 'length()' because `length`\n\t\t// is a Javascript property of functions which defines how many arguments\n\t\t// the function expects.\n\t\tif ( len === undefined ) {\n\t\t\treturn this.context.length !== 0 ?\n\t\t\t\tthis.context[0]._iDisplayLength :\n\t\t\t\tundefined;\n\t\t}\n\t\n\t\t// else, set the page length\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\t_fnLengthChange( settings, len );\n\t\t} );\n\t} );\n\t\n\t\n\t\n\tvar __reload = function ( settings, holdPosition, callback ) {\n\t\t// Use the draw event to trigger a callback\n\t\tif ( callback ) {\n\t\t\tvar api = new _Api( settings );\n\t\n\t\t\tapi.one( 'draw', function () {\n\t\t\t\tcallback( api.ajax.json() );\n\t\t\t} );\n\t\t}\n\t\n\t\tif ( _fnDataSource( settings ) == 'ssp' ) {\n\t\t\t_fnReDraw( settings, holdPosition );\n\t\t}\n\t\telse {\n\t\t\t_fnProcessingDisplay( settings, true );\n\t\n\t\t\t// Cancel an existing request\n\t\t\tvar xhr = settings.jqXHR;\n\t\t\tif ( xhr && xhr.readyState !== 4 ) {\n\t\t\t\txhr.abort();\n\t\t\t}\n\t\n\t\t\t// Trigger xhr\n\t\t\t_fnBuildAjax( settings, [], function( json ) {\n\t\t\t\t_fnClearTable( settings );\n\t\n\t\t\t\tvar data = _fnAjaxDataSrc( settings, json );\n\t\t\t\tfor ( var i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t\t\t\t_fnAddData( settings, data[i] );\n\t\t\t\t}\n\t\n\t\t\t\t_fnReDraw( settings, holdPosition );\n\t\t\t\t_fnProcessingDisplay( settings, false );\n\t\t\t} );\n\t\t}\n\t};\n\t\n\t\n\t/**\n\t * Get the JSON response from the last Ajax request that DataTables made to the\n\t * server. Note that this returns the JSON from the first table in the current\n\t * context.\n\t *\n\t * @return {object} JSON received from the server.\n\t */\n\t_api_register( 'ajax.json()', function () {\n\t\tvar ctx = this.context;\n\t\n\t\tif ( ctx.length > 0 ) {\n\t\t\treturn ctx[0].json;\n\t\t}\n\t\n\t\t// else return undefined;\n\t} );\n\t\n\t\n\t/**\n\t * Get the data submitted in the last Ajax request\n\t */\n\t_api_register( 'ajax.params()', function () {\n\t\tvar ctx = this.context;\n\t\n\t\tif ( ctx.length > 0 ) {\n\t\t\treturn ctx[0].oAjaxData;\n\t\t}\n\t\n\t\t// else return undefined;\n\t} );\n\t\n\t\n\t/**\n\t * Reload tables from the Ajax data source. Note that this function will\n\t * automatically re-draw the table when the remote data has been loaded.\n\t *\n\t * @param {boolean} [reset=true] Reset (default) or hold the current paging\n\t *   position. A full re-sort and re-filter is performed when this method is\n\t *   called, which is why the pagination reset is the default action.\n\t * @returns {DataTables.Api} this\n\t */\n\t_api_register( 'ajax.reload()', function ( callback, resetPaging ) {\n\t\treturn this.iterator( 'table', function (settings) {\n\t\t\t__reload( settings, resetPaging===false, callback );\n\t\t} );\n\t} );\n\t\n\t\n\t/**\n\t * Get the current Ajax URL. Note that this returns the URL from the first\n\t * table in the current context.\n\t *\n\t * @return {string} Current Ajax source URL\n\t *//**\n\t * Set the Ajax URL. Note that this will set the URL for all tables in the\n\t * current context.\n\t *\n\t * @param {string} url URL to set.\n\t * @returns {DataTables.Api} this\n\t */\n\t_api_register( 'ajax.url()', function ( url ) {\n\t\tvar ctx = this.context;\n\t\n\t\tif ( url === undefined ) {\n\t\t\t// get\n\t\t\tif ( ctx.length === 0 ) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tctx = ctx[0];\n\t\n\t\t\treturn ctx.ajax ?\n\t\t\t\t$.isPlainObject( ctx.ajax ) ?\n\t\t\t\t\tctx.ajax.url :\n\t\t\t\t\tctx.ajax :\n\t\t\t\tctx.sAjaxSource;\n\t\t}\n\t\n\t\t// set\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\tif ( $.isPlainObject( settings.ajax ) ) {\n\t\t\t\tsettings.ajax.url = url;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsettings.ajax = url;\n\t\t\t}\n\t\t\t// No need to consider sAjaxSource here since DataTables gives priority\n\t\t\t// to `ajax` over `sAjaxSource`. So setting `ajax` here, renders any\n\t\t\t// value of `sAjaxSource` redundant.\n\t\t} );\n\t} );\n\t\n\t\n\t/**\n\t * Load data from the newly set Ajax URL. Note that this method is only\n\t * available when `ajax.url()` is used to set a URL. Additionally, this method\n\t * has the same effect as calling `ajax.reload()` but is provided for\n\t * convenience when setting a new URL. Like `ajax.reload()` it will\n\t * automatically redraw the table once the remote data has been loaded.\n\t *\n\t * @returns {DataTables.Api} this\n\t */\n\t_api_register( 'ajax.url().load()', function ( callback, resetPaging ) {\n\t\t// Same as a reload, but makes sense to present it for easy access after a\n\t\t// url change\n\t\treturn this.iterator( 'table', function ( ctx ) {\n\t\t\t__reload( ctx, resetPaging===false, callback );\n\t\t} );\n\t} );\n\t\n\t\n\t\n\t\n\tvar _selector_run = function ( type, selector, selectFn, settings, opts )\n\t{\n\t\tvar\n\t\t\tout = [], res,\n\t\t\ta, i, ien, j, jen,\n\t\t\tselectorType = typeof selector;\n\t\n\t\t// Can't just check for isArray here, as an API or jQuery instance might be\n\t\t// given with their array like look\n\t\tif ( ! selector || selectorType === 'string' || selectorType === 'function' || selector.length === undefined ) {\n\t\t\tselector = [ selector ];\n\t\t}\n\t\n\t\tfor ( i=0, ien=selector.length ; i<ien ; i++ ) {\n\t\t\t// Only split on simple strings - complex expressions will be jQuery selectors\n\t\t\ta = selector[i] && selector[i].split && ! selector[i].match(/[\\[\\(:]/) ?\n\t\t\t\tselector[i].split(',') :\n\t\t\t\t[ selector[i] ];\n\t\n\t\t\tfor ( j=0, jen=a.length ; j<jen ; j++ ) {\n\t\t\t\tres = selectFn( typeof a[j] === 'string' ? $.trim(a[j]) : a[j] );\n\t\n\t\t\t\tif ( res && res.length ) {\n\t\t\t\t\tout = out.concat( res );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\t// selector extensions\n\t\tvar ext = _ext.selector[ type ];\n\t\tif ( ext.length ) {\n\t\t\tfor ( i=0, ien=ext.length ; i<ien ; i++ ) {\n\t\t\t\tout = ext[i]( settings, opts, out );\n\t\t\t}\n\t\t}\n\t\n\t\treturn _unique( out );\n\t};\n\t\n\t\n\tvar _selector_opts = function ( opts )\n\t{\n\t\tif ( ! opts ) {\n\t\t\topts = {};\n\t\t}\n\t\n\t\t// Backwards compatibility for 1.9- which used the terminology filter rather\n\t\t// than search\n\t\tif ( opts.filter && opts.search === undefined ) {\n\t\t\topts.search = opts.filter;\n\t\t}\n\t\n\t\treturn $.extend( {\n\t\t\tsearch: 'none',\n\t\t\torder: 'current',\n\t\t\tpage: 'all'\n\t\t}, opts );\n\t};\n\t\n\t\n\tvar _selector_first = function ( inst )\n\t{\n\t\t// Reduce the API instance to the first item found\n\t\tfor ( var i=0, ien=inst.length ; i<ien ; i++ ) {\n\t\t\tif ( inst[i].length > 0 ) {\n\t\t\t\t// Assign the first element to the first item in the instance\n\t\t\t\t// and truncate the instance and context\n\t\t\t\tinst[0] = inst[i];\n\t\t\t\tinst[0].length = 1;\n\t\t\t\tinst.length = 1;\n\t\t\t\tinst.context = [ inst.context[i] ];\n\t\n\t\t\t\treturn inst;\n\t\t\t}\n\t\t}\n\t\n\t\t// Not found - return an empty instance\n\t\tinst.length = 0;\n\t\treturn inst;\n\t};\n\t\n\t\n\tvar _selector_row_indexes = function ( settings, opts )\n\t{\n\t\tvar\n\t\t\ti, ien, tmp, a=[],\n\t\t\tdisplayFiltered = settings.aiDisplay,\n\t\t\tdisplayMaster = settings.aiDisplayMaster;\n\t\n\t\tvar\n\t\t\tsearch = opts.search,  // none, applied, removed\n\t\t\torder  = opts.order,   // applied, current, index (original - compatibility with 1.9)\n\t\t\tpage   = opts.page;    // all, current\n\t\n\t\tif ( _fnDataSource( settings ) == 'ssp' ) {\n\t\t\t// In server-side processing mode, most options are irrelevant since\n\t\t\t// rows not shown don't exist and the index order is the applied order\n\t\t\t// Removed is a special case - for consistency just return an empty\n\t\t\t// array\n\t\t\treturn search === 'removed' ?\n\t\t\t\t[] :\n\t\t\t\t_range( 0, displayMaster.length );\n\t\t}\n\t\telse if ( page == 'current' ) {\n\t\t\t// Current page implies that order=current and fitler=applied, since it is\n\t\t\t// fairly senseless otherwise, regardless of what order and search actually\n\t\t\t// are\n\t\t\tfor ( i=settings._iDisplayStart, ien=settings.fnDisplayEnd() ; i<ien ; i++ ) {\n\t\t\t\ta.push( displayFiltered[i] );\n\t\t\t}\n\t\t}\n\t\telse if ( order == 'current' || order == 'applied' ) {\n\t\t\tif ( search == 'none') {\n\t\t\t\ta = displayMaster.slice();\n\t\t\t}\n\t\t\telse if ( search == 'applied' ) {\n\t\t\t\ta = displayFiltered.slice();\n\t\t\t}\n\t\t\telse if ( search == 'removed' ) {\n\t\t\t\t// O(n+m) solution by creating a hash map\n\t\t\t\tvar displayFilteredMap = {};\n\t\n\t\t\t\tfor ( var i=0, ien=displayFiltered.length ; i<ien ; i++ ) {\n\t\t\t\t\tdisplayFilteredMap[displayFiltered[i]] = null;\n\t\t\t\t}\n\t\n\t\t\t\ta = $.map( displayMaster, function (el) {\n\t\t\t\t\treturn ! displayFilteredMap.hasOwnProperty(el) ?\n\t\t\t\t\t\tel :\n\t\t\t\t\t\tnull;\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\t\telse if ( order == 'index' || order == 'original' ) {\n\t\t\tfor ( i=0, ien=settings.aoData.length ; i<ien ; i++ ) {\n\t\t\t\tif ( search == 'none' ) {\n\t\t\t\t\ta.push( i );\n\t\t\t\t}\n\t\t\t\telse { // applied | removed\n\t\t\t\t\ttmp = $.inArray( i, displayFiltered );\n\t\n\t\t\t\t\tif ((tmp === -1 && search == 'removed') ||\n\t\t\t\t\t\t(tmp >= 0   && search == 'applied') )\n\t\t\t\t\t{\n\t\t\t\t\t\ta.push( i );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\treturn a;\n\t};\n\t\n\t\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * Rows\n\t *\n\t * {}          - no selector - use all available rows\n\t * {integer}   - row aoData index\n\t * {node}      - TR node\n\t * {string}    - jQuery selector to apply to the TR elements\n\t * {array}     - jQuery array of nodes, or simply an array of TR nodes\n\t *\n\t */\n\tvar __row_selector = function ( settings, selector, opts )\n\t{\n\t\tvar rows;\n\t\tvar run = function ( sel ) {\n\t\t\tvar selInt = _intVal( sel );\n\t\t\tvar i, ien;\n\t\t\tvar aoData = settings.aoData;\n\t\n\t\t\t// Short cut - selector is a number and no options provided (default is\n\t\t\t// all records, so no need to check if the index is in there, since it\n\t\t\t// must be - dev error if the index doesn't exist).\n\t\t\tif ( selInt !== null && ! opts ) {\n\t\t\t\treturn [ selInt ];\n\t\t\t}\n\t\n\t\t\tif ( ! rows ) {\n\t\t\t\trows = _selector_row_indexes( settings, opts );\n\t\t\t}\n\t\n\t\t\tif ( selInt !== null && $.inArray( selInt, rows ) !== -1 ) {\n\t\t\t\t// Selector - integer\n\t\t\t\treturn [ selInt ];\n\t\t\t}\n\t\t\telse if ( sel === null || sel === undefined || sel === '' ) {\n\t\t\t\t// Selector - none\n\t\t\t\treturn rows;\n\t\t\t}\n\t\n\t\t\t// Selector - function\n\t\t\tif ( typeof sel === 'function' ) {\n\t\t\t\treturn $.map( rows, function (idx) {\n\t\t\t\t\tvar row = aoData[ idx ];\n\t\t\t\t\treturn sel( idx, row._aData, row.nTr ) ? idx : null;\n\t\t\t\t} );\n\t\t\t}\n\t\n\t\t\t// Selector - node\n\t\t\tif ( sel.nodeName ) {\n\t\t\t\tvar rowIdx = sel._DT_RowIndex;  // Property added by DT for fast lookup\n\t\t\t\tvar cellIdx = sel._DT_CellIndex;\n\t\n\t\t\t\tif ( rowIdx !== undefined ) {\n\t\t\t\t\t// Make sure that the row is actually still present in the table\n\t\t\t\t\treturn aoData[ rowIdx ] && aoData[ rowIdx ].nTr === sel ?\n\t\t\t\t\t\t[ rowIdx ] :\n\t\t\t\t\t\t[];\n\t\t\t\t}\n\t\t\t\telse if ( cellIdx ) {\n\t\t\t\t\treturn aoData[ cellIdx.row ] && aoData[ cellIdx.row ].nTr === sel.parentNode ?\n\t\t\t\t\t\t[ cellIdx.row ] :\n\t\t\t\t\t\t[];\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tvar host = $(sel).closest('*[data-dt-row]');\n\t\t\t\t\treturn host.length ?\n\t\t\t\t\t\t[ host.data('dt-row') ] :\n\t\t\t\t\t\t[];\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// ID selector. Want to always be able to select rows by id, regardless\n\t\t\t// of if the tr element has been created or not, so can't rely upon\n\t\t\t// jQuery here - hence a custom implementation. This does not match\n\t\t\t// Sizzle's fast selector or HTML4 - in HTML5 the ID can be anything,\n\t\t\t// but to select it using a CSS selector engine (like Sizzle or\n\t\t\t// querySelect) it would need to need to be escaped for some characters.\n\t\t\t// DataTables simplifies this for row selectors since you can select\n\t\t\t// only a row. A # indicates an id any anything that follows is the id -\n\t\t\t// unescaped.\n\t\t\tif ( typeof sel === 'string' && sel.charAt(0) === '#' ) {\n\t\t\t\t// get row index from id\n\t\t\t\tvar rowObj = settings.aIds[ sel.replace( /^#/, '' ) ];\n\t\t\t\tif ( rowObj !== undefined ) {\n\t\t\t\t\treturn [ rowObj.idx ];\n\t\t\t\t}\n\t\n\t\t\t\t// need to fall through to jQuery in case there is DOM id that\n\t\t\t\t// matches\n\t\t\t}\n\t\t\t\n\t\t\t// Get nodes in the order from the `rows` array with null values removed\n\t\t\tvar nodes = _removeEmpty(\n\t\t\t\t_pluck_order( settings.aoData, rows, 'nTr' )\n\t\t\t);\n\t\n\t\t\t// Selector - jQuery selector string, array of nodes or jQuery object/\n\t\t\t// As jQuery's .filter() allows jQuery objects to be passed in filter,\n\t\t\t// it also allows arrays, so this will cope with all three options\n\t\t\treturn $(nodes)\n\t\t\t\t.filter( sel )\n\t\t\t\t.map( function () {\n\t\t\t\t\treturn this._DT_RowIndex;\n\t\t\t\t} )\n\t\t\t\t.toArray();\n\t\t};\n\t\n\t\treturn _selector_run( 'row', selector, run, settings, opts );\n\t};\n\t\n\t\n\t_api_register( 'rows()', function ( selector, opts ) {\n\t\t// argument shifting\n\t\tif ( selector === undefined ) {\n\t\t\tselector = '';\n\t\t}\n\t\telse if ( $.isPlainObject( selector ) ) {\n\t\t\topts = selector;\n\t\t\tselector = '';\n\t\t}\n\t\n\t\topts = _selector_opts( opts );\n\t\n\t\tvar inst = this.iterator( 'table', function ( settings ) {\n\t\t\treturn __row_selector( settings, selector, opts );\n\t\t}, 1 );\n\t\n\t\t// Want argument shifting here and in __row_selector?\n\t\tinst.selector.rows = selector;\n\t\tinst.selector.opts = opts;\n\t\n\t\treturn inst;\n\t} );\n\t\n\t_api_register( 'rows().nodes()', function () {\n\t\treturn this.iterator( 'row', function ( settings, row ) {\n\t\t\treturn settings.aoData[ row ].nTr || undefined;\n\t\t}, 1 );\n\t} );\n\t\n\t_api_register( 'rows().data()', function () {\n\t\treturn this.iterator( true, 'rows', function ( settings, rows ) {\n\t\t\treturn _pluck_order( settings.aoData, rows, '_aData' );\n\t\t}, 1 );\n\t} );\n\t\n\t_api_registerPlural( 'rows().cache()', 'row().cache()', function ( type ) {\n\t\treturn this.iterator( 'row', function ( settings, row ) {\n\t\t\tvar r = settings.aoData[ row ];\n\t\t\treturn type === 'search' ? r._aFilterData : r._aSortData;\n\t\t}, 1 );\n\t} );\n\t\n\t_api_registerPlural( 'rows().invalidate()', 'row().invalidate()', function ( src ) {\n\t\treturn this.iterator( 'row', function ( settings, row ) {\n\t\t\t_fnInvalidate( settings, row, src );\n\t\t} );\n\t} );\n\t\n\t_api_registerPlural( 'rows().indexes()', 'row().index()', function () {\n\t\treturn this.iterator( 'row', function ( settings, row ) {\n\t\t\treturn row;\n\t\t}, 1 );\n\t} );\n\t\n\t_api_registerPlural( 'rows().ids()', 'row().id()', function ( hash ) {\n\t\tvar a = [];\n\t\tvar context = this.context;\n\t\n\t\t// `iterator` will drop undefined values, but in this case we want them\n\t\tfor ( var i=0, ien=context.length ; i<ien ; i++ ) {\n\t\t\tfor ( var j=0, jen=this[i].length ; j<jen ; j++ ) {\n\t\t\t\tvar id = context[i].rowIdFn( context[i].aoData[ this[i][j] ]._aData );\n\t\t\t\ta.push( (hash === true ? '#' : '' )+ id );\n\t\t\t}\n\t\t}\n\t\n\t\treturn new _Api( context, a );\n\t} );\n\t\n\t_api_registerPlural( 'rows().remove()', 'row().remove()', function () {\n\t\tvar that = this;\n\t\n\t\tthis.iterator( 'row', function ( settings, row, thatIdx ) {\n\t\t\tvar data = settings.aoData;\n\t\t\tvar rowData = data[ row ];\n\t\t\tvar i, ien, j, jen;\n\t\t\tvar loopRow, loopCells;\n\t\n\t\t\tdata.splice( row, 1 );\n\t\n\t\t\t// Update the cached indexes\n\t\t\tfor ( i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t\t\tloopRow = data[i];\n\t\t\t\tloopCells = loopRow.anCells;\n\t\n\t\t\t\t// Rows\n\t\t\t\tif ( loopRow.nTr !== null ) {\n\t\t\t\t\tloopRow.nTr._DT_RowIndex = i;\n\t\t\t\t}\n\t\n\t\t\t\t// Cells\n\t\t\t\tif ( loopCells !== null ) {\n\t\t\t\t\tfor ( j=0, jen=loopCells.length ; j<jen ; j++ ) {\n\t\t\t\t\t\tloopCells[j]._DT_CellIndex.row = i;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// Delete from the display arrays\n\t\t\t_fnDeleteIndex( settings.aiDisplayMaster, row );\n\t\t\t_fnDeleteIndex( settings.aiDisplay, row );\n\t\t\t_fnDeleteIndex( that[ thatIdx ], row, false ); // maintain local indexes\n\t\n\t\t\t// For server-side processing tables - subtract the deleted row from the count\n\t\t\tif ( settings._iRecordsDisplay > 0 ) {\n\t\t\t\tsettings._iRecordsDisplay--;\n\t\t\t}\n\t\n\t\t\t// Check for an 'overflow' they case for displaying the table\n\t\t\t_fnLengthOverflow( settings );\n\t\n\t\t\t// Remove the row's ID reference if there is one\n\t\t\tvar id = settings.rowIdFn( rowData._aData );\n\t\t\tif ( id !== undefined ) {\n\t\t\t\tdelete settings.aIds[ id ];\n\t\t\t}\n\t\t} );\n\t\n\t\tthis.iterator( 'table', function ( settings ) {\n\t\t\tfor ( var i=0, ien=settings.aoData.length ; i<ien ; i++ ) {\n\t\t\t\tsettings.aoData[i].idx = i;\n\t\t\t}\n\t\t} );\n\t\n\t\treturn this;\n\t} );\n\t\n\t\n\t_api_register( 'rows.add()', function ( rows ) {\n\t\tvar newRows = this.iterator( 'table', function ( settings ) {\n\t\t\t\tvar row, i, ien;\n\t\t\t\tvar out = [];\n\t\n\t\t\t\tfor ( i=0, ien=rows.length ; i<ien ; i++ ) {\n\t\t\t\t\trow = rows[i];\n\t\n\t\t\t\t\tif ( row.nodeName && row.nodeName.toUpperCase() === 'TR' ) {\n\t\t\t\t\t\tout.push( _fnAddTr( settings, row )[0] );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tout.push( _fnAddData( settings, row ) );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\treturn out;\n\t\t\t}, 1 );\n\t\n\t\t// Return an Api.rows() extended instance, so rows().nodes() etc can be used\n\t\tvar modRows = this.rows( -1 );\n\t\tmodRows.pop();\n\t\t$.merge( modRows, newRows );\n\t\n\t\treturn modRows;\n\t} );\n\t\n\t\n\t\n\t\n\t\n\t/**\n\t *\n\t */\n\t_api_register( 'row()', function ( selector, opts ) {\n\t\treturn _selector_first( this.rows( selector, opts ) );\n\t} );\n\t\n\t\n\t_api_register( 'row().data()', function ( data ) {\n\t\tvar ctx = this.context;\n\t\n\t\tif ( data === undefined ) {\n\t\t\t// Get\n\t\t\treturn ctx.length && this.length ?\n\t\t\t\tctx[0].aoData[ this[0] ]._aData :\n\t\t\t\tundefined;\n\t\t}\n\t\n\t\t// Set\n\t\tvar row = ctx[0].aoData[ this[0] ];\n\t\trow._aData = data;\n\t\n\t\t// If the DOM has an id, and the data source is an array\n\t\tif ( $.isArray( data ) && row.nTr.id ) {\n\t\t\t_fnSetObjectDataFn( ctx[0].rowId )( data, row.nTr.id );\n\t\t}\n\t\n\t\t// Automatically invalidate\n\t\t_fnInvalidate( ctx[0], this[0], 'data' );\n\t\n\t\treturn this;\n\t} );\n\t\n\t\n\t_api_register( 'row().node()', function () {\n\t\tvar ctx = this.context;\n\t\n\t\treturn ctx.length && this.length ?\n\t\t\tctx[0].aoData[ this[0] ].nTr || null :\n\t\t\tnull;\n\t} );\n\t\n\t\n\t_api_register( 'row.add()', function ( row ) {\n\t\t// Allow a jQuery object to be passed in - only a single row is added from\n\t\t// it though - the first element in the set\n\t\tif ( row instanceof $ && row.length ) {\n\t\t\trow = row[0];\n\t\t}\n\t\n\t\tvar rows = this.iterator( 'table', function ( settings ) {\n\t\t\tif ( row.nodeName && row.nodeName.toUpperCase() === 'TR' ) {\n\t\t\t\treturn _fnAddTr( settings, row )[0];\n\t\t\t}\n\t\t\treturn _fnAddData( settings, row );\n\t\t} );\n\t\n\t\t// Return an Api.rows() extended instance, with the newly added row selected\n\t\treturn this.row( rows[0] );\n\t} );\n\t\n\t\n\t\n\tvar __details_add = function ( ctx, row, data, klass )\n\t{\n\t\t// Convert to array of TR elements\n\t\tvar rows = [];\n\t\tvar addRow = function ( r, k ) {\n\t\t\t// Recursion to allow for arrays of jQuery objects\n\t\t\tif ( $.isArray( r ) || r instanceof $ ) {\n\t\t\t\tfor ( var i=0, ien=r.length ; i<ien ; i++ ) {\n\t\t\t\t\taddRow( r[i], k );\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t// If we get a TR element, then just add it directly - up to the dev\n\t\t\t// to add the correct number of columns etc\n\t\t\tif ( r.nodeName && r.nodeName.toLowerCase() === 'tr' ) {\n\t\t\t\trows.push( r );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Otherwise create a row with a wrapper\n\t\t\t\tvar created = $('<tr><td/></tr>').addClass( k );\n\t\t\t\t$('td', created)\n\t\t\t\t\t.addClass( k )\n\t\t\t\t\t.html( r )\n\t\t\t\t\t[0].colSpan = _fnVisbleColumns( ctx );\n\t\n\t\t\t\trows.push( created[0] );\n\t\t\t}\n\t\t};\n\t\n\t\taddRow( data, klass );\n\t\n\t\tif ( row._details ) {\n\t\t\trow._details.detach();\n\t\t}\n\t\n\t\trow._details = $(rows);\n\t\n\t\t// If the children were already shown, that state should be retained\n\t\tif ( row._detailsShow ) {\n\t\t\trow._details.insertAfter( row.nTr );\n\t\t}\n\t};\n\t\n\t\n\tvar __details_remove = function ( api, idx )\n\t{\n\t\tvar ctx = api.context;\n\t\n\t\tif ( ctx.length ) {\n\t\t\tvar row = ctx[0].aoData[ idx !== undefined ? idx : api[0] ];\n\t\n\t\t\tif ( row && row._details ) {\n\t\t\t\trow._details.remove();\n\t\n\t\t\t\trow._detailsShow = undefined;\n\t\t\t\trow._details = undefined;\n\t\t\t}\n\t\t}\n\t};\n\t\n\t\n\tvar __details_display = function ( api, show ) {\n\t\tvar ctx = api.context;\n\t\n\t\tif ( ctx.length && api.length ) {\n\t\t\tvar row = ctx[0].aoData[ api[0] ];\n\t\n\t\t\tif ( row._details ) {\n\t\t\t\trow._detailsShow = show;\n\t\n\t\t\t\tif ( show ) {\n\t\t\t\t\trow._details.insertAfter( row.nTr );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\trow._details.detach();\n\t\t\t\t}\n\t\n\t\t\t\t__details_events( ctx[0] );\n\t\t\t}\n\t\t}\n\t};\n\t\n\t\n\tvar __details_events = function ( settings )\n\t{\n\t\tvar api = new _Api( settings );\n\t\tvar namespace = '.dt.DT_details';\n\t\tvar drawEvent = 'draw'+namespace;\n\t\tvar colvisEvent = 'column-visibility'+namespace;\n\t\tvar destroyEvent = 'destroy'+namespace;\n\t\tvar data = settings.aoData;\n\t\n\t\tapi.off( drawEvent +' '+ colvisEvent +' '+ destroyEvent );\n\t\n\t\tif ( _pluck( data, '_details' ).length > 0 ) {\n\t\t\t// On each draw, insert the required elements into the document\n\t\t\tapi.on( drawEvent, function ( e, ctx ) {\n\t\t\t\tif ( settings !== ctx ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\tapi.rows( {page:'current'} ).eq(0).each( function (idx) {\n\t\t\t\t\t// Internal data grab\n\t\t\t\t\tvar row = data[ idx ];\n\t\n\t\t\t\t\tif ( row._detailsShow ) {\n\t\t\t\t\t\trow._details.insertAfter( row.nTr );\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t} );\n\t\n\t\t\t// Column visibility change - update the colspan\n\t\t\tapi.on( colvisEvent, function ( e, ctx, idx, vis ) {\n\t\t\t\tif ( settings !== ctx ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\t// Update the colspan for the details rows (note, only if it already has\n\t\t\t\t// a colspan)\n\t\t\t\tvar row, visible = _fnVisbleColumns( ctx );\n\t\n\t\t\t\tfor ( var i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t\t\t\trow = data[i];\n\t\n\t\t\t\t\tif ( row._details ) {\n\t\t\t\t\t\trow._details.children('td[colspan]').attr('colspan', visible );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\t\n\t\t\t// Table destroyed - nuke any child rows\n\t\t\tapi.on( destroyEvent, function ( e, ctx ) {\n\t\t\t\tif ( settings !== ctx ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\tfor ( var i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t\t\t\tif ( data[i]._details ) {\n\t\t\t\t\t\t__details_remove( api, i );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\t};\n\t\n\t// Strings for the method names to help minification\n\tvar _emp = '';\n\tvar _child_obj = _emp+'row().child';\n\tvar _child_mth = _child_obj+'()';\n\t\n\t// data can be:\n\t//  tr\n\t//  string\n\t//  jQuery or array of any of the above\n\t_api_register( _child_mth, function ( data, klass ) {\n\t\tvar ctx = this.context;\n\t\n\t\tif ( data === undefined ) {\n\t\t\t// get\n\t\t\treturn ctx.length && this.length ?\n\t\t\t\tctx[0].aoData[ this[0] ]._details :\n\t\t\t\tundefined;\n\t\t}\n\t\telse if ( data === true ) {\n\t\t\t// show\n\t\t\tthis.child.show();\n\t\t}\n\t\telse if ( data === false ) {\n\t\t\t// remove\n\t\t\t__details_remove( this );\n\t\t}\n\t\telse if ( ctx.length && this.length ) {\n\t\t\t// set\n\t\t\t__details_add( ctx[0], ctx[0].aoData[ this[0] ], data, klass );\n\t\t}\n\t\n\t\treturn this;\n\t} );\n\t\n\t\n\t_api_register( [\n\t\t_child_obj+'.show()',\n\t\t_child_mth+'.show()' // only when `child()` was called with parameters (without\n\t], function ( show ) {   // it returns an object and this method is not executed)\n\t\t__details_display( this, true );\n\t\treturn this;\n\t} );\n\t\n\t\n\t_api_register( [\n\t\t_child_obj+'.hide()',\n\t\t_child_mth+'.hide()' // only when `child()` was called with parameters (without\n\t], function () {         // it returns an object and this method is not executed)\n\t\t__details_display( this, false );\n\t\treturn this;\n\t} );\n\t\n\t\n\t_api_register( [\n\t\t_child_obj+'.remove()',\n\t\t_child_mth+'.remove()' // only when `child()` was called with parameters (without\n\t], function () {           // it returns an object and this method is not executed)\n\t\t__details_remove( this );\n\t\treturn this;\n\t} );\n\t\n\t\n\t_api_register( _child_obj+'.isShown()', function () {\n\t\tvar ctx = this.context;\n\t\n\t\tif ( ctx.length && this.length ) {\n\t\t\t// _detailsShown as false or undefined will fall through to return false\n\t\t\treturn ctx[0].aoData[ this[0] ]._detailsShow || false;\n\t\t}\n\t\treturn false;\n\t} );\n\t\n\t\n\t\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * Columns\n\t *\n\t * {integer}           - column index (>=0 count from left, <0 count from right)\n\t * \"{integer}:visIdx\"  - visible column index (i.e. translate to column index)  (>=0 count from left, <0 count from right)\n\t * \"{integer}:visible\" - alias for {integer}:visIdx  (>=0 count from left, <0 count from right)\n\t * \"{string}:name\"     - column name\n\t * \"{string}\"          - jQuery selector on column header nodes\n\t *\n\t */\n\t\n\t// can be an array of these items, comma separated list, or an array of comma\n\t// separated lists\n\t\n\tvar __re_column_selector = /^([^:]+):(name|visIdx|visible)$/;\n\t\n\t\n\t// r1 and r2 are redundant - but it means that the parameters match for the\n\t// iterator callback in columns().data()\n\tvar __columnData = function ( settings, column, r1, r2, rows ) {\n\t\tvar a = [];\n\t\tfor ( var row=0, ien=rows.length ; row<ien ; row++ ) {\n\t\t\ta.push( _fnGetCellData( settings, rows[row], column ) );\n\t\t}\n\t\treturn a;\n\t};\n\t\n\t\n\tvar __column_selector = function ( settings, selector, opts )\n\t{\n\t\tvar\n\t\t\tcolumns = settings.aoColumns,\n\t\t\tnames = _pluck( columns, 'sName' ),\n\t\t\tnodes = _pluck( columns, 'nTh' );\n\t\n\t\tvar run = function ( s ) {\n\t\t\tvar selInt = _intVal( s );\n\t\n\t\t\t// Selector - all\n\t\t\tif ( s === '' ) {\n\t\t\t\treturn _range( columns.length );\n\t\t\t}\n\t\n\t\t\t// Selector - index\n\t\t\tif ( selInt !== null ) {\n\t\t\t\treturn [ selInt >= 0 ?\n\t\t\t\t\tselInt : // Count from left\n\t\t\t\t\tcolumns.length + selInt // Count from right (+ because its a negative value)\n\t\t\t\t];\n\t\t\t}\n\t\n\t\t\t// Selector = function\n\t\t\tif ( typeof s === 'function' ) {\n\t\t\t\tvar rows = _selector_row_indexes( settings, opts );\n\t\n\t\t\t\treturn $.map( columns, function (col, idx) {\n\t\t\t\t\treturn s(\n\t\t\t\t\t\t\tidx,\n\t\t\t\t\t\t\t__columnData( settings, idx, 0, 0, rows ),\n\t\t\t\t\t\t\tnodes[ idx ]\n\t\t\t\t\t\t) ? idx : null;\n\t\t\t\t} );\n\t\t\t}\n\t\n\t\t\t// jQuery or string selector\n\t\t\tvar match = typeof s === 'string' ?\n\t\t\t\ts.match( __re_column_selector ) :\n\t\t\t\t'';\n\t\n\t\t\tif ( match ) {\n\t\t\t\tswitch( match[2] ) {\n\t\t\t\t\tcase 'visIdx':\n\t\t\t\t\tcase 'visible':\n\t\t\t\t\t\tvar idx = parseInt( match[1], 10 );\n\t\t\t\t\t\t// Visible index given, convert to column index\n\t\t\t\t\t\tif ( idx < 0 ) {\n\t\t\t\t\t\t\t// Counting from the right\n\t\t\t\t\t\t\tvar visColumns = $.map( columns, function (col,i) {\n\t\t\t\t\t\t\t\treturn col.bVisible ? i : null;\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\treturn [ visColumns[ visColumns.length + idx ] ];\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Counting from the left\n\t\t\t\t\t\treturn [ _fnVisibleToColumnIndex( settings, idx ) ];\n\t\n\t\t\t\t\tcase 'name':\n\t\t\t\t\t\t// match by name. `names` is column index complete and in order\n\t\t\t\t\t\treturn $.map( names, function (name, i) {\n\t\t\t\t\t\t\treturn name === match[1] ? i : null;\n\t\t\t\t\t\t} );\n\t\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn [];\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// Cell in the table body\n\t\t\tif ( s.nodeName && s._DT_CellIndex ) {\n\t\t\t\treturn [ s._DT_CellIndex.column ];\n\t\t\t}\n\t\n\t\t\t// jQuery selector on the TH elements for the columns\n\t\t\tvar jqResult = $( nodes )\n\t\t\t\t.filter( s )\n\t\t\t\t.map( function () {\n\t\t\t\t\treturn $.inArray( this, nodes ); // `nodes` is column index complete and in order\n\t\t\t\t} )\n\t\t\t\t.toArray();\n\t\n\t\t\tif ( jqResult.length || ! s.nodeName ) {\n\t\t\t\treturn jqResult;\n\t\t\t}\n\t\n\t\t\t// Otherwise a node which might have a `dt-column` data attribute, or be\n\t\t\t// a child or such an element\n\t\t\tvar host = $(s).closest('*[data-dt-column]');\n\t\t\treturn host.length ?\n\t\t\t\t[ host.data('dt-column') ] :\n\t\t\t\t[];\n\t\t};\n\t\n\t\treturn _selector_run( 'column', selector, run, settings, opts );\n\t};\n\t\n\t\n\tvar __setColumnVis = function ( settings, column, vis ) {\n\t\tvar\n\t\t\tcols = settings.aoColumns,\n\t\t\tcol  = cols[ column ],\n\t\t\tdata = settings.aoData,\n\t\t\trow, cells, i, ien, tr;\n\t\n\t\t// Get\n\t\tif ( vis === undefined ) {\n\t\t\treturn col.bVisible;\n\t\t}\n\t\n\t\t// Set\n\t\t// No change\n\t\tif ( col.bVisible === vis ) {\n\t\t\treturn;\n\t\t}\n\t\n\t\tif ( vis ) {\n\t\t\t// Insert column\n\t\t\t// Need to decide if we should use appendChild or insertBefore\n\t\t\tvar insertBefore = $.inArray( true, _pluck(cols, 'bVisible'), column+1 );\n\t\n\t\t\tfor ( i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t\t\ttr = data[i].nTr;\n\t\t\t\tcells = data[i].anCells;\n\t\n\t\t\t\tif ( tr ) {\n\t\t\t\t\t// insertBefore can act like appendChild if 2nd arg is null\n\t\t\t\t\ttr.insertBefore( cells[ column ], cells[ insertBefore ] || null );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t// Remove column\n\t\t\t$( _pluck( settings.aoData, 'anCells', column ) ).detach();\n\t\t}\n\t\n\t\t// Common actions\n\t\tcol.bVisible = vis;\n\t};\n\t\n\t\n\t_api_register( 'columns()', function ( selector, opts ) {\n\t\t// argument shifting\n\t\tif ( selector === undefined ) {\n\t\t\tselector = '';\n\t\t}\n\t\telse if ( $.isPlainObject( selector ) ) {\n\t\t\topts = selector;\n\t\t\tselector = '';\n\t\t}\n\t\n\t\topts = _selector_opts( opts );\n\t\n\t\tvar inst = this.iterator( 'table', function ( settings ) {\n\t\t\treturn __column_selector( settings, selector, opts );\n\t\t}, 1 );\n\t\n\t\t// Want argument shifting here and in _row_selector?\n\t\tinst.selector.cols = selector;\n\t\tinst.selector.opts = opts;\n\t\n\t\treturn inst;\n\t} );\n\t\n\t_api_registerPlural( 'columns().header()', 'column().header()', function ( selector, opts ) {\n\t\treturn this.iterator( 'column', function ( settings, column ) {\n\t\t\treturn settings.aoColumns[column].nTh;\n\t\t}, 1 );\n\t} );\n\t\n\t_api_registerPlural( 'columns().footer()', 'column().footer()', function ( selector, opts ) {\n\t\treturn this.iterator( 'column', function ( settings, column ) {\n\t\t\treturn settings.aoColumns[column].nTf;\n\t\t}, 1 );\n\t} );\n\t\n\t_api_registerPlural( 'columns().data()', 'column().data()', function () {\n\t\treturn this.iterator( 'column-rows', __columnData, 1 );\n\t} );\n\t\n\t_api_registerPlural( 'columns().dataSrc()', 'column().dataSrc()', function () {\n\t\treturn this.iterator( 'column', function ( settings, column ) {\n\t\t\treturn settings.aoColumns[column].mData;\n\t\t}, 1 );\n\t} );\n\t\n\t_api_registerPlural( 'columns().cache()', 'column().cache()', function ( type ) {\n\t\treturn this.iterator( 'column-rows', function ( settings, column, i, j, rows ) {\n\t\t\treturn _pluck_order( settings.aoData, rows,\n\t\t\t\ttype === 'search' ? '_aFilterData' : '_aSortData', column\n\t\t\t);\n\t\t}, 1 );\n\t} );\n\t\n\t_api_registerPlural( 'columns().nodes()', 'column().nodes()', function () {\n\t\treturn this.iterator( 'column-rows', function ( settings, column, i, j, rows ) {\n\t\t\treturn _pluck_order( settings.aoData, rows, 'anCells', column ) ;\n\t\t}, 1 );\n\t} );\n\t\n\t_api_registerPlural( 'columns().visible()', 'column().visible()', function ( vis, calc ) {\n\t\tvar that = this;\n\t\tvar ret = this.iterator( 'column', function ( settings, column ) {\n\t\t\tif ( vis === undefined ) {\n\t\t\t\treturn settings.aoColumns[ column ].bVisible;\n\t\t\t} // else\n\t\t\t__setColumnVis( settings, column, vis );\n\t\t} );\n\t\n\t\t// Group the column visibility changes\n\t\tif ( vis !== undefined ) {\n\t\t\tthis.iterator( 'table', function ( settings ) {\n\t\t\t\t// Redraw the header after changes\n\t\t\t\t_fnDrawHead( settings, settings.aoHeader );\n\t\t\t\t_fnDrawHead( settings, settings.aoFooter );\n\t\t\n\t\t\t\t// Update colspan for no records display. Child rows and extensions will use their own\n\t\t\t\t// listeners to do this - only need to update the empty table item here\n\t\t\t\tif ( ! settings.aiDisplay.length ) {\n\t\t\t\t\t$(settings.nTBody).find('td[colspan]').attr('colspan', _fnVisbleColumns(settings));\n\t\t\t\t}\n\t\t\n\t\t\t\t_fnSaveState( settings );\n\t\n\t\t\t\t// Second loop once the first is done for events\n\t\t\t\tthat.iterator( 'column', function ( settings, column ) {\n\t\t\t\t\t_fnCallbackFire( settings, null, 'column-visibility', [settings, column, vis, calc] );\n\t\t\t\t} );\n\t\n\t\t\t\tif ( calc === undefined || calc ) {\n\t\t\t\t\tthat.columns.adjust();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\n\t\treturn ret;\n\t} );\n\t\n\t_api_registerPlural( 'columns().indexes()', 'column().index()', function ( type ) {\n\t\treturn this.iterator( 'column', function ( settings, column ) {\n\t\t\treturn type === 'visible' ?\n\t\t\t\t_fnColumnIndexToVisible( settings, column ) :\n\t\t\t\tcolumn;\n\t\t}, 1 );\n\t} );\n\t\n\t_api_register( 'columns.adjust()', function () {\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\t_fnAdjustColumnSizing( settings );\n\t\t}, 1 );\n\t} );\n\t\n\t_api_register( 'column.index()', function ( type, idx ) {\n\t\tif ( this.context.length !== 0 ) {\n\t\t\tvar ctx = this.context[0];\n\t\n\t\t\tif ( type === 'fromVisible' || type === 'toData' ) {\n\t\t\t\treturn _fnVisibleToColumnIndex( ctx, idx );\n\t\t\t}\n\t\t\telse if ( type === 'fromData' || type === 'toVisible' ) {\n\t\t\t\treturn _fnColumnIndexToVisible( ctx, idx );\n\t\t\t}\n\t\t}\n\t} );\n\t\n\t_api_register( 'column()', function ( selector, opts ) {\n\t\treturn _selector_first( this.columns( selector, opts ) );\n\t} );\n\t\n\t\n\t\n\tvar __cell_selector = function ( settings, selector, opts )\n\t{\n\t\tvar data = settings.aoData;\n\t\tvar rows = _selector_row_indexes( settings, opts );\n\t\tvar cells = _removeEmpty( _pluck_order( data, rows, 'anCells' ) );\n\t\tvar allCells = $( [].concat.apply([], cells) );\n\t\tvar row;\n\t\tvar columns = settings.aoColumns.length;\n\t\tvar a, i, ien, j, o, host;\n\t\n\t\tvar run = function ( s ) {\n\t\t\tvar fnSelector = typeof s === 'function';\n\t\n\t\t\tif ( s === null || s === undefined || fnSelector ) {\n\t\t\t\t// All cells and function selectors\n\t\t\t\ta = [];\n\t\n\t\t\t\tfor ( i=0, ien=rows.length ; i<ien ; i++ ) {\n\t\t\t\t\trow = rows[i];\n\t\n\t\t\t\t\tfor ( j=0 ; j<columns ; j++ ) {\n\t\t\t\t\t\to = {\n\t\t\t\t\t\t\trow: row,\n\t\t\t\t\t\t\tcolumn: j\n\t\t\t\t\t\t};\n\t\n\t\t\t\t\t\tif ( fnSelector ) {\n\t\t\t\t\t\t\t// Selector - function\n\t\t\t\t\t\t\thost = data[ row ];\n\t\n\t\t\t\t\t\t\tif ( s( o, _fnGetCellData(settings, row, j), host.anCells ? host.anCells[j] : null ) ) {\n\t\t\t\t\t\t\t\ta.push( o );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t// Selector - all\n\t\t\t\t\t\t\ta.push( o );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\treturn a;\n\t\t\t}\n\t\t\t\n\t\t\t// Selector - index\n\t\t\tif ( $.isPlainObject( s ) ) {\n\t\t\t\t// Valid cell index and its in the array of selectable rows\n\t\t\t\treturn s.column !== undefined && s.row !== undefined && $.inArray( s.row, rows ) !== -1 ?\n\t\t\t\t\t[s] :\n\t\t\t\t\t[];\n\t\t\t}\n\t\n\t\t\t// Selector - jQuery filtered cells\n\t\t\tvar jqResult = allCells\n\t\t\t\t.filter( s )\n\t\t\t\t.map( function (i, el) {\n\t\t\t\t\treturn { // use a new object, in case someone changes the values\n\t\t\t\t\t\trow:    el._DT_CellIndex.row,\n\t\t\t\t\t\tcolumn: el._DT_CellIndex.column\n\t \t\t\t\t};\n\t\t\t\t} )\n\t\t\t\t.toArray();\n\t\n\t\t\tif ( jqResult.length || ! s.nodeName ) {\n\t\t\t\treturn jqResult;\n\t\t\t}\n\t\n\t\t\t// Otherwise the selector is a node, and there is one last option - the\n\t\t\t// element might be a child of an element which has dt-row and dt-column\n\t\t\t// data attributes\n\t\t\thost = $(s).closest('*[data-dt-row]');\n\t\t\treturn host.length ?\n\t\t\t\t[ {\n\t\t\t\t\trow: host.data('dt-row'),\n\t\t\t\t\tcolumn: host.data('dt-column')\n\t\t\t\t} ] :\n\t\t\t\t[];\n\t\t};\n\t\n\t\treturn _selector_run( 'cell', selector, run, settings, opts );\n\t};\n\t\n\t\n\t\n\t\n\t_api_register( 'cells()', function ( rowSelector, columnSelector, opts ) {\n\t\t// Argument shifting\n\t\tif ( $.isPlainObject( rowSelector ) ) {\n\t\t\t// Indexes\n\t\t\tif ( rowSelector.row === undefined ) {\n\t\t\t\t// Selector options in first parameter\n\t\t\t\topts = rowSelector;\n\t\t\t\trowSelector = null;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Cell index objects in first parameter\n\t\t\t\topts = columnSelector;\n\t\t\t\tcolumnSelector = null;\n\t\t\t}\n\t\t}\n\t\tif ( $.isPlainObject( columnSelector ) ) {\n\t\t\topts = columnSelector;\n\t\t\tcolumnSelector = null;\n\t\t}\n\t\n\t\t// Cell selector\n\t\tif ( columnSelector === null || columnSelector === undefined ) {\n\t\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\t\treturn __cell_selector( settings, rowSelector, _selector_opts( opts ) );\n\t\t\t} );\n\t\t}\n\t\n\t\t// The default built in options need to apply to row and columns\n\t\tvar internalOpts = opts ? {\n\t\t\tpage: opts.page,\n\t\t\torder: opts.order,\n\t\t\tsearch: opts.search\n\t\t} : {};\n\t\n\t\t// Row + column selector\n\t\tvar columns = this.columns( columnSelector, internalOpts );\n\t\tvar rows = this.rows( rowSelector, internalOpts );\n\t\tvar i, ien, j, jen;\n\t\n\t\tvar cellsNoOpts = this.iterator( 'table', function ( settings, idx ) {\n\t\t\tvar a = [];\n\t\n\t\t\tfor ( i=0, ien=rows[idx].length ; i<ien ; i++ ) {\n\t\t\t\tfor ( j=0, jen=columns[idx].length ; j<jen ; j++ ) {\n\t\t\t\t\ta.push( {\n\t\t\t\t\t\trow:    rows[idx][i],\n\t\t\t\t\t\tcolumn: columns[idx][j]\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn a;\n\t\t}, 1 );\n\t\n\t\t// There is currently only one extension which uses a cell selector extension\n\t\t// It is a _major_ performance drag to run this if it isn't needed, so this is\n\t\t// an extension specific check at the moment\n\t\tvar cells = opts && opts.selected ?\n\t\t\tthis.cells( cellsNoOpts, opts ) :\n\t\t\tcellsNoOpts;\n\t\n\t\t$.extend( cells.selector, {\n\t\t\tcols: columnSelector,\n\t\t\trows: rowSelector,\n\t\t\topts: opts\n\t\t} );\n\t\n\t\treturn cells;\n\t} );\n\t\n\t\n\t_api_registerPlural( 'cells().nodes()', 'cell().node()', function () {\n\t\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\t\tvar data = settings.aoData[ row ];\n\t\n\t\t\treturn data && data.anCells ?\n\t\t\t\tdata.anCells[ column ] :\n\t\t\t\tundefined;\n\t\t}, 1 );\n\t} );\n\t\n\t\n\t_api_register( 'cells().data()', function () {\n\t\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\t\treturn _fnGetCellData( settings, row, column );\n\t\t}, 1 );\n\t} );\n\t\n\t\n\t_api_registerPlural( 'cells().cache()', 'cell().cache()', function ( type ) {\n\t\ttype = type === 'search' ? '_aFilterData' : '_aSortData';\n\t\n\t\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\t\treturn settings.aoData[ row ][ type ][ column ];\n\t\t}, 1 );\n\t} );\n\t\n\t\n\t_api_registerPlural( 'cells().render()', 'cell().render()', function ( type ) {\n\t\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\t\treturn _fnGetCellData( settings, row, column, type );\n\t\t}, 1 );\n\t} );\n\t\n\t\n\t_api_registerPlural( 'cells().indexes()', 'cell().index()', function () {\n\t\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\t\treturn {\n\t\t\t\trow: row,\n\t\t\t\tcolumn: column,\n\t\t\t\tcolumnVisible: _fnColumnIndexToVisible( settings, column )\n\t\t\t};\n\t\t}, 1 );\n\t} );\n\t\n\t\n\t_api_registerPlural( 'cells().invalidate()', 'cell().invalidate()', function ( src ) {\n\t\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\t\t_fnInvalidate( settings, row, src, column );\n\t\t} );\n\t} );\n\t\n\t\n\t\n\t_api_register( 'cell()', function ( rowSelector, columnSelector, opts ) {\n\t\treturn _selector_first( this.cells( rowSelector, columnSelector, opts ) );\n\t} );\n\t\n\t\n\t_api_register( 'cell().data()', function ( data ) {\n\t\tvar ctx = this.context;\n\t\tvar cell = this[0];\n\t\n\t\tif ( data === undefined ) {\n\t\t\t// Get\n\t\t\treturn ctx.length && cell.length ?\n\t\t\t\t_fnGetCellData( ctx[0], cell[0].row, cell[0].column ) :\n\t\t\t\tundefined;\n\t\t}\n\t\n\t\t// Set\n\t\t_fnSetCellData( ctx[0], cell[0].row, cell[0].column, data );\n\t\t_fnInvalidate( ctx[0], cell[0].row, 'data', cell[0].column );\n\t\n\t\treturn this;\n\t} );\n\t\n\t\n\t\n\t/**\n\t * Get current ordering (sorting) that has been applied to the table.\n\t *\n\t * @returns {array} 2D array containing the sorting information for the first\n\t *   table in the current context. Each element in the parent array represents\n\t *   a column being sorted upon (i.e. multi-sorting with two columns would have\n\t *   2 inner arrays). The inner arrays may have 2 or 3 elements. The first is\n\t *   the column index that the sorting condition applies to, the second is the\n\t *   direction of the sort (`desc` or `asc`) and, optionally, the third is the\n\t *   index of the sorting order from the `column.sorting` initialisation array.\n\t *//**\n\t * Set the ordering for the table.\n\t *\n\t * @param {integer} order Column index to sort upon.\n\t * @param {string} direction Direction of the sort to be applied (`asc` or `desc`)\n\t * @returns {DataTables.Api} this\n\t *//**\n\t * Set the ordering for the table.\n\t *\n\t * @param {array} order 1D array of sorting information to be applied.\n\t * @param {array} [...] Optional additional sorting conditions\n\t * @returns {DataTables.Api} this\n\t *//**\n\t * Set the ordering for the table.\n\t *\n\t * @param {array} order 2D array of sorting information to be applied.\n\t * @returns {DataTables.Api} this\n\t */\n\t_api_register( 'order()', function ( order, dir ) {\n\t\tvar ctx = this.context;\n\t\n\t\tif ( order === undefined ) {\n\t\t\t// get\n\t\t\treturn ctx.length !== 0 ?\n\t\t\t\tctx[0].aaSorting :\n\t\t\t\tundefined;\n\t\t}\n\t\n\t\t// set\n\t\tif ( typeof order === 'number' ) {\n\t\t\t// Simple column / direction passed in\n\t\t\torder = [ [ order, dir ] ];\n\t\t}\n\t\telse if ( order.length && ! $.isArray( order[0] ) ) {\n\t\t\t// Arguments passed in (list of 1D arrays)\n\t\t\torder = Array.prototype.slice.call( arguments );\n\t\t}\n\t\t// otherwise a 2D array was passed in\n\t\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\tsettings.aaSorting = order.slice();\n\t\t} );\n\t} );\n\t\n\t\n\t/**\n\t * Attach a sort listener to an element for a given column\n\t *\n\t * @param {node|jQuery|string} node Identifier for the element(s) to attach the\n\t *   listener to. This can take the form of a single DOM node, a jQuery\n\t *   collection of nodes or a jQuery selector which will identify the node(s).\n\t * @param {integer} column the column that a click on this node will sort on\n\t * @param {function} [callback] callback function when sort is run\n\t * @returns {DataTables.Api} this\n\t */\n\t_api_register( 'order.listener()', function ( node, column, callback ) {\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\t_fnSortAttachListener( settings, node, column, callback );\n\t\t} );\n\t} );\n\t\n\t\n\t_api_register( 'order.fixed()', function ( set ) {\n\t\tif ( ! set ) {\n\t\t\tvar ctx = this.context;\n\t\t\tvar fixed = ctx.length ?\n\t\t\t\tctx[0].aaSortingFixed :\n\t\t\t\tundefined;\n\t\n\t\t\treturn $.isArray( fixed ) ?\n\t\t\t\t{ pre: fixed } :\n\t\t\t\tfixed;\n\t\t}\n\t\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\tsettings.aaSortingFixed = $.extend( true, {}, set );\n\t\t} );\n\t} );\n\t\n\t\n\t// Order by the selected column(s)\n\t_api_register( [\n\t\t'columns().order()',\n\t\t'column().order()'\n\t], function ( dir ) {\n\t\tvar that = this;\n\t\n\t\treturn this.iterator( 'table', function ( settings, i ) {\n\t\t\tvar sort = [];\n\t\n\t\t\t$.each( that[i], function (j, col) {\n\t\t\t\tsort.push( [ col, dir ] );\n\t\t\t} );\n\t\n\t\t\tsettings.aaSorting = sort;\n\t\t} );\n\t} );\n\t\n\t\n\t\n\t_api_register( 'search()', function ( input, regex, smart, caseInsen ) {\n\t\tvar ctx = this.context;\n\t\n\t\tif ( input === undefined ) {\n\t\t\t// get\n\t\t\treturn ctx.length !== 0 ?\n\t\t\t\tctx[0].oPreviousSearch.sSearch :\n\t\t\t\tundefined;\n\t\t}\n\t\n\t\t// set\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\tif ( ! settings.oFeatures.bFilter ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t_fnFilterComplete( settings, $.extend( {}, settings.oPreviousSearch, {\n\t\t\t\t\"sSearch\": input+\"\",\n\t\t\t\t\"bRegex\":  regex === null ? false : regex,\n\t\t\t\t\"bSmart\":  smart === null ? true  : smart,\n\t\t\t\t\"bCaseInsensitive\": caseInsen === null ? true : caseInsen\n\t\t\t} ), 1 );\n\t\t} );\n\t} );\n\t\n\t\n\t_api_registerPlural(\n\t\t'columns().search()',\n\t\t'column().search()',\n\t\tfunction ( input, regex, smart, caseInsen ) {\n\t\t\treturn this.iterator( 'column', function ( settings, column ) {\n\t\t\t\tvar preSearch = settings.aoPreSearchCols;\n\t\n\t\t\t\tif ( input === undefined ) {\n\t\t\t\t\t// get\n\t\t\t\t\treturn preSearch[ column ].sSearch;\n\t\t\t\t}\n\t\n\t\t\t\t// set\n\t\t\t\tif ( ! settings.oFeatures.bFilter ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\t$.extend( preSearch[ column ], {\n\t\t\t\t\t\"sSearch\": input+\"\",\n\t\t\t\t\t\"bRegex\":  regex === null ? false : regex,\n\t\t\t\t\t\"bSmart\":  smart === null ? true  : smart,\n\t\t\t\t\t\"bCaseInsensitive\": caseInsen === null ? true : caseInsen\n\t\t\t\t} );\n\t\n\t\t\t\t_fnFilterComplete( settings, settings.oPreviousSearch, 1 );\n\t\t\t} );\n\t\t}\n\t);\n\t\n\t/*\n\t * State API methods\n\t */\n\t\n\t_api_register( 'state()', function () {\n\t\treturn this.context.length ?\n\t\t\tthis.context[0].oSavedState :\n\t\t\tnull;\n\t} );\n\t\n\t\n\t_api_register( 'state.clear()', function () {\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\t// Save an empty object\n\t\t\tsettings.fnStateSaveCallback.call( settings.oInstance, settings, {} );\n\t\t} );\n\t} );\n\t\n\t\n\t_api_register( 'state.loaded()', function () {\n\t\treturn this.context.length ?\n\t\t\tthis.context[0].oLoadedState :\n\t\t\tnull;\n\t} );\n\t\n\t\n\t_api_register( 'state.save()', function () {\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\t_fnSaveState( settings );\n\t\t} );\n\t} );\n\t\n\t\n\t\n\t/**\n\t * Provide a common method for plug-ins to check the version of DataTables being\n\t * used, in order to ensure compatibility.\n\t *\n\t *  @param {string} version Version string to check for, in the format \"X.Y.Z\".\n\t *    Note that the formats \"X\" and \"X.Y\" are also acceptable.\n\t *  @returns {boolean} true if this version of DataTables is greater or equal to\n\t *    the required version, or false if this version of DataTales is not\n\t *    suitable\n\t *  @static\n\t *  @dtopt API-Static\n\t *\n\t *  @example\n\t *    alert( $.fn.dataTable.versionCheck( '1.9.0' ) );\n\t */\n\tDataTable.versionCheck = DataTable.fnVersionCheck = function( version )\n\t{\n\t\tvar aThis = DataTable.version.split('.');\n\t\tvar aThat = version.split('.');\n\t\tvar iThis, iThat;\n\t\n\t\tfor ( var i=0, iLen=aThat.length ; i<iLen ; i++ ) {\n\t\t\tiThis = parseInt( aThis[i], 10 ) || 0;\n\t\t\tiThat = parseInt( aThat[i], 10 ) || 0;\n\t\n\t\t\t// Parts are the same, keep comparing\n\t\t\tif (iThis === iThat) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\n\t\t\t// Parts are different, return immediately\n\t\t\treturn iThis > iThat;\n\t\t}\n\t\n\t\treturn true;\n\t};\n\t\n\t\n\t/**\n\t * Check if a `<table>` node is a DataTable table already or not.\n\t *\n\t *  @param {node|jquery|string} table Table node, jQuery object or jQuery\n\t *      selector for the table to test. Note that if more than more than one\n\t *      table is passed on, only the first will be checked\n\t *  @returns {boolean} true the table given is a DataTable, or false otherwise\n\t *  @static\n\t *  @dtopt API-Static\n\t *\n\t *  @example\n\t *    if ( ! $.fn.DataTable.isDataTable( '#example' ) ) {\n\t *      $('#example').dataTable();\n\t *    }\n\t */\n\tDataTable.isDataTable = DataTable.fnIsDataTable = function ( table )\n\t{\n\t\tvar t = $(table).get(0);\n\t\tvar is = false;\n\t\n\t\tif ( table instanceof DataTable.Api ) {\n\t\t\treturn true;\n\t\t}\n\t\n\t\t$.each( DataTable.settings, function (i, o) {\n\t\t\tvar head = o.nScrollHead ? $('table', o.nScrollHead)[0] : null;\n\t\t\tvar foot = o.nScrollFoot ? $('table', o.nScrollFoot)[0] : null;\n\t\n\t\t\tif ( o.nTable === t || head === t || foot === t ) {\n\t\t\t\tis = true;\n\t\t\t}\n\t\t} );\n\t\n\t\treturn is;\n\t};\n\t\n\t\n\t/**\n\t * Get all DataTable tables that have been initialised - optionally you can\n\t * select to get only currently visible tables.\n\t *\n\t *  @param {boolean} [visible=false] Flag to indicate if you want all (default)\n\t *    or visible tables only.\n\t *  @returns {array} Array of `table` nodes (not DataTable instances) which are\n\t *    DataTables\n\t *  @static\n\t *  @dtopt API-Static\n\t *\n\t *  @example\n\t *    $.each( $.fn.dataTable.tables(true), function () {\n\t *      $(table).DataTable().columns.adjust();\n\t *    } );\n\t */\n\tDataTable.tables = DataTable.fnTables = function ( visible )\n\t{\n\t\tvar api = false;\n\t\n\t\tif ( $.isPlainObject( visible ) ) {\n\t\t\tapi = visible.api;\n\t\t\tvisible = visible.visible;\n\t\t}\n\t\n\t\tvar a = $.map( DataTable.settings, function (o) {\n\t\t\tif ( !visible || (visible && $(o.nTable).is(':visible')) ) {\n\t\t\t\treturn o.nTable;\n\t\t\t}\n\t\t} );\n\t\n\t\treturn api ?\n\t\t\tnew _Api( a ) :\n\t\t\ta;\n\t};\n\t\n\t\n\t/**\n\t * Convert from camel case parameters to Hungarian notation. This is made public\n\t * for the extensions to provide the same ability as DataTables core to accept\n\t * either the 1.9 style Hungarian notation, or the 1.10+ style camelCase\n\t * parameters.\n\t *\n\t *  @param {object} src The model object which holds all parameters that can be\n\t *    mapped.\n\t *  @param {object} user The object to convert from camel case to Hungarian.\n\t *  @param {boolean} force When set to `true`, properties which already have a\n\t *    Hungarian value in the `user` object will be overwritten. Otherwise they\n\t *    won't be.\n\t */\n\tDataTable.camelToHungarian = _fnCamelToHungarian;\n\t\n\t\n\t\n\t/**\n\t *\n\t */\n\t_api_register( '$()', function ( selector, opts ) {\n\t\tvar\n\t\t\trows   = this.rows( opts ).nodes(), // Get all rows\n\t\t\tjqRows = $(rows);\n\t\n\t\treturn $( [].concat(\n\t\t\tjqRows.filter( selector ).toArray(),\n\t\t\tjqRows.find( selector ).toArray()\n\t\t) );\n\t} );\n\t\n\t\n\t// jQuery functions to operate on the tables\n\t$.each( [ 'on', 'one', 'off' ], function (i, key) {\n\t\t_api_register( key+'()', function ( /* event, handler */ ) {\n\t\t\tvar args = Array.prototype.slice.call(arguments);\n\t\n\t\t\t// Add the `dt` namespace automatically if it isn't already present\n\t\t\targs[0] = $.map( args[0].split( /\\s/ ), function ( e ) {\n\t\t\t\treturn ! e.match(/\\.dt\\b/) ?\n\t\t\t\t\te+'.dt' :\n\t\t\t\t\te;\n\t\t\t\t} ).join( ' ' );\n\t\n\t\t\tvar inst = $( this.tables().nodes() );\n\t\t\tinst[key].apply( inst, args );\n\t\t\treturn this;\n\t\t} );\n\t} );\n\t\n\t\n\t_api_register( 'clear()', function () {\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\t_fnClearTable( settings );\n\t\t} );\n\t} );\n\t\n\t\n\t_api_register( 'settings()', function () {\n\t\treturn new _Api( this.context, this.context );\n\t} );\n\t\n\t\n\t_api_register( 'init()', function () {\n\t\tvar ctx = this.context;\n\t\treturn ctx.length ? ctx[0].oInit : null;\n\t} );\n\t\n\t\n\t_api_register( 'data()', function () {\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\treturn _pluck( settings.aoData, '_aData' );\n\t\t} ).flatten();\n\t} );\n\t\n\t\n\t_api_register( 'destroy()', function ( remove ) {\n\t\tremove = remove || false;\n\t\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\tvar orig      = settings.nTableWrapper.parentNode;\n\t\t\tvar classes   = settings.oClasses;\n\t\t\tvar table     = settings.nTable;\n\t\t\tvar tbody     = settings.nTBody;\n\t\t\tvar thead     = settings.nTHead;\n\t\t\tvar tfoot     = settings.nTFoot;\n\t\t\tvar jqTable   = $(table);\n\t\t\tvar jqTbody   = $(tbody);\n\t\t\tvar jqWrapper = $(settings.nTableWrapper);\n\t\t\tvar rows      = $.map( settings.aoData, function (r) { return r.nTr; } );\n\t\t\tvar i, ien;\n\t\n\t\t\t// Flag to note that the table is currently being destroyed - no action\n\t\t\t// should be taken\n\t\t\tsettings.bDestroying = true;\n\t\n\t\t\t// Fire off the destroy callbacks for plug-ins etc\n\t\t\t_fnCallbackFire( settings, \"aoDestroyCallback\", \"destroy\", [settings] );\n\t\n\t\t\t// If not being removed from the document, make all columns visible\n\t\t\tif ( ! remove ) {\n\t\t\t\tnew _Api( settings ).columns().visible( true );\n\t\t\t}\n\t\n\t\t\t// Blitz all `DT` namespaced events (these are internal events, the\n\t\t\t// lowercase, `dt` events are user subscribed and they are responsible\n\t\t\t// for removing them\n\t\t\tjqWrapper.off('.DT').find(':not(tbody *)').off('.DT');\n\t\t\t$(window).off('.DT-'+settings.sInstance);\n\t\n\t\t\t// When scrolling we had to break the table up - restore it\n\t\t\tif ( table != thead.parentNode ) {\n\t\t\t\tjqTable.children('thead').detach();\n\t\t\t\tjqTable.append( thead );\n\t\t\t}\n\t\n\t\t\tif ( tfoot && table != tfoot.parentNode ) {\n\t\t\t\tjqTable.children('tfoot').detach();\n\t\t\t\tjqTable.append( tfoot );\n\t\t\t}\n\t\n\t\t\tsettings.aaSorting = [];\n\t\t\tsettings.aaSortingFixed = [];\n\t\t\t_fnSortingClasses( settings );\n\t\n\t\t\t$( rows ).removeClass( settings.asStripeClasses.join(' ') );\n\t\n\t\t\t$('th, td', thead).removeClass( classes.sSortable+' '+\n\t\t\t\tclasses.sSortableAsc+' '+classes.sSortableDesc+' '+classes.sSortableNone\n\t\t\t);\n\t\n\t\t\t// Add the TR elements back into the table in their original order\n\t\t\tjqTbody.children().detach();\n\t\t\tjqTbody.append( rows );\n\t\n\t\t\t// Remove the DataTables generated nodes, events and classes\n\t\t\tvar removedMethod = remove ? 'remove' : 'detach';\n\t\t\tjqTable[ removedMethod ]();\n\t\t\tjqWrapper[ removedMethod ]();\n\t\n\t\t\t// If we need to reattach the table to the document\n\t\t\tif ( ! remove && orig ) {\n\t\t\t\t// insertBefore acts like appendChild if !arg[1]\n\t\t\t\torig.insertBefore( table, settings.nTableReinsertBefore );\n\t\n\t\t\t\t// Restore the width of the original table - was read from the style property,\n\t\t\t\t// so we can restore directly to that\n\t\t\t\tjqTable\n\t\t\t\t\t.css( 'width', settings.sDestroyWidth )\n\t\t\t\t\t.removeClass( classes.sTable );\n\t\n\t\t\t\t// If the were originally stripe classes - then we add them back here.\n\t\t\t\t// Note this is not fool proof (for example if not all rows had stripe\n\t\t\t\t// classes - but it's a good effort without getting carried away\n\t\t\t\tien = settings.asDestroyStripes.length;\n\t\n\t\t\t\tif ( ien ) {\n\t\t\t\t\tjqTbody.children().each( function (i) {\n\t\t\t\t\t\t$(this).addClass( settings.asDestroyStripes[i % ien] );\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t/* Remove the settings object from the settings array */\n\t\t\tvar idx = $.inArray( settings, DataTable.settings );\n\t\t\tif ( idx !== -1 ) {\n\t\t\t\tDataTable.settings.splice( idx, 1 );\n\t\t\t}\n\t\t} );\n\t} );\n\t\n\t\n\t// Add the `every()` method for rows, columns and cells in a compact form\n\t$.each( [ 'column', 'row', 'cell' ], function ( i, type ) {\n\t\t_api_register( type+'s().every()', function ( fn ) {\n\t\t\tvar opts = this.selector.opts;\n\t\t\tvar api = this;\n\t\n\t\t\treturn this.iterator( type, function ( settings, arg1, arg2, arg3, arg4 ) {\n\t\t\t\t// Rows and columns:\n\t\t\t\t//  arg1 - index\n\t\t\t\t//  arg2 - table counter\n\t\t\t\t//  arg3 - loop counter\n\t\t\t\t//  arg4 - undefined\n\t\t\t\t// Cells:\n\t\t\t\t//  arg1 - row index\n\t\t\t\t//  arg2 - column index\n\t\t\t\t//  arg3 - table counter\n\t\t\t\t//  arg4 - loop counter\n\t\t\t\tfn.call(\n\t\t\t\t\tapi[ type ](\n\t\t\t\t\t\targ1,\n\t\t\t\t\t\ttype==='cell' ? arg2 : opts,\n\t\t\t\t\t\ttype==='cell' ? opts : undefined\n\t\t\t\t\t),\n\t\t\t\t\targ1, arg2, arg3, arg4\n\t\t\t\t);\n\t\t\t} );\n\t\t} );\n\t} );\n\t\n\t\n\t// i18n method for extensions to be able to use the language object from the\n\t// DataTable\n\t_api_register( 'i18n()', function ( token, def, plural ) {\n\t\tvar ctx = this.context[0];\n\t\tvar resolved = _fnGetObjectDataFn( token )( ctx.oLanguage );\n\t\n\t\tif ( resolved === undefined ) {\n\t\t\tresolved = def;\n\t\t}\n\t\n\t\tif ( plural !== undefined && $.isPlainObject( resolved ) ) {\n\t\t\tresolved = resolved[ plural ] !== undefined ?\n\t\t\t\tresolved[ plural ] :\n\t\t\t\tresolved._;\n\t\t}\n\t\n\t\treturn resolved.replace( '%d', plural ); // nb: plural might be undefined,\n\t} );\n\t/**\n\t * Version string for plug-ins to check compatibility. Allowed format is\n\t * `a.b.c-d` where: a:int, b:int, c:int, d:string(dev|beta|alpha). `d` is used\n\t * only for non-release builds. See http://semver.org/ for more information.\n\t *  @member\n\t *  @type string\n\t *  @default Version number\n\t */\n\tDataTable.version = \"1.10.20\";\n\n\t/**\n\t * Private data store, containing all of the settings objects that are\n\t * created for the tables on a given page.\n\t *\n\t * Note that the `DataTable.settings` object is aliased to\n\t * `jQuery.fn.dataTableExt` through which it may be accessed and\n\t * manipulated, or `jQuery.fn.dataTable.settings`.\n\t *  @member\n\t *  @type array\n\t *  @default []\n\t *  @private\n\t */\n\tDataTable.settings = [];\n\n\t/**\n\t * Object models container, for the various models that DataTables has\n\t * available to it. These models define the objects that are used to hold\n\t * the active state and configuration of the table.\n\t *  @namespace\n\t */\n\tDataTable.models = {};\n\t\n\t\n\t\n\t/**\n\t * Template object for the way in which DataTables holds information about\n\t * search information for the global filter and individual column filters.\n\t *  @namespace\n\t */\n\tDataTable.models.oSearch = {\n\t\t/**\n\t\t * Flag to indicate if the filtering should be case insensitive or not\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t */\n\t\t\"bCaseInsensitive\": true,\n\t\n\t\t/**\n\t\t * Applied search term\n\t\t *  @type string\n\t\t *  @default <i>Empty string</i>\n\t\t */\n\t\t\"sSearch\": \"\",\n\t\n\t\t/**\n\t\t * Flag to indicate if the search term should be interpreted as a\n\t\t * regular expression (true) or not (false) and therefore and special\n\t\t * regex characters escaped.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t */\n\t\t\"bRegex\": false,\n\t\n\t\t/**\n\t\t * Flag to indicate if DataTables is to use its smart filtering or not.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t */\n\t\t\"bSmart\": true\n\t};\n\t\n\t\n\t\n\t\n\t/**\n\t * Template object for the way in which DataTables holds information about\n\t * each individual row. This is the object format used for the settings\n\t * aoData array.\n\t *  @namespace\n\t */\n\tDataTable.models.oRow = {\n\t\t/**\n\t\t * TR element for the row\n\t\t *  @type node\n\t\t *  @default null\n\t\t */\n\t\t\"nTr\": null,\n\t\n\t\t/**\n\t\t * Array of TD elements for each row. This is null until the row has been\n\t\t * created.\n\t\t *  @type array nodes\n\t\t *  @default []\n\t\t */\n\t\t\"anCells\": null,\n\t\n\t\t/**\n\t\t * Data object from the original data source for the row. This is either\n\t\t * an array if using the traditional form of DataTables, or an object if\n\t\t * using mData options. The exact type will depend on the passed in\n\t\t * data from the data source, or will be an array if using DOM a data\n\t\t * source.\n\t\t *  @type array|object\n\t\t *  @default []\n\t\t */\n\t\t\"_aData\": [],\n\t\n\t\t/**\n\t\t * Sorting data cache - this array is ostensibly the same length as the\n\t\t * number of columns (although each index is generated only as it is\n\t\t * needed), and holds the data that is used for sorting each column in the\n\t\t * row. We do this cache generation at the start of the sort in order that\n\t\t * the formatting of the sort data need be done only once for each cell\n\t\t * per sort. This array should not be read from or written to by anything\n\t\t * other than the master sorting methods.\n\t\t *  @type array\n\t\t *  @default null\n\t\t *  @private\n\t\t */\n\t\t\"_aSortData\": null,\n\t\n\t\t/**\n\t\t * Per cell filtering data cache. As per the sort data cache, used to\n\t\t * increase the performance of the filtering in DataTables\n\t\t *  @type array\n\t\t *  @default null\n\t\t *  @private\n\t\t */\n\t\t\"_aFilterData\": null,\n\t\n\t\t/**\n\t\t * Filtering data cache. This is the same as the cell filtering cache, but\n\t\t * in this case a string rather than an array. This is easily computed with\n\t\t * a join on `_aFilterData`, but is provided as a cache so the join isn't\n\t\t * needed on every search (memory traded for performance)\n\t\t *  @type array\n\t\t *  @default null\n\t\t *  @private\n\t\t */\n\t\t\"_sFilterRow\": null,\n\t\n\t\t/**\n\t\t * Cache of the class name that DataTables has applied to the row, so we\n\t\t * can quickly look at this variable rather than needing to do a DOM check\n\t\t * on className for the nTr property.\n\t\t *  @type string\n\t\t *  @default <i>Empty string</i>\n\t\t *  @private\n\t\t */\n\t\t\"_sRowStripe\": \"\",\n\t\n\t\t/**\n\t\t * Denote if the original data source was from the DOM, or the data source\n\t\t * object. This is used for invalidating data, so DataTables can\n\t\t * automatically read data from the original source, unless uninstructed\n\t\t * otherwise.\n\t\t *  @type string\n\t\t *  @default null\n\t\t *  @private\n\t\t */\n\t\t\"src\": null,\n\t\n\t\t/**\n\t\t * Index in the aoData array. This saves an indexOf lookup when we have the\n\t\t * object, but want to know the index\n\t\t *  @type integer\n\t\t *  @default -1\n\t\t *  @private\n\t\t */\n\t\t\"idx\": -1\n\t};\n\t\n\t\n\t/**\n\t * Template object for the column information object in DataTables. This object\n\t * is held in the settings aoColumns array and contains all the information that\n\t * DataTables needs about each individual column.\n\t *\n\t * Note that this object is related to {@link DataTable.defaults.column}\n\t * but this one is the internal data store for DataTables's cache of columns.\n\t * It should NOT be manipulated outside of DataTables. Any configuration should\n\t * be done through the initialisation options.\n\t *  @namespace\n\t */\n\tDataTable.models.oColumn = {\n\t\t/**\n\t\t * Column index. This could be worked out on-the-fly with $.inArray, but it\n\t\t * is faster to just hold it as a variable\n\t\t *  @type integer\n\t\t *  @default null\n\t\t */\n\t\t\"idx\": null,\n\t\n\t\t/**\n\t\t * A list of the columns that sorting should occur on when this column\n\t\t * is sorted. That this property is an array allows multi-column sorting\n\t\t * to be defined for a column (for example first name / last name columns\n\t\t * would benefit from this). The values are integers pointing to the\n\t\t * columns to be sorted on (typically it will be a single integer pointing\n\t\t * at itself, but that doesn't need to be the case).\n\t\t *  @type array\n\t\t */\n\t\t\"aDataSort\": null,\n\t\n\t\t/**\n\t\t * Define the sorting directions that are applied to the column, in sequence\n\t\t * as the column is repeatedly sorted upon - i.e. the first value is used\n\t\t * as the sorting direction when the column if first sorted (clicked on).\n\t\t * Sort it again (click again) and it will move on to the next index.\n\t\t * Repeat until loop.\n\t\t *  @type array\n\t\t */\n\t\t\"asSorting\": null,\n\t\n\t\t/**\n\t\t * Flag to indicate if the column is searchable, and thus should be included\n\t\t * in the filtering or not.\n\t\t *  @type boolean\n\t\t */\n\t\t\"bSearchable\": null,\n\t\n\t\t/**\n\t\t * Flag to indicate if the column is sortable or not.\n\t\t *  @type boolean\n\t\t */\n\t\t\"bSortable\": null,\n\t\n\t\t/**\n\t\t * Flag to indicate if the column is currently visible in the table or not\n\t\t *  @type boolean\n\t\t */\n\t\t\"bVisible\": null,\n\t\n\t\t/**\n\t\t * Store for manual type assignment using the `column.type` option. This\n\t\t * is held in store so we can manipulate the column's `sType` property.\n\t\t *  @type string\n\t\t *  @default null\n\t\t *  @private\n\t\t */\n\t\t\"_sManualType\": null,\n\t\n\t\t/**\n\t\t * Flag to indicate if HTML5 data attributes should be used as the data\n\t\t * source for filtering or sorting. True is either are.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *  @private\n\t\t */\n\t\t\"_bAttrSrc\": false,\n\t\n\t\t/**\n\t\t * Developer definable function that is called whenever a cell is created (Ajax source,\n\t\t * etc) or processed for input (DOM source). This can be used as a compliment to mRender\n\t\t * allowing you to modify the DOM element (add background colour for example) when the\n\t\t * element is available.\n\t\t *  @type function\n\t\t *  @param {element} nTd The TD node that has been created\n\t\t *  @param {*} sData The Data for the cell\n\t\t *  @param {array|object} oData The data for the whole row\n\t\t *  @param {int} iRow The row index for the aoData data store\n\t\t *  @default null\n\t\t */\n\t\t\"fnCreatedCell\": null,\n\t\n\t\t/**\n\t\t * Function to get data from a cell in a column. You should <b>never</b>\n\t\t * access data directly through _aData internally in DataTables - always use\n\t\t * the method attached to this property. It allows mData to function as\n\t\t * required. This function is automatically assigned by the column\n\t\t * initialisation method\n\t\t *  @type function\n\t\t *  @param {array|object} oData The data array/object for the array\n\t\t *    (i.e. aoData[]._aData)\n\t\t *  @param {string} sSpecific The specific data type you want to get -\n\t\t *    'display', 'type' 'filter' 'sort'\n\t\t *  @returns {*} The data for the cell from the given row's data\n\t\t *  @default null\n\t\t */\n\t\t\"fnGetData\": null,\n\t\n\t\t/**\n\t\t * Function to set data for a cell in the column. You should <b>never</b>\n\t\t * set the data directly to _aData internally in DataTables - always use\n\t\t * this method. It allows mData to function as required. This function\n\t\t * is automatically assigned by the column initialisation method\n\t\t *  @type function\n\t\t *  @param {array|object} oData The data array/object for the array\n\t\t *    (i.e. aoData[]._aData)\n\t\t *  @param {*} sValue Value to set\n\t\t *  @default null\n\t\t */\n\t\t\"fnSetData\": null,\n\t\n\t\t/**\n\t\t * Property to read the value for the cells in the column from the data\n\t\t * source array / object. If null, then the default content is used, if a\n\t\t * function is given then the return from the function is used.\n\t\t *  @type function|int|string|null\n\t\t *  @default null\n\t\t */\n\t\t\"mData\": null,\n\t\n\t\t/**\n\t\t * Partner property to mData which is used (only when defined) to get\n\t\t * the data - i.e. it is basically the same as mData, but without the\n\t\t * 'set' option, and also the data fed to it is the result from mData.\n\t\t * This is the rendering method to match the data method of mData.\n\t\t *  @type function|int|string|null\n\t\t *  @default null\n\t\t */\n\t\t\"mRender\": null,\n\t\n\t\t/**\n\t\t * Unique header TH/TD element for this column - this is what the sorting\n\t\t * listener is attached to (if sorting is enabled.)\n\t\t *  @type node\n\t\t *  @default null\n\t\t */\n\t\t\"nTh\": null,\n\t\n\t\t/**\n\t\t * Unique footer TH/TD element for this column (if there is one). Not used\n\t\t * in DataTables as such, but can be used for plug-ins to reference the\n\t\t * footer for each column.\n\t\t *  @type node\n\t\t *  @default null\n\t\t */\n\t\t\"nTf\": null,\n\t\n\t\t/**\n\t\t * The class to apply to all TD elements in the table's TBODY for the column\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sClass\": null,\n\t\n\t\t/**\n\t\t * When DataTables calculates the column widths to assign to each column,\n\t\t * it finds the longest string in each column and then constructs a\n\t\t * temporary table and reads the widths from that. The problem with this\n\t\t * is that \"mmm\" is much wider then \"iiii\", but the latter is a longer\n\t\t * string - thus the calculation can go wrong (doing it properly and putting\n\t\t * it into an DOM object and measuring that is horribly(!) slow). Thus as\n\t\t * a \"work around\" we provide this option. It will append its value to the\n\t\t * text that is found to be the longest string for the column - i.e. padding.\n\t\t *  @type string\n\t\t */\n\t\t\"sContentPadding\": null,\n\t\n\t\t/**\n\t\t * Allows a default value to be given for a column's data, and will be used\n\t\t * whenever a null data source is encountered (this can be because mData\n\t\t * is set to null, or because the data source itself is null).\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sDefaultContent\": null,\n\t\n\t\t/**\n\t\t * Name for the column, allowing reference to the column by name as well as\n\t\t * by index (needs a lookup to work by name).\n\t\t *  @type string\n\t\t */\n\t\t\"sName\": null,\n\t\n\t\t/**\n\t\t * Custom sorting data type - defines which of the available plug-ins in\n\t\t * afnSortData the custom sorting will use - if any is defined.\n\t\t *  @type string\n\t\t *  @default std\n\t\t */\n\t\t\"sSortDataType\": 'std',\n\t\n\t\t/**\n\t\t * Class to be applied to the header element when sorting on this column\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sSortingClass\": null,\n\t\n\t\t/**\n\t\t * Class to be applied to the header element when sorting on this column -\n\t\t * when jQuery UI theming is used.\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sSortingClassJUI\": null,\n\t\n\t\t/**\n\t\t * Title of the column - what is seen in the TH element (nTh).\n\t\t *  @type string\n\t\t */\n\t\t\"sTitle\": null,\n\t\n\t\t/**\n\t\t * Column sorting and filtering type\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sType\": null,\n\t\n\t\t/**\n\t\t * Width of the column\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sWidth\": null,\n\t\n\t\t/**\n\t\t * Width of the column when it was first \"encountered\"\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sWidthOrig\": null\n\t};\n\t\n\t\n\t/*\n\t * Developer note: The properties of the object below are given in Hungarian\n\t * notation, that was used as the interface for DataTables prior to v1.10, however\n\t * from v1.10 onwards the primary interface is camel case. In order to avoid\n\t * breaking backwards compatibility utterly with this change, the Hungarian\n\t * version is still, internally the primary interface, but is is not documented\n\t * - hence the @name tags in each doc comment. This allows a Javascript function\n\t * to create a map from Hungarian notation to camel case (going the other direction\n\t * would require each property to be listed, which would at around 3K to the size\n\t * of DataTables, while this method is about a 0.5K hit.\n\t *\n\t * Ultimately this does pave the way for Hungarian notation to be dropped\n\t * completely, but that is a massive amount of work and will break current\n\t * installs (therefore is on-hold until v2).\n\t */\n\t\n\t/**\n\t * Initialisation options that can be given to DataTables at initialisation\n\t * time.\n\t *  @namespace\n\t */\n\tDataTable.defaults = {\n\t\t/**\n\t\t * An array of data to use for the table, passed in at initialisation which\n\t\t * will be used in preference to any data which is already in the DOM. This is\n\t\t * particularly useful for constructing tables purely in Javascript, for\n\t\t * example with a custom Ajax call.\n\t\t *  @type array\n\t\t *  @default null\n\t\t *\n\t\t *  @dtopt Option\n\t\t *  @name DataTable.defaults.data\n\t\t *\n\t\t *  @example\n\t\t *    // Using a 2D array data source\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"data\": [\n\t\t *          ['Trident', 'Internet Explorer 4.0', 'Win 95+', 4, 'X'],\n\t\t *          ['Trident', 'Internet Explorer 5.0', 'Win 95+', 5, 'C'],\n\t\t *        ],\n\t\t *        \"columns\": [\n\t\t *          { \"title\": \"Engine\" },\n\t\t *          { \"title\": \"Browser\" },\n\t\t *          { \"title\": \"Platform\" },\n\t\t *          { \"title\": \"Version\" },\n\t\t *          { \"title\": \"Grade\" }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using an array of objects as a data source (`data`)\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"data\": [\n\t\t *          {\n\t\t *            \"engine\":   \"Trident\",\n\t\t *            \"browser\":  \"Internet Explorer 4.0\",\n\t\t *            \"platform\": \"Win 95+\",\n\t\t *            \"version\":  4,\n\t\t *            \"grade\":    \"X\"\n\t\t *          },\n\t\t *          {\n\t\t *            \"engine\":   \"Trident\",\n\t\t *            \"browser\":  \"Internet Explorer 5.0\",\n\t\t *            \"platform\": \"Win 95+\",\n\t\t *            \"version\":  5,\n\t\t *            \"grade\":    \"C\"\n\t\t *          }\n\t\t *        ],\n\t\t *        \"columns\": [\n\t\t *          { \"title\": \"Engine\",   \"data\": \"engine\" },\n\t\t *          { \"title\": \"Browser\",  \"data\": \"browser\" },\n\t\t *          { \"title\": \"Platform\", \"data\": \"platform\" },\n\t\t *          { \"title\": \"Version\",  \"data\": \"version\" },\n\t\t *          { \"title\": \"Grade\",    \"data\": \"grade\" }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"aaData\": null,\n\t\n\t\n\t\t/**\n\t\t * If ordering is enabled, then DataTables will perform a first pass sort on\n\t\t * initialisation. You can define which column(s) the sort is performed\n\t\t * upon, and the sorting direction, with this variable. The `sorting` array\n\t\t * should contain an array for each column to be sorted initially containing\n\t\t * the column's index and a direction string ('asc' or 'desc').\n\t\t *  @type array\n\t\t *  @default [[0,'asc']]\n\t\t *\n\t\t *  @dtopt Option\n\t\t *  @name DataTable.defaults.order\n\t\t *\n\t\t *  @example\n\t\t *    // Sort by 3rd column first, and then 4th column\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"order\": [[2,'asc'], [3,'desc']]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *    // No initial sorting\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"order\": []\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"aaSorting\": [[0,'asc']],\n\t\n\t\n\t\t/**\n\t\t * This parameter is basically identical to the `sorting` parameter, but\n\t\t * cannot be overridden by user interaction with the table. What this means\n\t\t * is that you could have a column (visible or hidden) which the sorting\n\t\t * will always be forced on first - any sorting after that (from the user)\n\t\t * will then be performed as required. This can be useful for grouping rows\n\t\t * together.\n\t\t *  @type array\n\t\t *  @default null\n\t\t *\n\t\t *  @dtopt Option\n\t\t *  @name DataTable.defaults.orderFixed\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"orderFixed\": [[0,'asc']]\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"aaSortingFixed\": [],\n\t\n\t\n\t\t/**\n\t\t * DataTables can be instructed to load data to display in the table from a\n\t\t * Ajax source. This option defines how that Ajax call is made and where to.\n\t\t *\n\t\t * The `ajax` property has three different modes of operation, depending on\n\t\t * how it is defined. These are:\n\t\t *\n\t\t * * `string` - Set the URL from where the data should be loaded from.\n\t\t * * `object` - Define properties for `jQuery.ajax`.\n\t\t * * `function` - Custom data get function\n\t\t *\n\t\t * `string`\n\t\t * --------\n\t\t *\n\t\t * As a string, the `ajax` property simply defines the URL from which\n\t\t * DataTables will load data.\n\t\t *\n\t\t * `object`\n\t\t * --------\n\t\t *\n\t\t * As an object, the parameters in the object are passed to\n\t\t * [jQuery.ajax](http://api.jquery.com/jQuery.ajax/) allowing fine control\n\t\t * of the Ajax request. DataTables has a number of default parameters which\n\t\t * you can override using this option. Please refer to the jQuery\n\t\t * documentation for a full description of the options available, although\n\t\t * the following parameters provide additional options in DataTables or\n\t\t * require special consideration:\n\t\t *\n\t\t * * `data` - As with jQuery, `data` can be provided as an object, but it\n\t\t *   can also be used as a function to manipulate the data DataTables sends\n\t\t *   to the server. The function takes a single parameter, an object of\n\t\t *   parameters with the values that DataTables has readied for sending. An\n\t\t *   object may be returned which will be merged into the DataTables\n\t\t *   defaults, or you can add the items to the object that was passed in and\n\t\t *   not return anything from the function. This supersedes `fnServerParams`\n\t\t *   from DataTables 1.9-.\n\t\t *\n\t\t * * `dataSrc` - By default DataTables will look for the property `data` (or\n\t\t *   `aaData` for compatibility with DataTables 1.9-) when obtaining data\n\t\t *   from an Ajax source or for server-side processing - this parameter\n\t\t *   allows that property to be changed. You can use Javascript dotted\n\t\t *   object notation to get a data source for multiple levels of nesting, or\n\t\t *   it my be used as a function. As a function it takes a single parameter,\n\t\t *   the JSON returned from the server, which can be manipulated as\n\t\t *   required, with the returned value being that used by DataTables as the\n\t\t *   data source for the table. This supersedes `sAjaxDataProp` from\n\t\t *   DataTables 1.9-.\n\t\t *\n\t\t * * `success` - Should not be overridden it is used internally in\n\t\t *   DataTables. To manipulate / transform the data returned by the server\n\t\t *   use `ajax.dataSrc`, or use `ajax` as a function (see below).\n\t\t *\n\t\t * `function`\n\t\t * ----------\n\t\t *\n\t\t * As a function, making the Ajax call is left up to yourself allowing\n\t\t * complete control of the Ajax request. Indeed, if desired, a method other\n\t\t * than Ajax could be used to obtain the required data, such as Web storage\n\t\t * or an AIR database.\n\t\t *\n\t\t * The function is given four parameters and no return is required. The\n\t\t * parameters are:\n\t\t *\n\t\t * 1. _object_ - Data to send to the server\n\t\t * 2. _function_ - Callback function that must be executed when the required\n\t\t *    data has been obtained. That data should be passed into the callback\n\t\t *    as the only parameter\n\t\t * 3. _object_ - DataTables settings object for the table\n\t\t *\n\t\t * Note that this supersedes `fnServerData` from DataTables 1.9-.\n\t\t *\n\t\t *  @type string|object|function\n\t\t *  @default null\n\t\t *\n\t\t *  @dtopt Option\n\t\t *  @name DataTable.defaults.ajax\n\t\t *  @since 1.10.0\n\t\t *\n\t\t * @example\n\t\t *   // Get JSON data from a file via Ajax.\n\t\t *   // Note DataTables expects data in the form `{ data: [ ...data... ] }` by default).\n\t\t *   $('#example').dataTable( {\n\t\t *     \"ajax\": \"data.json\"\n\t\t *   } );\n\t\t *\n\t\t * @example\n\t\t *   // Get JSON data from a file via Ajax, using `dataSrc` to change\n\t\t *   // `data` to `tableData` (i.e. `{ tableData: [ ...data... ] }`)\n\t\t *   $('#example').dataTable( {\n\t\t *     \"ajax\": {\n\t\t *       \"url\": \"data.json\",\n\t\t *       \"dataSrc\": \"tableData\"\n\t\t *     }\n\t\t *   } );\n\t\t *\n\t\t * @example\n\t\t *   // Get JSON data from a file via Ajax, using `dataSrc` to read data\n\t\t *   // from a plain array rather than an array in an object\n\t\t *   $('#example').dataTable( {\n\t\t *     \"ajax\": {\n\t\t *       \"url\": \"data.json\",\n\t\t *       \"dataSrc\": \"\"\n\t\t *     }\n\t\t *   } );\n\t\t *\n\t\t * @example\n\t\t *   // Manipulate the data returned from the server - add a link to data\n\t\t *   // (note this can, should, be done using `render` for the column - this\n\t\t *   // is just a simple example of how the data can be manipulated).\n\t\t *   $('#example').dataTable( {\n\t\t *     \"ajax\": {\n\t\t *       \"url\": \"data.json\",\n\t\t *       \"dataSrc\": function ( json ) {\n\t\t *         for ( var i=0, ien=json.length ; i<ien ; i++ ) {\n\t\t *           json[i][0] = '<a href=\"/message/'+json[i][0]+'>View message</a>';\n\t\t *         }\n\t\t *         return json;\n\t\t *       }\n\t\t *     }\n\t\t *   } );\n\t\t *\n\t\t * @example\n\t\t *   // Add data to the request\n\t\t *   $('#example').dataTable( {\n\t\t *     \"ajax\": {\n\t\t *       \"url\": \"data.json\",\n\t\t *       \"data\": function ( d ) {\n\t\t *         return {\n\t\t *           \"extra_search\": $('#extra').val()\n\t\t *         };\n\t\t *       }\n\t\t *     }\n\t\t *   } );\n\t\t *\n\t\t * @example\n\t\t *   // Send request as POST\n\t\t *   $('#example').dataTable( {\n\t\t *     \"ajax\": {\n\t\t *       \"url\": \"data.json\",\n\t\t *       \"type\": \"POST\"\n\t\t *     }\n\t\t *   } );\n\t\t *\n\t\t * @example\n\t\t *   // Get the data from localStorage (could interface with a form for\n\t\t *   // adding, editing and removing rows).\n\t\t *   $('#example').dataTable( {\n\t\t *     \"ajax\": function (data, callback, settings) {\n\t\t *       callback(\n\t\t *         JSON.parse( localStorage.getItem('dataTablesData') )\n\t\t *       );\n\t\t *     }\n\t\t *   } );\n\t\t */\n\t\t\"ajax\": null,\n\t\n\t\n\t\t/**\n\t\t * This parameter allows you to readily specify the entries in the length drop\n\t\t * down menu that DataTables shows when pagination is enabled. It can be\n\t\t * either a 1D array of options which will be used for both the displayed\n\t\t * option and the value, or a 2D array which will use the array in the first\n\t\t * position as the value, and the array in the second position as the\n\t\t * displayed options (useful for language strings such as 'All').\n\t\t *\n\t\t * Note that the `pageLength` property will be automatically set to the\n\t\t * first value given in this array, unless `pageLength` is also provided.\n\t\t *  @type array\n\t\t *  @default [ 10, 25, 50, 100 ]\n\t\t *\n\t\t *  @dtopt Option\n\t\t *  @name DataTable.defaults.lengthMenu\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"lengthMenu\": [[10, 25, 50, -1], [10, 25, 50, \"All\"]]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"aLengthMenu\": [ 10, 25, 50, 100 ],\n\t\n\t\n\t\t/**\n\t\t * The `columns` option in the initialisation parameter allows you to define\n\t\t * details about the way individual columns behave. For a full list of\n\t\t * column options that can be set, please see\n\t\t * {@link DataTable.defaults.column}. Note that if you use `columns` to\n\t\t * define your columns, you must have an entry in the array for every single\n\t\t * column that you have in your table (these can be null if you don't which\n\t\t * to specify any options).\n\t\t *  @member\n\t\t *\n\t\t *  @name DataTable.defaults.column\n\t\t */\n\t\t\"aoColumns\": null,\n\t\n\t\t/**\n\t\t * Very similar to `columns`, `columnDefs` allows you to target a specific\n\t\t * column, multiple columns, or all columns, using the `targets` property of\n\t\t * each object in the array. This allows great flexibility when creating\n\t\t * tables, as the `columnDefs` arrays can be of any length, targeting the\n\t\t * columns you specifically want. `columnDefs` may use any of the column\n\t\t * options available: {@link DataTable.defaults.column}, but it _must_\n\t\t * have `targets` defined in each object in the array. Values in the `targets`\n\t\t * array may be:\n\t\t *   <ul>\n\t\t *     <li>a string - class name will be matched on the TH for the column</li>\n\t\t *     <li>0 or a positive integer - column index counting from the left</li>\n\t\t *     <li>a negative integer - column index counting from the right</li>\n\t\t *     <li>the string \"_all\" - all columns (i.e. assign a default)</li>\n\t\t *   </ul>\n\t\t *  @member\n\t\t *\n\t\t *  @name DataTable.defaults.columnDefs\n\t\t */\n\t\t\"aoColumnDefs\": null,\n\t\n\t\n\t\t/**\n\t\t * Basically the same as `search`, this parameter defines the individual column\n\t\t * filtering state at initialisation time. The array must be of the same size\n\t\t * as the number of columns, and each element be an object with the parameters\n\t\t * `search` and `escapeRegex` (the latter is optional). 'null' is also\n\t\t * accepted and the default will be used.\n\t\t *  @type array\n\t\t *  @default []\n\t\t *\n\t\t *  @dtopt Option\n\t\t *  @name DataTable.defaults.searchCols\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"searchCols\": [\n\t\t *          null,\n\t\t *          { \"search\": \"My filter\" },\n\t\t *          null,\n\t\t *          { \"search\": \"^[0-9]\", \"escapeRegex\": false }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"aoSearchCols\": [],\n\t\n\t\n\t\t/**\n\t\t * An array of CSS classes that should be applied to displayed rows. This\n\t\t * array may be of any length, and DataTables will apply each class\n\t\t * sequentially, looping when required.\n\t\t *  @type array\n\t\t *  @default null <i>Will take the values determined by the `oClasses.stripe*`\n\t\t *    options</i>\n\t\t *\n\t\t *  @dtopt Option\n\t\t *  @name DataTable.defaults.stripeClasses\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"stripeClasses\": [ 'strip1', 'strip2', 'strip3' ]\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"asStripeClasses\": null,\n\t\n\t\n\t\t/**\n\t\t * Enable or disable automatic column width calculation. This can be disabled\n\t\t * as an optimisation (it takes some time to calculate the widths) if the\n\t\t * tables widths are passed in using `columns`.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.autoWidth\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"autoWidth\": false\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bAutoWidth\": true,\n\t\n\t\n\t\t/**\n\t\t * Deferred rendering can provide DataTables with a huge speed boost when you\n\t\t * are using an Ajax or JS data source for the table. This option, when set to\n\t\t * true, will cause DataTables to defer the creation of the table elements for\n\t\t * each row until they are needed for a draw - saving a significant amount of\n\t\t * time.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.deferRender\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"ajax\": \"sources/arrays.txt\",\n\t\t *        \"deferRender\": true\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bDeferRender\": false,\n\t\n\t\n\t\t/**\n\t\t * Replace a DataTable which matches the given selector and replace it with\n\t\t * one which has the properties of the new initialisation object passed. If no\n\t\t * table matches the selector, then the new DataTable will be constructed as\n\t\t * per normal.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.destroy\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"srollY\": \"200px\",\n\t\t *        \"paginate\": false\n\t\t *      } );\n\t\t *\n\t\t *      // Some time later....\n\t\t *      $('#example').dataTable( {\n\t\t *        \"filter\": false,\n\t\t *        \"destroy\": true\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bDestroy\": false,\n\t\n\t\n\t\t/**\n\t\t * Enable or disable filtering of data. Filtering in DataTables is \"smart\" in\n\t\t * that it allows the end user to input multiple words (space separated) and\n\t\t * will match a row containing those words, even if not in the order that was\n\t\t * specified (this allow matching across multiple columns). Note that if you\n\t\t * wish to use filtering in DataTables this must remain 'true' - to remove the\n\t\t * default filtering input box and retain filtering abilities, please use\n\t\t * {@link DataTable.defaults.dom}.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.searching\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"searching\": false\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bFilter\": true,\n\t\n\t\n\t\t/**\n\t\t * Enable or disable the table information display. This shows information\n\t\t * about the data that is currently visible on the page, including information\n\t\t * about filtered data if that action is being performed.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.info\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"info\": false\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bInfo\": true,\n\t\n\t\n\t\t/**\n\t\t * Allows the end user to select the size of a formatted page from a select\n\t\t * menu (sizes are 10, 25, 50 and 100). Requires pagination (`paginate`).\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.lengthChange\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"lengthChange\": false\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bLengthChange\": true,\n\t\n\t\n\t\t/**\n\t\t * Enable or disable pagination.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.paging\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"paging\": false\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bPaginate\": true,\n\t\n\t\n\t\t/**\n\t\t * Enable or disable the display of a 'processing' indicator when the table is\n\t\t * being processed (e.g. a sort). This is particularly useful for tables with\n\t\t * large amounts of data where it can take a noticeable amount of time to sort\n\t\t * the entries.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.processing\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"processing\": true\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bProcessing\": false,\n\t\n\t\n\t\t/**\n\t\t * Retrieve the DataTables object for the given selector. Note that if the\n\t\t * table has already been initialised, this parameter will cause DataTables\n\t\t * to simply return the object that has already been set up - it will not take\n\t\t * account of any changes you might have made to the initialisation object\n\t\t * passed to DataTables (setting this parameter to true is an acknowledgement\n\t\t * that you understand this). `destroy` can be used to reinitialise a table if\n\t\t * you need.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.retrieve\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      initTable();\n\t\t *      tableActions();\n\t\t *    } );\n\t\t *\n\t\t *    function initTable ()\n\t\t *    {\n\t\t *      return $('#example').dataTable( {\n\t\t *        \"scrollY\": \"200px\",\n\t\t *        \"paginate\": false,\n\t\t *        \"retrieve\": true\n\t\t *      } );\n\t\t *    }\n\t\t *\n\t\t *    function tableActions ()\n\t\t *    {\n\t\t *      var table = initTable();\n\t\t *      // perform API operations with oTable\n\t\t *    }\n\t\t */\n\t\t\"bRetrieve\": false,\n\t\n\t\n\t\t/**\n\t\t * When vertical (y) scrolling is enabled, DataTables will force the height of\n\t\t * the table's viewport to the given height at all times (useful for layout).\n\t\t * However, this can look odd when filtering data down to a small data set,\n\t\t * and the footer is left \"floating\" further down. This parameter (when\n\t\t * enabled) will cause DataTables to collapse the table's viewport down when\n\t\t * the result set will fit within the given Y height.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.scrollCollapse\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"scrollY\": \"200\",\n\t\t *        \"scrollCollapse\": true\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bScrollCollapse\": false,\n\t\n\t\n\t\t/**\n\t\t * Configure DataTables to use server-side processing. Note that the\n\t\t * `ajax` parameter must also be given in order to give DataTables a\n\t\t * source to obtain the required data for each draw.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @dtopt Server-side\n\t\t *  @name DataTable.defaults.serverSide\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"serverSide\": true,\n\t\t *        \"ajax\": \"xhr.php\"\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bServerSide\": false,\n\t\n\t\n\t\t/**\n\t\t * Enable or disable sorting of columns. Sorting of individual columns can be\n\t\t * disabled by the `sortable` option for each column.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.ordering\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"ordering\": false\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bSort\": true,\n\t\n\t\n\t\t/**\n\t\t * Enable or display DataTables' ability to sort multiple columns at the\n\t\t * same time (activated by shift-click by the user).\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.orderMulti\n\t\t *\n\t\t *  @example\n\t\t *    // Disable multiple column sorting ability\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"orderMulti\": false\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bSortMulti\": true,\n\t\n\t\n\t\t/**\n\t\t * Allows control over whether DataTables should use the top (true) unique\n\t\t * cell that is found for a single column, or the bottom (false - default).\n\t\t * This is useful when using complex headers.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.orderCellsTop\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"orderCellsTop\": true\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bSortCellsTop\": false,\n\t\n\t\n\t\t/**\n\t\t * Enable or disable the addition of the classes `sorting\\_1`, `sorting\\_2` and\n\t\t * `sorting\\_3` to the columns which are currently being sorted on. This is\n\t\t * presented as a feature switch as it can increase processing time (while\n\t\t * classes are removed and added) so for large data sets you might want to\n\t\t * turn this off.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.orderClasses\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"orderClasses\": false\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bSortClasses\": true,\n\t\n\t\n\t\t/**\n\t\t * Enable or disable state saving. When enabled HTML5 `localStorage` will be\n\t\t * used to save table display information such as pagination information,\n\t\t * display length, filtering and sorting. As such when the end user reloads\n\t\t * the page the display display will match what thy had previously set up.\n\t\t *\n\t\t * Due to the use of `localStorage` the default state saving is not supported\n\t\t * in IE6 or 7. If state saving is required in those browsers, use\n\t\t * `stateSaveCallback` to provide a storage solution such as cookies.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.stateSave\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"stateSave\": true\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bStateSave\": false,\n\t\n\t\n\t\t/**\n\t\t * This function is called when a TR element is created (and all TD child\n\t\t * elements have been inserted), or registered if using a DOM source, allowing\n\t\t * manipulation of the TR element (adding classes etc).\n\t\t *  @type function\n\t\t *  @param {node} row \"TR\" element for the current row\n\t\t *  @param {array} data Raw data array for this row\n\t\t *  @param {int} dataIndex The index of this row in the internal aoData array\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.createdRow\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"createdRow\": function( row, data, dataIndex ) {\n\t\t *          // Bold the grade for all 'A' grade browsers\n\t\t *          if ( data[4] == \"A\" )\n\t\t *          {\n\t\t *            $('td:eq(4)', row).html( '<b>A</b>' );\n\t\t *          }\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnCreatedRow\": null,\n\t\n\t\n\t\t/**\n\t\t * This function is called on every 'draw' event, and allows you to\n\t\t * dynamically modify any aspect you want about the created DOM.\n\t\t *  @type function\n\t\t *  @param {object} settings DataTables settings object\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.drawCallback\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"drawCallback\": function( settings ) {\n\t\t *          alert( 'DataTables has redrawn the table' );\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnDrawCallback\": null,\n\t\n\t\n\t\t/**\n\t\t * Identical to fnHeaderCallback() but for the table footer this function\n\t\t * allows you to modify the table footer on every 'draw' event.\n\t\t *  @type function\n\t\t *  @param {node} foot \"TR\" element for the footer\n\t\t *  @param {array} data Full table data (as derived from the original HTML)\n\t\t *  @param {int} start Index for the current display starting point in the\n\t\t *    display array\n\t\t *  @param {int} end Index for the current display ending point in the\n\t\t *    display array\n\t\t *  @param {array int} display Index array to translate the visual position\n\t\t *    to the full data array\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.footerCallback\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"footerCallback\": function( tfoot, data, start, end, display ) {\n\t\t *          tfoot.getElementsByTagName('th')[0].innerHTML = \"Starting index is \"+start;\n\t\t *        }\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"fnFooterCallback\": null,\n\t\n\t\n\t\t/**\n\t\t * When rendering large numbers in the information element for the table\n\t\t * (i.e. \"Showing 1 to 10 of 57 entries\") DataTables will render large numbers\n\t\t * to have a comma separator for the 'thousands' units (e.g. 1 million is\n\t\t * rendered as \"1,000,000\") to help readability for the end user. This\n\t\t * function will override the default method DataTables uses.\n\t\t *  @type function\n\t\t *  @member\n\t\t *  @param {int} toFormat number to be formatted\n\t\t *  @returns {string} formatted string for DataTables to show the number\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.formatNumber\n\t\t *\n\t\t *  @example\n\t\t *    // Format a number using a single quote for the separator (note that\n\t\t *    // this can also be done with the language.thousands option)\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"formatNumber\": function ( toFormat ) {\n\t\t *          return toFormat.toString().replace(\n\t\t *            /\\B(?=(\\d{3})+(?!\\d))/g, \"'\"\n\t\t *          );\n\t\t *        };\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnFormatNumber\": function ( toFormat ) {\n\t\t\treturn toFormat.toString().replace(\n\t\t\t\t/\\B(?=(\\d{3})+(?!\\d))/g,\n\t\t\t\tthis.oLanguage.sThousands\n\t\t\t);\n\t\t},\n\t\n\t\n\t\t/**\n\t\t * This function is called on every 'draw' event, and allows you to\n\t\t * dynamically modify the header row. This can be used to calculate and\n\t\t * display useful information about the table.\n\t\t *  @type function\n\t\t *  @param {node} head \"TR\" element for the header\n\t\t *  @param {array} data Full table data (as derived from the original HTML)\n\t\t *  @param {int} start Index for the current display starting point in the\n\t\t *    display array\n\t\t *  @param {int} end Index for the current display ending point in the\n\t\t *    display array\n\t\t *  @param {array int} display Index array to translate the visual position\n\t\t *    to the full data array\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.headerCallback\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"fheaderCallback\": function( head, data, start, end, display ) {\n\t\t *          head.getElementsByTagName('th')[0].innerHTML = \"Displaying \"+(end-start)+\" records\";\n\t\t *        }\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"fnHeaderCallback\": null,\n\t\n\t\n\t\t/**\n\t\t * The information element can be used to convey information about the current\n\t\t * state of the table. Although the internationalisation options presented by\n\t\t * DataTables are quite capable of dealing with most customisations, there may\n\t\t * be times where you wish to customise the string further. This callback\n\t\t * allows you to do exactly that.\n\t\t *  @type function\n\t\t *  @param {object} oSettings DataTables settings object\n\t\t *  @param {int} start Starting position in data for the draw\n\t\t *  @param {int} end End position in data for the draw\n\t\t *  @param {int} max Total number of rows in the table (regardless of\n\t\t *    filtering)\n\t\t *  @param {int} total Total number of rows in the data set, after filtering\n\t\t *  @param {string} pre The string that DataTables has formatted using it's\n\t\t *    own rules\n\t\t *  @returns {string} The string to be displayed in the information element.\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.infoCallback\n\t\t *\n\t\t *  @example\n\t\t *    $('#example').dataTable( {\n\t\t *      \"infoCallback\": function( settings, start, end, max, total, pre ) {\n\t\t *        return start +\" to \"+ end;\n\t\t *      }\n\t\t *    } );\n\t\t */\n\t\t\"fnInfoCallback\": null,\n\t\n\t\n\t\t/**\n\t\t * Called when the table has been initialised. Normally DataTables will\n\t\t * initialise sequentially and there will be no need for this function,\n\t\t * however, this does not hold true when using external language information\n\t\t * since that is obtained using an async XHR call.\n\t\t *  @type function\n\t\t *  @param {object} settings DataTables settings object\n\t\t *  @param {object} json The JSON object request from the server - only\n\t\t *    present if client-side Ajax sourced data is used\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.initComplete\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"initComplete\": function(settings, json) {\n\t\t *          alert( 'DataTables has finished its initialisation.' );\n\t\t *        }\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"fnInitComplete\": null,\n\t\n\t\n\t\t/**\n\t\t * Called at the very start of each table draw and can be used to cancel the\n\t\t * draw by returning false, any other return (including undefined) results in\n\t\t * the full draw occurring).\n\t\t *  @type function\n\t\t *  @param {object} settings DataTables settings object\n\t\t *  @returns {boolean} False will cancel the draw, anything else (including no\n\t\t *    return) will allow it to complete.\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.preDrawCallback\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"preDrawCallback\": function( settings ) {\n\t\t *          if ( $('#test').val() == 1 ) {\n\t\t *            return false;\n\t\t *          }\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnPreDrawCallback\": null,\n\t\n\t\n\t\t/**\n\t\t * This function allows you to 'post process' each row after it have been\n\t\t * generated for each table draw, but before it is rendered on screen. This\n\t\t * function might be used for setting the row class name etc.\n\t\t *  @type function\n\t\t *  @param {node} row \"TR\" element for the current row\n\t\t *  @param {array} data Raw data array for this row\n\t\t *  @param {int} displayIndex The display index for the current table draw\n\t\t *  @param {int} displayIndexFull The index of the data in the full list of\n\t\t *    rows (after filtering)\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.rowCallback\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"rowCallback\": function( row, data, displayIndex, displayIndexFull ) {\n\t\t *          // Bold the grade for all 'A' grade browsers\n\t\t *          if ( data[4] == \"A\" ) {\n\t\t *            $('td:eq(4)', row).html( '<b>A</b>' );\n\t\t *          }\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnRowCallback\": null,\n\t\n\t\n\t\t/**\n\t\t * __Deprecated__ The functionality provided by this parameter has now been\n\t\t * superseded by that provided through `ajax`, which should be used instead.\n\t\t *\n\t\t * This parameter allows you to override the default function which obtains\n\t\t * the data from the server so something more suitable for your application.\n\t\t * For example you could use POST data, or pull information from a Gears or\n\t\t * AIR database.\n\t\t *  @type function\n\t\t *  @member\n\t\t *  @param {string} source HTTP source to obtain the data from (`ajax`)\n\t\t *  @param {array} data A key/value pair object containing the data to send\n\t\t *    to the server\n\t\t *  @param {function} callback to be called on completion of the data get\n\t\t *    process that will draw the data on the page.\n\t\t *  @param {object} settings DataTables settings object\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @dtopt Server-side\n\t\t *  @name DataTable.defaults.serverData\n\t\t *\n\t\t *  @deprecated 1.10. Please use `ajax` for this functionality now.\n\t\t */\n\t\t\"fnServerData\": null,\n\t\n\t\n\t\t/**\n\t\t * __Deprecated__ The functionality provided by this parameter has now been\n\t\t * superseded by that provided through `ajax`, which should be used instead.\n\t\t *\n\t\t *  It is often useful to send extra data to the server when making an Ajax\n\t\t * request - for example custom filtering information, and this callback\n\t\t * function makes it trivial to send extra information to the server. The\n\t\t * passed in parameter is the data set that has been constructed by\n\t\t * DataTables, and you can add to this or modify it as you require.\n\t\t *  @type function\n\t\t *  @param {array} data Data array (array of objects which are name/value\n\t\t *    pairs) that has been constructed by DataTables and will be sent to the\n\t\t *    server. In the case of Ajax sourced data with server-side processing\n\t\t *    this will be an empty array, for server-side processing there will be a\n\t\t *    significant number of parameters!\n\t\t *  @returns {undefined} Ensure that you modify the data array passed in,\n\t\t *    as this is passed by reference.\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @dtopt Server-side\n\t\t *  @name DataTable.defaults.serverParams\n\t\t *\n\t\t *  @deprecated 1.10. Please use `ajax` for this functionality now.\n\t\t */\n\t\t\"fnServerParams\": null,\n\t\n\t\n\t\t/**\n\t\t * Load the table state. With this function you can define from where, and how, the\n\t\t * state of a table is loaded. By default DataTables will load from `localStorage`\n\t\t * but you might wish to use a server-side database or cookies.\n\t\t *  @type function\n\t\t *  @member\n\t\t *  @param {object} settings DataTables settings object\n\t\t *  @param {object} callback Callback that can be executed when done. It\n\t\t *    should be passed the loaded state object.\n\t\t *  @return {object} The DataTables state object to be loaded\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.stateLoadCallback\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"stateSave\": true,\n\t\t *        \"stateLoadCallback\": function (settings, callback) {\n\t\t *          $.ajax( {\n\t\t *            \"url\": \"/state_load\",\n\t\t *            \"dataType\": \"json\",\n\t\t *            \"success\": function (json) {\n\t\t *              callback( json );\n\t\t *            }\n\t\t *          } );\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnStateLoadCallback\": function ( settings ) {\n\t\t\ttry {\n\t\t\t\treturn JSON.parse(\n\t\t\t\t\t(settings.iStateDuration === -1 ? sessionStorage : localStorage).getItem(\n\t\t\t\t\t\t'DataTables_'+settings.sInstance+'_'+location.pathname\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t} catch (e) {}\n\t\t},\n\t\n\t\n\t\t/**\n\t\t * Callback which allows modification of the saved state prior to loading that state.\n\t\t * This callback is called when the table is loading state from the stored data, but\n\t\t * prior to the settings object being modified by the saved state. Note that for\n\t\t * plug-in authors, you should use the `stateLoadParams` event to load parameters for\n\t\t * a plug-in.\n\t\t *  @type function\n\t\t *  @param {object} settings DataTables settings object\n\t\t *  @param {object} data The state object that is to be loaded\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.stateLoadParams\n\t\t *\n\t\t *  @example\n\t\t *    // Remove a saved filter, so filtering is never loaded\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"stateSave\": true,\n\t\t *        \"stateLoadParams\": function (settings, data) {\n\t\t *          data.oSearch.sSearch = \"\";\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Disallow state loading by returning false\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"stateSave\": true,\n\t\t *        \"stateLoadParams\": function (settings, data) {\n\t\t *          return false;\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnStateLoadParams\": null,\n\t\n\t\n\t\t/**\n\t\t * Callback that is called when the state has been loaded from the state saving method\n\t\t * and the DataTables settings object has been modified as a result of the loaded state.\n\t\t *  @type function\n\t\t *  @param {object} settings DataTables settings object\n\t\t *  @param {object} data The state object that was loaded\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.stateLoaded\n\t\t *\n\t\t *  @example\n\t\t *    // Show an alert with the filtering value that was saved\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"stateSave\": true,\n\t\t *        \"stateLoaded\": function (settings, data) {\n\t\t *          alert( 'Saved filter was: '+data.oSearch.sSearch );\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnStateLoaded\": null,\n\t\n\t\n\t\t/**\n\t\t * Save the table state. This function allows you to define where and how the state\n\t\t * information for the table is stored By default DataTables will use `localStorage`\n\t\t * but you might wish to use a server-side database or cookies.\n\t\t *  @type function\n\t\t *  @member\n\t\t *  @param {object} settings DataTables settings object\n\t\t *  @param {object} data The state object to be saved\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.stateSaveCallback\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"stateSave\": true,\n\t\t *        \"stateSaveCallback\": function (settings, data) {\n\t\t *          // Send an Ajax request to the server with the state object\n\t\t *          $.ajax( {\n\t\t *            \"url\": \"/state_save\",\n\t\t *            \"data\": data,\n\t\t *            \"dataType\": \"json\",\n\t\t *            \"method\": \"POST\"\n\t\t *            \"success\": function () {}\n\t\t *          } );\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnStateSaveCallback\": function ( settings, data ) {\n\t\t\ttry {\n\t\t\t\t(settings.iStateDuration === -1 ? sessionStorage : localStorage).setItem(\n\t\t\t\t\t'DataTables_'+settings.sInstance+'_'+location.pathname,\n\t\t\t\t\tJSON.stringify( data )\n\t\t\t\t);\n\t\t\t} catch (e) {}\n\t\t},\n\t\n\t\n\t\t/**\n\t\t * Callback which allows modification of the state to be saved. Called when the table\n\t\t * has changed state a new state save is required. This method allows modification of\n\t\t * the state saving object prior to actually doing the save, including addition or\n\t\t * other state properties or modification. Note that for plug-in authors, you should\n\t\t * use the `stateSaveParams` event to save parameters for a plug-in.\n\t\t *  @type function\n\t\t *  @param {object} settings DataTables settings object\n\t\t *  @param {object} data The state object to be saved\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.stateSaveParams\n\t\t *\n\t\t *  @example\n\t\t *    // Remove a saved filter, so filtering is never saved\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"stateSave\": true,\n\t\t *        \"stateSaveParams\": function (settings, data) {\n\t\t *          data.oSearch.sSearch = \"\";\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnStateSaveParams\": null,\n\t\n\t\n\t\t/**\n\t\t * Duration for which the saved state information is considered valid. After this period\n\t\t * has elapsed the state will be returned to the default.\n\t\t * Value is given in seconds.\n\t\t *  @type int\n\t\t *  @default 7200 <i>(2 hours)</i>\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.stateDuration\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"stateDuration\": 60*60*24; // 1 day\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"iStateDuration\": 7200,\n\t\n\t\n\t\t/**\n\t\t * When enabled DataTables will not make a request to the server for the first\n\t\t * page draw - rather it will use the data already on the page (no sorting etc\n\t\t * will be applied to it), thus saving on an XHR at load time. `deferLoading`\n\t\t * is used to indicate that deferred loading is required, but it is also used\n\t\t * to tell DataTables how many records there are in the full table (allowing\n\t\t * the information element and pagination to be displayed correctly). In the case\n\t\t * where a filtering is applied to the table on initial load, this can be\n\t\t * indicated by giving the parameter as an array, where the first element is\n\t\t * the number of records available after filtering and the second element is the\n\t\t * number of records without filtering (allowing the table information element\n\t\t * to be shown correctly).\n\t\t *  @type int | array\n\t\t *  @default null\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.deferLoading\n\t\t *\n\t\t *  @example\n\t\t *    // 57 records available in the table, no filtering applied\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"serverSide\": true,\n\t\t *        \"ajax\": \"scripts/server_processing.php\",\n\t\t *        \"deferLoading\": 57\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // 57 records after filtering, 100 without filtering (an initial filter applied)\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"serverSide\": true,\n\t\t *        \"ajax\": \"scripts/server_processing.php\",\n\t\t *        \"deferLoading\": [ 57, 100 ],\n\t\t *        \"search\": {\n\t\t *          \"search\": \"my_filter\"\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"iDeferLoading\": null,\n\t\n\t\n\t\t/**\n\t\t * Number of rows to display on a single page when using pagination. If\n\t\t * feature enabled (`lengthChange`) then the end user will be able to override\n\t\t * this to a custom setting using a pop-up menu.\n\t\t *  @type int\n\t\t *  @default 10\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.pageLength\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"pageLength\": 50\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"iDisplayLength\": 10,\n\t\n\t\n\t\t/**\n\t\t * Define the starting point for data display when using DataTables with\n\t\t * pagination. Note that this parameter is the number of records, rather than\n\t\t * the page number, so if you have 10 records per page and want to start on\n\t\t * the third page, it should be \"20\".\n\t\t *  @type int\n\t\t *  @default 0\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.displayStart\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"displayStart\": 20\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"iDisplayStart\": 0,\n\t\n\t\n\t\t/**\n\t\t * By default DataTables allows keyboard navigation of the table (sorting, paging,\n\t\t * and filtering) by adding a `tabindex` attribute to the required elements. This\n\t\t * allows you to tab through the controls and press the enter key to activate them.\n\t\t * The tabindex is default 0, meaning that the tab follows the flow of the document.\n\t\t * You can overrule this using this parameter if you wish. Use a value of -1 to\n\t\t * disable built-in keyboard navigation.\n\t\t *  @type int\n\t\t *  @default 0\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.tabIndex\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"tabIndex\": 1\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"iTabIndex\": 0,\n\t\n\t\n\t\t/**\n\t\t * Classes that DataTables assigns to the various components and features\n\t\t * that it adds to the HTML table. This allows classes to be configured\n\t\t * during initialisation in addition to through the static\n\t\t * {@link DataTable.ext.oStdClasses} object).\n\t\t *  @namespace\n\t\t *  @name DataTable.defaults.classes\n\t\t */\n\t\t\"oClasses\": {},\n\t\n\t\n\t\t/**\n\t\t * All strings that DataTables uses in the user interface that it creates\n\t\t * are defined in this object, allowing you to modified them individually or\n\t\t * completely replace them all as required.\n\t\t *  @namespace\n\t\t *  @name DataTable.defaults.language\n\t\t */\n\t\t\"oLanguage\": {\n\t\t\t/**\n\t\t\t * Strings that are used for WAI-ARIA labels and controls only (these are not\n\t\t\t * actually visible on the page, but will be read by screenreaders, and thus\n\t\t\t * must be internationalised as well).\n\t\t\t *  @namespace\n\t\t\t *  @name DataTable.defaults.language.aria\n\t\t\t */\n\t\t\t\"oAria\": {\n\t\t\t\t/**\n\t\t\t\t * ARIA label that is added to the table headers when the column may be\n\t\t\t\t * sorted ascending by activing the column (click or return when focused).\n\t\t\t\t * Note that the column header is prefixed to this string.\n\t\t\t\t *  @type string\n\t\t\t\t *  @default : activate to sort column ascending\n\t\t\t\t *\n\t\t\t\t *  @dtopt Language\n\t\t\t\t *  @name DataTable.defaults.language.aria.sortAscending\n\t\t\t\t *\n\t\t\t\t *  @example\n\t\t\t\t *    $(document).ready( function() {\n\t\t\t\t *      $('#example').dataTable( {\n\t\t\t\t *        \"language\": {\n\t\t\t\t *          \"aria\": {\n\t\t\t\t *            \"sortAscending\": \" - click/return to sort ascending\"\n\t\t\t\t *          }\n\t\t\t\t *        }\n\t\t\t\t *      } );\n\t\t\t\t *    } );\n\t\t\t\t */\n\t\t\t\t\"sSortAscending\": \": activate to sort column ascending\",\n\t\n\t\t\t\t/**\n\t\t\t\t * ARIA label that is added to the table headers when the column may be\n\t\t\t\t * sorted descending by activing the column (click or return when focused).\n\t\t\t\t * Note that the column header is prefixed to this string.\n\t\t\t\t *  @type string\n\t\t\t\t *  @default : activate to sort column ascending\n\t\t\t\t *\n\t\t\t\t *  @dtopt Language\n\t\t\t\t *  @name DataTable.defaults.language.aria.sortDescending\n\t\t\t\t *\n\t\t\t\t *  @example\n\t\t\t\t *    $(document).ready( function() {\n\t\t\t\t *      $('#example').dataTable( {\n\t\t\t\t *        \"language\": {\n\t\t\t\t *          \"aria\": {\n\t\t\t\t *            \"sortDescending\": \" - click/return to sort descending\"\n\t\t\t\t *          }\n\t\t\t\t *        }\n\t\t\t\t *      } );\n\t\t\t\t *    } );\n\t\t\t\t */\n\t\t\t\t\"sSortDescending\": \": activate to sort column descending\"\n\t\t\t},\n\t\n\t\t\t/**\n\t\t\t * Pagination string used by DataTables for the built-in pagination\n\t\t\t * control types.\n\t\t\t *  @namespace\n\t\t\t *  @name DataTable.defaults.language.paginate\n\t\t\t */\n\t\t\t\"oPaginate\": {\n\t\t\t\t/**\n\t\t\t\t * Text to use when using the 'full_numbers' type of pagination for the\n\t\t\t\t * button to take the user to the first page.\n\t\t\t\t *  @type string\n\t\t\t\t *  @default First\n\t\t\t\t *\n\t\t\t\t *  @dtopt Language\n\t\t\t\t *  @name DataTable.defaults.language.paginate.first\n\t\t\t\t *\n\t\t\t\t *  @example\n\t\t\t\t *    $(document).ready( function() {\n\t\t\t\t *      $('#example').dataTable( {\n\t\t\t\t *        \"language\": {\n\t\t\t\t *          \"paginate\": {\n\t\t\t\t *            \"first\": \"First page\"\n\t\t\t\t *          }\n\t\t\t\t *        }\n\t\t\t\t *      } );\n\t\t\t\t *    } );\n\t\t\t\t */\n\t\t\t\t\"sFirst\": \"First\",\n\t\n\t\n\t\t\t\t/**\n\t\t\t\t * Text to use when using the 'full_numbers' type of pagination for the\n\t\t\t\t * button to take the user to the last page.\n\t\t\t\t *  @type string\n\t\t\t\t *  @default Last\n\t\t\t\t *\n\t\t\t\t *  @dtopt Language\n\t\t\t\t *  @name DataTable.defaults.language.paginate.last\n\t\t\t\t *\n\t\t\t\t *  @example\n\t\t\t\t *    $(document).ready( function() {\n\t\t\t\t *      $('#example').dataTable( {\n\t\t\t\t *        \"language\": {\n\t\t\t\t *          \"paginate\": {\n\t\t\t\t *            \"last\": \"Last page\"\n\t\t\t\t *          }\n\t\t\t\t *        }\n\t\t\t\t *      } );\n\t\t\t\t *    } );\n\t\t\t\t */\n\t\t\t\t\"sLast\": \"Last\",\n\t\n\t\n\t\t\t\t/**\n\t\t\t\t * Text to use for the 'next' pagination button (to take the user to the\n\t\t\t\t * next page).\n\t\t\t\t *  @type string\n\t\t\t\t *  @default Next\n\t\t\t\t *\n\t\t\t\t *  @dtopt Language\n\t\t\t\t *  @name DataTable.defaults.language.paginate.next\n\t\t\t\t *\n\t\t\t\t *  @example\n\t\t\t\t *    $(document).ready( function() {\n\t\t\t\t *      $('#example').dataTable( {\n\t\t\t\t *        \"language\": {\n\t\t\t\t *          \"paginate\": {\n\t\t\t\t *            \"next\": \"Next page\"\n\t\t\t\t *          }\n\t\t\t\t *        }\n\t\t\t\t *      } );\n\t\t\t\t *    } );\n\t\t\t\t */\n\t\t\t\t\"sNext\": \"Next\",\n\t\n\t\n\t\t\t\t/**\n\t\t\t\t * Text to use for the 'previous' pagination button (to take the user to\n\t\t\t\t * the previous page).\n\t\t\t\t *  @type string\n\t\t\t\t *  @default Previous\n\t\t\t\t *\n\t\t\t\t *  @dtopt Language\n\t\t\t\t *  @name DataTable.defaults.language.paginate.previous\n\t\t\t\t *\n\t\t\t\t *  @example\n\t\t\t\t *    $(document).ready( function() {\n\t\t\t\t *      $('#example').dataTable( {\n\t\t\t\t *        \"language\": {\n\t\t\t\t *          \"paginate\": {\n\t\t\t\t *            \"previous\": \"Previous page\"\n\t\t\t\t *          }\n\t\t\t\t *        }\n\t\t\t\t *      } );\n\t\t\t\t *    } );\n\t\t\t\t */\n\t\t\t\t\"sPrevious\": \"Previous\"\n\t\t\t},\n\t\n\t\t\t/**\n\t\t\t * This string is shown in preference to `zeroRecords` when the table is\n\t\t\t * empty of data (regardless of filtering). Note that this is an optional\n\t\t\t * parameter - if it is not given, the value of `zeroRecords` will be used\n\t\t\t * instead (either the default or given value).\n\t\t\t *  @type string\n\t\t\t *  @default No data available in table\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.emptyTable\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"emptyTable\": \"No data available in table\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sEmptyTable\": \"No data available in table\",\n\t\n\t\n\t\t\t/**\n\t\t\t * This string gives information to the end user about the information\n\t\t\t * that is current on display on the page. The following tokens can be\n\t\t\t * used in the string and will be dynamically replaced as the table\n\t\t\t * display updates. This tokens can be placed anywhere in the string, or\n\t\t\t * removed as needed by the language requires:\n\t\t\t *\n\t\t\t * * `\\_START\\_` - Display index of the first record on the current page\n\t\t\t * * `\\_END\\_` - Display index of the last record on the current page\n\t\t\t * * `\\_TOTAL\\_` - Number of records in the table after filtering\n\t\t\t * * `\\_MAX\\_` - Number of records in the table without filtering\n\t\t\t * * `\\_PAGE\\_` - Current page number\n\t\t\t * * `\\_PAGES\\_` - Total number of pages of data in the table\n\t\t\t *\n\t\t\t *  @type string\n\t\t\t *  @default Showing _START_ to _END_ of _TOTAL_ entries\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.info\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"info\": \"Showing page _PAGE_ of _PAGES_\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sInfo\": \"Showing _START_ to _END_ of _TOTAL_ entries\",\n\t\n\t\n\t\t\t/**\n\t\t\t * Display information string for when the table is empty. Typically the\n\t\t\t * format of this string should match `info`.\n\t\t\t *  @type string\n\t\t\t *  @default Showing 0 to 0 of 0 entries\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.infoEmpty\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"infoEmpty\": \"No entries to show\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sInfoEmpty\": \"Showing 0 to 0 of 0 entries\",\n\t\n\t\n\t\t\t/**\n\t\t\t * When a user filters the information in a table, this string is appended\n\t\t\t * to the information (`info`) to give an idea of how strong the filtering\n\t\t\t * is. The variable _MAX_ is dynamically updated.\n\t\t\t *  @type string\n\t\t\t *  @default (filtered from _MAX_ total entries)\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.infoFiltered\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"infoFiltered\": \" - filtering from _MAX_ records\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sInfoFiltered\": \"(filtered from _MAX_ total entries)\",\n\t\n\t\n\t\t\t/**\n\t\t\t * If can be useful to append extra information to the info string at times,\n\t\t\t * and this variable does exactly that. This information will be appended to\n\t\t\t * the `info` (`infoEmpty` and `infoFiltered` in whatever combination they are\n\t\t\t * being used) at all times.\n\t\t\t *  @type string\n\t\t\t *  @default <i>Empty string</i>\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.infoPostFix\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"infoPostFix\": \"All records shown are derived from real information.\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sInfoPostFix\": \"\",\n\t\n\t\n\t\t\t/**\n\t\t\t * This decimal place operator is a little different from the other\n\t\t\t * language options since DataTables doesn't output floating point\n\t\t\t * numbers, so it won't ever use this for display of a number. Rather,\n\t\t\t * what this parameter does is modify the sort methods of the table so\n\t\t\t * that numbers which are in a format which has a character other than\n\t\t\t * a period (`.`) as a decimal place will be sorted numerically.\n\t\t\t *\n\t\t\t * Note that numbers with different decimal places cannot be shown in\n\t\t\t * the same table and still be sortable, the table must be consistent.\n\t\t\t * However, multiple different tables on the page can use different\n\t\t\t * decimal place characters.\n\t\t\t *  @type string\n\t\t\t *  @default \n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.decimal\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"decimal\": \",\"\n\t\t\t *          \"thousands\": \".\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sDecimal\": \"\",\n\t\n\t\n\t\t\t/**\n\t\t\t * DataTables has a build in number formatter (`formatNumber`) which is\n\t\t\t * used to format large numbers that are used in the table information.\n\t\t\t * By default a comma is used, but this can be trivially changed to any\n\t\t\t * character you wish with this parameter.\n\t\t\t *  @type string\n\t\t\t *  @default ,\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.thousands\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"thousands\": \"'\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sThousands\": \",\",\n\t\n\t\n\t\t\t/**\n\t\t\t * Detail the action that will be taken when the drop down menu for the\n\t\t\t * pagination length option is changed. The '_MENU_' variable is replaced\n\t\t\t * with a default select list of 10, 25, 50 and 100, and can be replaced\n\t\t\t * with a custom select box if required.\n\t\t\t *  @type string\n\t\t\t *  @default Show _MENU_ entries\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.lengthMenu\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Language change only\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"lengthMenu\": \"Display _MENU_ records\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Language and options change\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"lengthMenu\": 'Display <select>'+\n\t\t\t *            '<option value=\"10\">10</option>'+\n\t\t\t *            '<option value=\"20\">20</option>'+\n\t\t\t *            '<option value=\"30\">30</option>'+\n\t\t\t *            '<option value=\"40\">40</option>'+\n\t\t\t *            '<option value=\"50\">50</option>'+\n\t\t\t *            '<option value=\"-1\">All</option>'+\n\t\t\t *            '</select> records'\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sLengthMenu\": \"Show _MENU_ entries\",\n\t\n\t\n\t\t\t/**\n\t\t\t * When using Ajax sourced data and during the first draw when DataTables is\n\t\t\t * gathering the data, this message is shown in an empty row in the table to\n\t\t\t * indicate to the end user the the data is being loaded. Note that this\n\t\t\t * parameter is not used when loading data by server-side processing, just\n\t\t\t * Ajax sourced data with client-side processing.\n\t\t\t *  @type string\n\t\t\t *  @default Loading...\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.loadingRecords\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"loadingRecords\": \"Please wait - loading...\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sLoadingRecords\": \"Loading...\",\n\t\n\t\n\t\t\t/**\n\t\t\t * Text which is displayed when the table is processing a user action\n\t\t\t * (usually a sort command or similar).\n\t\t\t *  @type string\n\t\t\t *  @default Processing...\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.processing\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"processing\": \"DataTables is currently busy\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sProcessing\": \"Processing...\",\n\t\n\t\n\t\t\t/**\n\t\t\t * Details the actions that will be taken when the user types into the\n\t\t\t * filtering input text box. The variable \"_INPUT_\", if used in the string,\n\t\t\t * is replaced with the HTML text box for the filtering input allowing\n\t\t\t * control over where it appears in the string. If \"_INPUT_\" is not given\n\t\t\t * then the input box is appended to the string automatically.\n\t\t\t *  @type string\n\t\t\t *  @default Search:\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.search\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Input text box will be appended at the end automatically\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"search\": \"Filter records:\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Specify where the filter should appear\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"search\": \"Apply filter _INPUT_ to table\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sSearch\": \"Search:\",\n\t\n\t\n\t\t\t/**\n\t\t\t * Assign a `placeholder` attribute to the search `input` element\n\t\t\t *  @type string\n\t\t\t *  @default \n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.searchPlaceholder\n\t\t\t */\n\t\t\t\"sSearchPlaceholder\": \"\",\n\t\n\t\n\t\t\t/**\n\t\t\t * All of the language information can be stored in a file on the\n\t\t\t * server-side, which DataTables will look up if this parameter is passed.\n\t\t\t * It must store the URL of the language file, which is in a JSON format,\n\t\t\t * and the object has the same properties as the oLanguage object in the\n\t\t\t * initialiser object (i.e. the above parameters). Please refer to one of\n\t\t\t * the example language files to see how this works in action.\n\t\t\t *  @type string\n\t\t\t *  @default <i>Empty string - i.e. disabled</i>\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.url\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"url\": \"http://www.sprymedia.co.uk/dataTables/lang.txt\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sUrl\": \"\",\n\t\n\t\n\t\t\t/**\n\t\t\t * Text shown inside the table records when the is no information to be\n\t\t\t * displayed after filtering. `emptyTable` is shown when there is simply no\n\t\t\t * information in the table at all (regardless of filtering).\n\t\t\t *  @type string\n\t\t\t *  @default No matching records found\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.zeroRecords\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"zeroRecords\": \"No records to display\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sZeroRecords\": \"No matching records found\"\n\t\t},\n\t\n\t\n\t\t/**\n\t\t * This parameter allows you to have define the global filtering state at\n\t\t * initialisation time. As an object the `search` parameter must be\n\t\t * defined, but all other parameters are optional. When `regex` is true,\n\t\t * the search string will be treated as a regular expression, when false\n\t\t * (default) it will be treated as a straight string. When `smart`\n\t\t * DataTables will use it's smart filtering methods (to word match at\n\t\t * any point in the data), when false this will not be done.\n\t\t *  @namespace\n\t\t *  @extends DataTable.models.oSearch\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.search\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"search\": {\"search\": \"Initial search\"}\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"oSearch\": $.extend( {}, DataTable.models.oSearch ),\n\t\n\t\n\t\t/**\n\t\t * __Deprecated__ The functionality provided by this parameter has now been\n\t\t * superseded by that provided through `ajax`, which should be used instead.\n\t\t *\n\t\t * By default DataTables will look for the property `data` (or `aaData` for\n\t\t * compatibility with DataTables 1.9-) when obtaining data from an Ajax\n\t\t * source or for server-side processing - this parameter allows that\n\t\t * property to be changed. You can use Javascript dotted object notation to\n\t\t * get a data source for multiple levels of nesting.\n\t\t *  @type string\n\t\t *  @default data\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @dtopt Server-side\n\t\t *  @name DataTable.defaults.ajaxDataProp\n\t\t *\n\t\t *  @deprecated 1.10. Please use `ajax` for this functionality now.\n\t\t */\n\t\t\"sAjaxDataProp\": \"data\",\n\t\n\t\n\t\t/**\n\t\t * __Deprecated__ The functionality provided by this parameter has now been\n\t\t * superseded by that provided through `ajax`, which should be used instead.\n\t\t *\n\t\t * You can instruct DataTables to load data from an external\n\t\t * source using this parameter (use aData if you want to pass data in you\n\t\t * already have). Simply provide a url a JSON object can be obtained from.\n\t\t *  @type string\n\t\t *  @default null\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @dtopt Server-side\n\t\t *  @name DataTable.defaults.ajaxSource\n\t\t *\n\t\t *  @deprecated 1.10. Please use `ajax` for this functionality now.\n\t\t */\n\t\t\"sAjaxSource\": null,\n\t\n\t\n\t\t/**\n\t\t * This initialisation variable allows you to specify exactly where in the\n\t\t * DOM you want DataTables to inject the various controls it adds to the page\n\t\t * (for example you might want the pagination controls at the top of the\n\t\t * table). DIV elements (with or without a custom class) can also be added to\n\t\t * aid styling. The follow syntax is used:\n\t\t *   <ul>\n\t\t *     <li>The following options are allowed:\n\t\t *       <ul>\n\t\t *         <li>'l' - Length changing</li>\n\t\t *         <li>'f' - Filtering input</li>\n\t\t *         <li>'t' - The table!</li>\n\t\t *         <li>'i' - Information</li>\n\t\t *         <li>'p' - Pagination</li>\n\t\t *         <li>'r' - pRocessing</li>\n\t\t *       </ul>\n\t\t *     </li>\n\t\t *     <li>The following constants are allowed:\n\t\t *       <ul>\n\t\t *         <li>'H' - jQueryUI theme \"header\" classes ('fg-toolbar ui-widget-header ui-corner-tl ui-corner-tr ui-helper-clearfix')</li>\n\t\t *         <li>'F' - jQueryUI theme \"footer\" classes ('fg-toolbar ui-widget-header ui-corner-bl ui-corner-br ui-helper-clearfix')</li>\n\t\t *       </ul>\n\t\t *     </li>\n\t\t *     <li>The following syntax is expected:\n\t\t *       <ul>\n\t\t *         <li>'&lt;' and '&gt;' - div elements</li>\n\t\t *         <li>'&lt;\"class\" and '&gt;' - div with a class</li>\n\t\t *         <li>'&lt;\"#id\" and '&gt;' - div with an ID</li>\n\t\t *       </ul>\n\t\t *     </li>\n\t\t *     <li>Examples:\n\t\t *       <ul>\n\t\t *         <li>'&lt;\"wrapper\"flipt&gt;'</li>\n\t\t *         <li>'&lt;lf&lt;t&gt;ip&gt;'</li>\n\t\t *       </ul>\n\t\t *     </li>\n\t\t *   </ul>\n\t\t *  @type string\n\t\t *  @default lfrtip <i>(when `jQueryUI` is false)</i> <b>or</b>\n\t\t *    <\"H\"lfr>t<\"F\"ip> <i>(when `jQueryUI` is true)</i>\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.dom\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"dom\": '&lt;\"top\"i&gt;rt&lt;\"bottom\"flp&gt;&lt;\"clear\"&gt;'\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sDom\": \"lfrtip\",\n\t\n\t\n\t\t/**\n\t\t * Search delay option. This will throttle full table searches that use the\n\t\t * DataTables provided search input element (it does not effect calls to\n\t\t * `dt-api search()`, providing a delay before the search is made.\n\t\t *  @type integer\n\t\t *  @default 0\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.searchDelay\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"searchDelay\": 200\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"searchDelay\": null,\n\t\n\t\n\t\t/**\n\t\t * DataTables features six different built-in options for the buttons to\n\t\t * display for pagination control:\n\t\t *\n\t\t * * `numbers` - Page number buttons only\n\t\t * * `simple` - 'Previous' and 'Next' buttons only\n\t\t * * 'simple_numbers` - 'Previous' and 'Next' buttons, plus page numbers\n\t\t * * `full` - 'First', 'Previous', 'Next' and 'Last' buttons\n\t\t * * `full_numbers` - 'First', 'Previous', 'Next' and 'Last' buttons, plus page numbers\n\t\t * * `first_last_numbers` - 'First' and 'Last' buttons, plus page numbers\n\t\t *  \n\t\t * Further methods can be added using {@link DataTable.ext.oPagination}.\n\t\t *  @type string\n\t\t *  @default simple_numbers\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.pagingType\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"pagingType\": \"full_numbers\"\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"sPaginationType\": \"simple_numbers\",\n\t\n\t\n\t\t/**\n\t\t * Enable horizontal scrolling. When a table is too wide to fit into a\n\t\t * certain layout, or you have a large number of columns in the table, you\n\t\t * can enable x-scrolling to show the table in a viewport, which can be\n\t\t * scrolled. This property can be `true` which will allow the table to\n\t\t * scroll horizontally when needed, or any CSS unit, or a number (in which\n\t\t * case it will be treated as a pixel measurement). Setting as simply `true`\n\t\t * is recommended.\n\t\t *  @type boolean|string\n\t\t *  @default <i>blank string - i.e. disabled</i>\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.scrollX\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"scrollX\": true,\n\t\t *        \"scrollCollapse\": true\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sScrollX\": \"\",\n\t\n\t\n\t\t/**\n\t\t * This property can be used to force a DataTable to use more width than it\n\t\t * might otherwise do when x-scrolling is enabled. For example if you have a\n\t\t * table which requires to be well spaced, this parameter is useful for\n\t\t * \"over-sizing\" the table, and thus forcing scrolling. This property can by\n\t\t * any CSS unit, or a number (in which case it will be treated as a pixel\n\t\t * measurement).\n\t\t *  @type string\n\t\t *  @default <i>blank string - i.e. disabled</i>\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.scrollXInner\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"scrollX\": \"100%\",\n\t\t *        \"scrollXInner\": \"110%\"\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sScrollXInner\": \"\",\n\t\n\t\n\t\t/**\n\t\t * Enable vertical scrolling. Vertical scrolling will constrain the DataTable\n\t\t * to the given height, and enable scrolling for any data which overflows the\n\t\t * current viewport. This can be used as an alternative to paging to display\n\t\t * a lot of data in a small area (although paging and scrolling can both be\n\t\t * enabled at the same time). This property can be any CSS unit, or a number\n\t\t * (in which case it will be treated as a pixel measurement).\n\t\t *  @type string\n\t\t *  @default <i>blank string - i.e. disabled</i>\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.scrollY\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"scrollY\": \"200px\",\n\t\t *        \"paginate\": false\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sScrollY\": \"\",\n\t\n\t\n\t\t/**\n\t\t * __Deprecated__ The functionality provided by this parameter has now been\n\t\t * superseded by that provided through `ajax`, which should be used instead.\n\t\t *\n\t\t * Set the HTTP method that is used to make the Ajax call for server-side\n\t\t * processing or Ajax sourced data.\n\t\t *  @type string\n\t\t *  @default GET\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @dtopt Server-side\n\t\t *  @name DataTable.defaults.serverMethod\n\t\t *\n\t\t *  @deprecated 1.10. Please use `ajax` for this functionality now.\n\t\t */\n\t\t\"sServerMethod\": \"GET\",\n\t\n\t\n\t\t/**\n\t\t * DataTables makes use of renderers when displaying HTML elements for\n\t\t * a table. These renderers can be added or modified by plug-ins to\n\t\t * generate suitable mark-up for a site. For example the Bootstrap\n\t\t * integration plug-in for DataTables uses a paging button renderer to\n\t\t * display pagination buttons in the mark-up required by Bootstrap.\n\t\t *\n\t\t * For further information about the renderers available see\n\t\t * DataTable.ext.renderer\n\t\t *  @type string|object\n\t\t *  @default null\n\t\t *\n\t\t *  @name DataTable.defaults.renderer\n\t\t *\n\t\t */\n\t\t\"renderer\": null,\n\t\n\t\n\t\t/**\n\t\t * Set the data property name that DataTables should use to get a row's id\n\t\t * to set as the `id` property in the node.\n\t\t *  @type string\n\t\t *  @default DT_RowId\n\t\t *\n\t\t *  @name DataTable.defaults.rowId\n\t\t */\n\t\t\"rowId\": \"DT_RowId\"\n\t};\n\t\n\t_fnHungarianMap( DataTable.defaults );\n\t\n\t\n\t\n\t/*\n\t * Developer note - See note in model.defaults.js about the use of Hungarian\n\t * notation and camel case.\n\t */\n\t\n\t/**\n\t * Column options that can be given to DataTables at initialisation time.\n\t *  @namespace\n\t */\n\tDataTable.defaults.column = {\n\t\t/**\n\t\t * Define which column(s) an order will occur on for this column. This\n\t\t * allows a column's ordering to take multiple columns into account when\n\t\t * doing a sort or use the data from a different column. For example first\n\t\t * name / last name columns make sense to do a multi-column sort over the\n\t\t * two columns.\n\t\t *  @type array|int\n\t\t *  @default null <i>Takes the value of the column index automatically</i>\n\t\t *\n\t\t *  @name DataTable.defaults.column.orderData\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"orderData\": [ 0, 1 ], \"targets\": [ 0 ] },\n\t\t *          { \"orderData\": [ 1, 0 ], \"targets\": [ 1 ] },\n\t\t *          { \"orderData\": 2, \"targets\": [ 2 ] }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          { \"orderData\": [ 0, 1 ] },\n\t\t *          { \"orderData\": [ 1, 0 ] },\n\t\t *          { \"orderData\": 2 },\n\t\t *          null,\n\t\t *          null\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"aDataSort\": null,\n\t\t\"iDataSort\": -1,\n\t\n\t\n\t\t/**\n\t\t * You can control the default ordering direction, and even alter the\n\t\t * behaviour of the sort handler (i.e. only allow ascending ordering etc)\n\t\t * using this parameter.\n\t\t *  @type array\n\t\t *  @default [ 'asc', 'desc' ]\n\t\t *\n\t\t *  @name DataTable.defaults.column.orderSequence\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"orderSequence\": [ \"asc\" ], \"targets\": [ 1 ] },\n\t\t *          { \"orderSequence\": [ \"desc\", \"asc\", \"asc\" ], \"targets\": [ 2 ] },\n\t\t *          { \"orderSequence\": [ \"desc\" ], \"targets\": [ 3 ] }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          null,\n\t\t *          { \"orderSequence\": [ \"asc\" ] },\n\t\t *          { \"orderSequence\": [ \"desc\", \"asc\", \"asc\" ] },\n\t\t *          { \"orderSequence\": [ \"desc\" ] },\n\t\t *          null\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"asSorting\": [ 'asc', 'desc' ],\n\t\n\t\n\t\t/**\n\t\t * Enable or disable filtering on the data in this column.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @name DataTable.defaults.column.searchable\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"searchable\": false, \"targets\": [ 0 ] }\n\t\t *        ] } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          { \"searchable\": false },\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          null\n\t\t *        ] } );\n\t\t *    } );\n\t\t */\n\t\t\"bSearchable\": true,\n\t\n\t\n\t\t/**\n\t\t * Enable or disable ordering on this column.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @name DataTable.defaults.column.orderable\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"orderable\": false, \"targets\": [ 0 ] }\n\t\t *        ] } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          { \"orderable\": false },\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          null\n\t\t *        ] } );\n\t\t *    } );\n\t\t */\n\t\t\"bSortable\": true,\n\t\n\t\n\t\t/**\n\t\t * Enable or disable the display of this column.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @name DataTable.defaults.column.visible\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"visible\": false, \"targets\": [ 0 ] }\n\t\t *        ] } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          { \"visible\": false },\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          null\n\t\t *        ] } );\n\t\t *    } );\n\t\t */\n\t\t\"bVisible\": true,\n\t\n\t\n\t\t/**\n\t\t * Developer definable function that is called whenever a cell is created (Ajax source,\n\t\t * etc) or processed for input (DOM source). This can be used as a compliment to mRender\n\t\t * allowing you to modify the DOM element (add background colour for example) when the\n\t\t * element is available.\n\t\t *  @type function\n\t\t *  @param {element} td The TD node that has been created\n\t\t *  @param {*} cellData The Data for the cell\n\t\t *  @param {array|object} rowData The data for the whole row\n\t\t *  @param {int} row The row index for the aoData data store\n\t\t *  @param {int} col The column index for aoColumns\n\t\t *\n\t\t *  @name DataTable.defaults.column.createdCell\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [ {\n\t\t *          \"targets\": [3],\n\t\t *          \"createdCell\": function (td, cellData, rowData, row, col) {\n\t\t *            if ( cellData == \"1.7\" ) {\n\t\t *              $(td).css('color', 'blue')\n\t\t *            }\n\t\t *          }\n\t\t *        } ]\n\t\t *      });\n\t\t *    } );\n\t\t */\n\t\t\"fnCreatedCell\": null,\n\t\n\t\n\t\t/**\n\t\t * This parameter has been replaced by `data` in DataTables to ensure naming\n\t\t * consistency. `dataProp` can still be used, as there is backwards\n\t\t * compatibility in DataTables for this option, but it is strongly\n\t\t * recommended that you use `data` in preference to `dataProp`.\n\t\t *  @name DataTable.defaults.column.dataProp\n\t\t */\n\t\n\t\n\t\t/**\n\t\t * This property can be used to read data from any data source property,\n\t\t * including deeply nested objects / properties. `data` can be given in a\n\t\t * number of different ways which effect its behaviour:\n\t\t *\n\t\t * * `integer` - treated as an array index for the data source. This is the\n\t\t *   default that DataTables uses (incrementally increased for each column).\n\t\t * * `string` - read an object property from the data source. There are\n\t\t *   three 'special' options that can be used in the string to alter how\n\t\t *   DataTables reads the data from the source object:\n\t\t *    * `.` - Dotted Javascript notation. Just as you use a `.` in\n\t\t *      Javascript to read from nested objects, so to can the options\n\t\t *      specified in `data`. For example: `browser.version` or\n\t\t *      `browser.name`. If your object parameter name contains a period, use\n\t\t *      `\\\\` to escape it - i.e. `first\\\\.name`.\n\t\t *    * `[]` - Array notation. DataTables can automatically combine data\n\t\t *      from and array source, joining the data with the characters provided\n\t\t *      between the two brackets. For example: `name[, ]` would provide a\n\t\t *      comma-space separated list from the source array. If no characters\n\t\t *      are provided between the brackets, the original array source is\n\t\t *      returned.\n\t\t *    * `()` - Function notation. Adding `()` to the end of a parameter will\n\t\t *      execute a function of the name given. For example: `browser()` for a\n\t\t *      simple function on the data source, `browser.version()` for a\n\t\t *      function in a nested property or even `browser().version` to get an\n\t\t *      object property if the function called returns an object. Note that\n\t\t *      function notation is recommended for use in `render` rather than\n\t\t *      `data` as it is much simpler to use as a renderer.\n\t\t * * `null` - use the original data source for the row rather than plucking\n\t\t *   data directly from it. This action has effects on two other\n\t\t *   initialisation options:\n\t\t *    * `defaultContent` - When null is given as the `data` option and\n\t\t *      `defaultContent` is specified for the column, the value defined by\n\t\t *      `defaultContent` will be used for the cell.\n\t\t *    * `render` - When null is used for the `data` option and the `render`\n\t\t *      option is specified for the column, the whole data source for the\n\t\t *      row is used for the renderer.\n\t\t * * `function` - the function given will be executed whenever DataTables\n\t\t *   needs to set or get the data for a cell in the column. The function\n\t\t *   takes three parameters:\n\t\t *    * Parameters:\n\t\t *      * `{array|object}` The data source for the row\n\t\t *      * `{string}` The type call data requested - this will be 'set' when\n\t\t *        setting data or 'filter', 'display', 'type', 'sort' or undefined\n\t\t *        when gathering data. Note that when `undefined` is given for the\n\t\t *        type DataTables expects to get the raw data for the object back<\n\t\t *      * `{*}` Data to set when the second parameter is 'set'.\n\t\t *    * Return:\n\t\t *      * The return value from the function is not required when 'set' is\n\t\t *        the type of call, but otherwise the return is what will be used\n\t\t *        for the data requested.\n\t\t *\n\t\t * Note that `data` is a getter and setter option. If you just require\n\t\t * formatting of data for output, you will likely want to use `render` which\n\t\t * is simply a getter and thus simpler to use.\n\t\t *\n\t\t * Note that prior to DataTables 1.9.2 `data` was called `mDataProp`. The\n\t\t * name change reflects the flexibility of this property and is consistent\n\t\t * with the naming of mRender. If 'mDataProp' is given, then it will still\n\t\t * be used by DataTables, as it automatically maps the old name to the new\n\t\t * if required.\n\t\t *\n\t\t *  @type string|int|function|null\n\t\t *  @default null <i>Use automatically calculated column index</i>\n\t\t *\n\t\t *  @name DataTable.defaults.column.data\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Read table data from objects\n\t\t *    // JSON structure for each row:\n\t\t *    //   {\n\t\t *    //      \"engine\": {value},\n\t\t *    //      \"browser\": {value},\n\t\t *    //      \"platform\": {value},\n\t\t *    //      \"version\": {value},\n\t\t *    //      \"grade\": {value}\n\t\t *    //   }\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"ajaxSource\": \"sources/objects.txt\",\n\t\t *        \"columns\": [\n\t\t *          { \"data\": \"engine\" },\n\t\t *          { \"data\": \"browser\" },\n\t\t *          { \"data\": \"platform\" },\n\t\t *          { \"data\": \"version\" },\n\t\t *          { \"data\": \"grade\" }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Read information from deeply nested objects\n\t\t *    // JSON structure for each row:\n\t\t *    //   {\n\t\t *    //      \"engine\": {value},\n\t\t *    //      \"browser\": {value},\n\t\t *    //      \"platform\": {\n\t\t *    //         \"inner\": {value}\n\t\t *    //      },\n\t\t *    //      \"details\": [\n\t\t *    //         {value}, {value}\n\t\t *    //      ]\n\t\t *    //   }\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"ajaxSource\": \"sources/deep.txt\",\n\t\t *        \"columns\": [\n\t\t *          { \"data\": \"engine\" },\n\t\t *          { \"data\": \"browser\" },\n\t\t *          { \"data\": \"platform.inner\" },\n\t\t *          { \"data\": \"details.0\" },\n\t\t *          { \"data\": \"details.1\" }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `data` as a function to provide different information for\n\t\t *    // sorting, filtering and display. In this case, currency (price)\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [ {\n\t\t *          \"targets\": [ 0 ],\n\t\t *          \"data\": function ( source, type, val ) {\n\t\t *            if (type === 'set') {\n\t\t *              source.price = val;\n\t\t *              // Store the computed dislay and filter values for efficiency\n\t\t *              source.price_display = val==\"\" ? \"\" : \"$\"+numberFormat(val);\n\t\t *              source.price_filter  = val==\"\" ? \"\" : \"$\"+numberFormat(val)+\" \"+val;\n\t\t *              return;\n\t\t *            }\n\t\t *            else if (type === 'display') {\n\t\t *              return source.price_display;\n\t\t *            }\n\t\t *            else if (type === 'filter') {\n\t\t *              return source.price_filter;\n\t\t *            }\n\t\t *            // 'sort', 'type' and undefined all just use the integer\n\t\t *            return source.price;\n\t\t *          }\n\t\t *        } ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using default content\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [ {\n\t\t *          \"targets\": [ 0 ],\n\t\t *          \"data\": null,\n\t\t *          \"defaultContent\": \"Click to edit\"\n\t\t *        } ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using array notation - outputting a list from an array\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [ {\n\t\t *          \"targets\": [ 0 ],\n\t\t *          \"data\": \"name[, ]\"\n\t\t *        } ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t */\n\t\t\"mData\": null,\n\t\n\t\n\t\t/**\n\t\t * This property is the rendering partner to `data` and it is suggested that\n\t\t * when you want to manipulate data for display (including filtering,\n\t\t * sorting etc) without altering the underlying data for the table, use this\n\t\t * property. `render` can be considered to be the the read only companion to\n\t\t * `data` which is read / write (then as such more complex). Like `data`\n\t\t * this option can be given in a number of different ways to effect its\n\t\t * behaviour:\n\t\t *\n\t\t * * `integer` - treated as an array index for the data source. This is the\n\t\t *   default that DataTables uses (incrementally increased for each column).\n\t\t * * `string` - read an object property from the data source. There are\n\t\t *   three 'special' options that can be used in the string to alter how\n\t\t *   DataTables reads the data from the source object:\n\t\t *    * `.` - Dotted Javascript notation. Just as you use a `.` in\n\t\t *      Javascript to read from nested objects, so to can the options\n\t\t *      specified in `data`. For example: `browser.version` or\n\t\t *      `browser.name`. If your object parameter name contains a period, use\n\t\t *      `\\\\` to escape it - i.e. `first\\\\.name`.\n\t\t *    * `[]` - Array notation. DataTables can automatically combine data\n\t\t *      from and array source, joining the data with the characters provided\n\t\t *      between the two brackets. For example: `name[, ]` would provide a\n\t\t *      comma-space separated list from the source array. If no characters\n\t\t *      are provided between the brackets, the original array source is\n\t\t *      returned.\n\t\t *    * `()` - Function notation. Adding `()` to the end of a parameter will\n\t\t *      execute a function of the name given. For example: `browser()` for a\n\t\t *      simple function on the data source, `browser.version()` for a\n\t\t *      function in a nested property or even `browser().version` to get an\n\t\t *      object property if the function called returns an object.\n\t\t * * `object` - use different data for the different data types requested by\n\t\t *   DataTables ('filter', 'display', 'type' or 'sort'). The property names\n\t\t *   of the object is the data type the property refers to and the value can\n\t\t *   defined using an integer, string or function using the same rules as\n\t\t *   `render` normally does. Note that an `_` option _must_ be specified.\n\t\t *   This is the default value to use if you haven't specified a value for\n\t\t *   the data type requested by DataTables.\n\t\t * * `function` - the function given will be executed whenever DataTables\n\t\t *   needs to set or get the data for a cell in the column. The function\n\t\t *   takes three parameters:\n\t\t *    * Parameters:\n\t\t *      * {array|object} The data source for the row (based on `data`)\n\t\t *      * {string} The type call data requested - this will be 'filter',\n\t\t *        'display', 'type' or 'sort'.\n\t\t *      * {array|object} The full data source for the row (not based on\n\t\t *        `data`)\n\t\t *    * Return:\n\t\t *      * The return value from the function is what will be used for the\n\t\t *        data requested.\n\t\t *\n\t\t *  @type string|int|function|object|null\n\t\t *  @default null Use the data source value.\n\t\t *\n\t\t *  @name DataTable.defaults.column.render\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Create a comma separated list from an array of objects\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"ajaxSource\": \"sources/deep.txt\",\n\t\t *        \"columns\": [\n\t\t *          { \"data\": \"engine\" },\n\t\t *          { \"data\": \"browser\" },\n\t\t *          {\n\t\t *            \"data\": \"platform\",\n\t\t *            \"render\": \"[, ].name\"\n\t\t *          }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Execute a function to obtain data\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [ {\n\t\t *          \"targets\": [ 0 ],\n\t\t *          \"data\": null, // Use the full data source object for the renderer's source\n\t\t *          \"render\": \"browserName()\"\n\t\t *        } ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // As an object, extracting different data for the different types\n\t\t *    // This would be used with a data source such as:\n\t\t *    //   { \"phone\": 5552368, \"phone_filter\": \"5552368 555-2368\", \"phone_display\": \"555-2368\" }\n\t\t *    // Here the `phone` integer is used for sorting and type detection, while `phone_filter`\n\t\t *    // (which has both forms) is used for filtering for if a user inputs either format, while\n\t\t *    // the formatted phone number is the one that is shown in the table.\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [ {\n\t\t *          \"targets\": [ 0 ],\n\t\t *          \"data\": null, // Use the full data source object for the renderer's source\n\t\t *          \"render\": {\n\t\t *            \"_\": \"phone\",\n\t\t *            \"filter\": \"phone_filter\",\n\t\t *            \"display\": \"phone_display\"\n\t\t *          }\n\t\t *        } ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Use as a function to create a link from the data source\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [ {\n\t\t *          \"targets\": [ 0 ],\n\t\t *          \"data\": \"download_link\",\n\t\t *          \"render\": function ( data, type, full ) {\n\t\t *            return '<a href=\"'+data+'\">Download</a>';\n\t\t *          }\n\t\t *        } ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"mRender\": null,\n\t\n\t\n\t\t/**\n\t\t * Change the cell type created for the column - either TD cells or TH cells. This\n\t\t * can be useful as TH cells have semantic meaning in the table body, allowing them\n\t\t * to act as a header for a row (you may wish to add scope='row' to the TH elements).\n\t\t *  @type string\n\t\t *  @default td\n\t\t *\n\t\t *  @name DataTable.defaults.column.cellType\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Make the first column use TH cells\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [ {\n\t\t *          \"targets\": [ 0 ],\n\t\t *          \"cellType\": \"th\"\n\t\t *        } ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sCellType\": \"td\",\n\t\n\t\n\t\t/**\n\t\t * Class to give to each cell in this column.\n\t\t *  @type string\n\t\t *  @default <i>Empty string</i>\n\t\t *\n\t\t *  @name DataTable.defaults.column.class\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"class\": \"my_class\", \"targets\": [ 0 ] }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          { \"class\": \"my_class\" },\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          null\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sClass\": \"\",\n\t\n\t\t/**\n\t\t * When DataTables calculates the column widths to assign to each column,\n\t\t * it finds the longest string in each column and then constructs a\n\t\t * temporary table and reads the widths from that. The problem with this\n\t\t * is that \"mmm\" is much wider then \"iiii\", but the latter is a longer\n\t\t * string - thus the calculation can go wrong (doing it properly and putting\n\t\t * it into an DOM object and measuring that is horribly(!) slow). Thus as\n\t\t * a \"work around\" we provide this option. It will append its value to the\n\t\t * text that is found to be the longest string for the column - i.e. padding.\n\t\t * Generally you shouldn't need this!\n\t\t *  @type string\n\t\t *  @default <i>Empty string<i>\n\t\t *\n\t\t *  @name DataTable.defaults.column.contentPadding\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          {\n\t\t *            \"contentPadding\": \"mmm\"\n\t\t *          }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sContentPadding\": \"\",\n\t\n\t\n\t\t/**\n\t\t * Allows a default value to be given for a column's data, and will be used\n\t\t * whenever a null data source is encountered (this can be because `data`\n\t\t * is set to null, or because the data source itself is null).\n\t\t *  @type string\n\t\t *  @default null\n\t\t *\n\t\t *  @name DataTable.defaults.column.defaultContent\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          {\n\t\t *            \"data\": null,\n\t\t *            \"defaultContent\": \"Edit\",\n\t\t *            \"targets\": [ -1 ]\n\t\t *          }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          {\n\t\t *            \"data\": null,\n\t\t *            \"defaultContent\": \"Edit\"\n\t\t *          }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sDefaultContent\": null,\n\t\n\t\n\t\t/**\n\t\t * This parameter is only used in DataTables' server-side processing. It can\n\t\t * be exceptionally useful to know what columns are being displayed on the\n\t\t * client side, and to map these to database fields. When defined, the names\n\t\t * also allow DataTables to reorder information from the server if it comes\n\t\t * back in an unexpected order (i.e. if you switch your columns around on the\n\t\t * client-side, your server-side code does not also need updating).\n\t\t *  @type string\n\t\t *  @default <i>Empty string</i>\n\t\t *\n\t\t *  @name DataTable.defaults.column.name\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"name\": \"engine\", \"targets\": [ 0 ] },\n\t\t *          { \"name\": \"browser\", \"targets\": [ 1 ] },\n\t\t *          { \"name\": \"platform\", \"targets\": [ 2 ] },\n\t\t *          { \"name\": \"version\", \"targets\": [ 3 ] },\n\t\t *          { \"name\": \"grade\", \"targets\": [ 4 ] }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          { \"name\": \"engine\" },\n\t\t *          { \"name\": \"browser\" },\n\t\t *          { \"name\": \"platform\" },\n\t\t *          { \"name\": \"version\" },\n\t\t *          { \"name\": \"grade\" }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sName\": \"\",\n\t\n\t\n\t\t/**\n\t\t * Defines a data source type for the ordering which can be used to read\n\t\t * real-time information from the table (updating the internally cached\n\t\t * version) prior to ordering. This allows ordering to occur on user\n\t\t * editable elements such as form inputs.\n\t\t *  @type string\n\t\t *  @default std\n\t\t *\n\t\t *  @name DataTable.defaults.column.orderDataType\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"orderDataType\": \"dom-text\", \"targets\": [ 2, 3 ] },\n\t\t *          { \"type\": \"numeric\", \"targets\": [ 3 ] },\n\t\t *          { \"orderDataType\": \"dom-select\", \"targets\": [ 4 ] },\n\t\t *          { \"orderDataType\": \"dom-checkbox\", \"targets\": [ 5 ] }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          null,\n\t\t *          null,\n\t\t *          { \"orderDataType\": \"dom-text\" },\n\t\t *          { \"orderDataType\": \"dom-text\", \"type\": \"numeric\" },\n\t\t *          { \"orderDataType\": \"dom-select\" },\n\t\t *          { \"orderDataType\": \"dom-checkbox\" }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sSortDataType\": \"std\",\n\t\n\t\n\t\t/**\n\t\t * The title of this column.\n\t\t *  @type string\n\t\t *  @default null <i>Derived from the 'TH' value for this column in the\n\t\t *    original HTML table.</i>\n\t\t *\n\t\t *  @name DataTable.defaults.column.title\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"title\": \"My column title\", \"targets\": [ 0 ] }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          { \"title\": \"My column title\" },\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          null\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sTitle\": null,\n\t\n\t\n\t\t/**\n\t\t * The type allows you to specify how the data for this column will be\n\t\t * ordered. Four types (string, numeric, date and html (which will strip\n\t\t * HTML tags before ordering)) are currently available. Note that only date\n\t\t * formats understood by Javascript's Date() object will be accepted as type\n\t\t * date. For example: \"Mar 26, 2008 5:03 PM\". May take the values: 'string',\n\t\t * 'numeric', 'date' or 'html' (by default). Further types can be adding\n\t\t * through plug-ins.\n\t\t *  @type string\n\t\t *  @default null <i>Auto-detected from raw data</i>\n\t\t *\n\t\t *  @name DataTable.defaults.column.type\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"type\": \"html\", \"targets\": [ 0 ] }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          { \"type\": \"html\" },\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          null\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sType\": null,\n\t\n\t\n\t\t/**\n\t\t * Defining the width of the column, this parameter may take any CSS value\n\t\t * (3em, 20px etc). DataTables applies 'smart' widths to columns which have not\n\t\t * been given a specific width through this interface ensuring that the table\n\t\t * remains readable.\n\t\t *  @type string\n\t\t *  @default null <i>Automatic</i>\n\t\t *\n\t\t *  @name DataTable.defaults.column.width\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"width\": \"20%\", \"targets\": [ 0 ] }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          { \"width\": \"20%\" },\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          null\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sWidth\": null\n\t};\n\t\n\t_fnHungarianMap( DataTable.defaults.column );\n\t\n\t\n\t\n\t/**\n\t * DataTables settings object - this holds all the information needed for a\n\t * given table, including configuration, data and current application of the\n\t * table options. DataTables does not have a single instance for each DataTable\n\t * with the settings attached to that instance, but rather instances of the\n\t * DataTable \"class\" are created on-the-fly as needed (typically by a\n\t * $().dataTable() call) and the settings object is then applied to that\n\t * instance.\n\t *\n\t * Note that this object is related to {@link DataTable.defaults} but this\n\t * one is the internal data store for DataTables's cache of columns. It should\n\t * NOT be manipulated outside of DataTables. Any configuration should be done\n\t * through the initialisation options.\n\t *  @namespace\n\t *  @todo Really should attach the settings object to individual instances so we\n\t *    don't need to create new instances on each $().dataTable() call (if the\n\t *    table already exists). It would also save passing oSettings around and\n\t *    into every single function. However, this is a very significant\n\t *    architecture change for DataTables and will almost certainly break\n\t *    backwards compatibility with older installations. This is something that\n\t *    will be done in 2.0.\n\t */\n\tDataTable.models.oSettings = {\n\t\t/**\n\t\t * Primary features of DataTables and their enablement state.\n\t\t *  @namespace\n\t\t */\n\t\t\"oFeatures\": {\n\t\n\t\t\t/**\n\t\t\t * Flag to say if DataTables should automatically try to calculate the\n\t\t\t * optimum table and columns widths (true) or not (false).\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bAutoWidth\": null,\n\t\n\t\t\t/**\n\t\t\t * Delay the creation of TR and TD elements until they are actually\n\t\t\t * needed by a driven page draw. This can give a significant speed\n\t\t\t * increase for Ajax source and Javascript source data, but makes no\n\t\t\t * difference at all fro DOM and server-side processing tables.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bDeferRender\": null,\n\t\n\t\t\t/**\n\t\t\t * Enable filtering on the table or not. Note that if this is disabled\n\t\t\t * then there is no filtering at all on the table, including fnFilter.\n\t\t\t * To just remove the filtering input use sDom and remove the 'f' option.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bFilter\": null,\n\t\n\t\t\t/**\n\t\t\t * Table information element (the 'Showing x of y records' div) enable\n\t\t\t * flag.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bInfo\": null,\n\t\n\t\t\t/**\n\t\t\t * Present a user control allowing the end user to change the page size\n\t\t\t * when pagination is enabled.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bLengthChange\": null,\n\t\n\t\t\t/**\n\t\t\t * Pagination enabled or not. Note that if this is disabled then length\n\t\t\t * changing must also be disabled.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bPaginate\": null,\n\t\n\t\t\t/**\n\t\t\t * Processing indicator enable flag whenever DataTables is enacting a\n\t\t\t * user request - typically an Ajax request for server-side processing.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bProcessing\": null,\n\t\n\t\t\t/**\n\t\t\t * Server-side processing enabled flag - when enabled DataTables will\n\t\t\t * get all data from the server for every draw - there is no filtering,\n\t\t\t * sorting or paging done on the client-side.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bServerSide\": null,\n\t\n\t\t\t/**\n\t\t\t * Sorting enablement flag.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bSort\": null,\n\t\n\t\t\t/**\n\t\t\t * Multi-column sorting\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bSortMulti\": null,\n\t\n\t\t\t/**\n\t\t\t * Apply a class to the columns which are being sorted to provide a\n\t\t\t * visual highlight or not. This can slow things down when enabled since\n\t\t\t * there is a lot of DOM interaction.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bSortClasses\": null,\n\t\n\t\t\t/**\n\t\t\t * State saving enablement flag.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bStateSave\": null\n\t\t},\n\t\n\t\n\t\t/**\n\t\t * Scrolling settings for a table.\n\t\t *  @namespace\n\t\t */\n\t\t\"oScroll\": {\n\t\t\t/**\n\t\t\t * When the table is shorter in height than sScrollY, collapse the\n\t\t\t * table container down to the height of the table (when true).\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bCollapse\": null,\n\t\n\t\t\t/**\n\t\t\t * Width of the scrollbar for the web-browser's platform. Calculated\n\t\t\t * during table initialisation.\n\t\t\t *  @type int\n\t\t\t *  @default 0\n\t\t\t */\n\t\t\t\"iBarWidth\": 0,\n\t\n\t\t\t/**\n\t\t\t * Viewport width for horizontal scrolling. Horizontal scrolling is\n\t\t\t * disabled if an empty string.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type string\n\t\t\t */\n\t\t\t\"sX\": null,\n\t\n\t\t\t/**\n\t\t\t * Width to expand the table to when using x-scrolling. Typically you\n\t\t\t * should not need to use this.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type string\n\t\t\t *  @deprecated\n\t\t\t */\n\t\t\t\"sXInner\": null,\n\t\n\t\t\t/**\n\t\t\t * Viewport height for vertical scrolling. Vertical scrolling is disabled\n\t\t\t * if an empty string.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type string\n\t\t\t */\n\t\t\t\"sY\": null\n\t\t},\n\t\n\t\t/**\n\t\t * Language information for the table.\n\t\t *  @namespace\n\t\t *  @extends DataTable.defaults.oLanguage\n\t\t */\n\t\t\"oLanguage\": {\n\t\t\t/**\n\t\t\t * Information callback function. See\n\t\t\t * {@link DataTable.defaults.fnInfoCallback}\n\t\t\t *  @type function\n\t\t\t *  @default null\n\t\t\t */\n\t\t\t\"fnInfoCallback\": null\n\t\t},\n\t\n\t\t/**\n\t\t * Browser support parameters\n\t\t *  @namespace\n\t\t */\n\t\t\"oBrowser\": {\n\t\t\t/**\n\t\t\t * Indicate if the browser incorrectly calculates width:100% inside a\n\t\t\t * scrolling element (IE6/7)\n\t\t\t *  @type boolean\n\t\t\t *  @default false\n\t\t\t */\n\t\t\t\"bScrollOversize\": false,\n\t\n\t\t\t/**\n\t\t\t * Determine if the vertical scrollbar is on the right or left of the\n\t\t\t * scrolling container - needed for rtl language layout, although not\n\t\t\t * all browsers move the scrollbar (Safari).\n\t\t\t *  @type boolean\n\t\t\t *  @default false\n\t\t\t */\n\t\t\t\"bScrollbarLeft\": false,\n\t\n\t\t\t/**\n\t\t\t * Flag for if `getBoundingClientRect` is fully supported or not\n\t\t\t *  @type boolean\n\t\t\t *  @default false\n\t\t\t */\n\t\t\t\"bBounding\": false,\n\t\n\t\t\t/**\n\t\t\t * Browser scrollbar width\n\t\t\t *  @type integer\n\t\t\t *  @default 0\n\t\t\t */\n\t\t\t\"barWidth\": 0\n\t\t},\n\t\n\t\n\t\t\"ajax\": null,\n\t\n\t\n\t\t/**\n\t\t * Array referencing the nodes which are used for the features. The\n\t\t * parameters of this object match what is allowed by sDom - i.e.\n\t\t *   <ul>\n\t\t *     <li>'l' - Length changing</li>\n\t\t *     <li>'f' - Filtering input</li>\n\t\t *     <li>'t' - The table!</li>\n\t\t *     <li>'i' - Information</li>\n\t\t *     <li>'p' - Pagination</li>\n\t\t *     <li>'r' - pRocessing</li>\n\t\t *   </ul>\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aanFeatures\": [],\n\t\n\t\t/**\n\t\t * Store data information - see {@link DataTable.models.oRow} for detailed\n\t\t * information.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoData\": [],\n\t\n\t\t/**\n\t\t * Array of indexes which are in the current display (after filtering etc)\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aiDisplay\": [],\n\t\n\t\t/**\n\t\t * Array of indexes for display - no filtering\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aiDisplayMaster\": [],\n\t\n\t\t/**\n\t\t * Map of row ids to data indexes\n\t\t *  @type object\n\t\t *  @default {}\n\t\t */\n\t\t\"aIds\": {},\n\t\n\t\t/**\n\t\t * Store information about each column that is in use\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoColumns\": [],\n\t\n\t\t/**\n\t\t * Store information about the table's header\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoHeader\": [],\n\t\n\t\t/**\n\t\t * Store information about the table's footer\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoFooter\": [],\n\t\n\t\t/**\n\t\t * Store the applied global search information in case we want to force a\n\t\t * research or compare the old search to a new one.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @namespace\n\t\t *  @extends DataTable.models.oSearch\n\t\t */\n\t\t\"oPreviousSearch\": {},\n\t\n\t\t/**\n\t\t * Store the applied search for each column - see\n\t\t * {@link DataTable.models.oSearch} for the format that is used for the\n\t\t * filtering information for each column.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoPreSearchCols\": [],\n\t\n\t\t/**\n\t\t * Sorting that is applied to the table. Note that the inner arrays are\n\t\t * used in the following manner:\n\t\t * <ul>\n\t\t *   <li>Index 0 - column number</li>\n\t\t *   <li>Index 1 - current sorting direction</li>\n\t\t * </ul>\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type array\n\t\t *  @todo These inner arrays should really be objects\n\t\t */\n\t\t\"aaSorting\": null,\n\t\n\t\t/**\n\t\t * Sorting that is always applied to the table (i.e. prefixed in front of\n\t\t * aaSorting).\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aaSortingFixed\": [],\n\t\n\t\t/**\n\t\t * Classes to use for the striping of a table.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"asStripeClasses\": null,\n\t\n\t\t/**\n\t\t * If restoring a table - we should restore its striping classes as well\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"asDestroyStripes\": [],\n\t\n\t\t/**\n\t\t * If restoring a table - we should restore its width\n\t\t *  @type int\n\t\t *  @default 0\n\t\t */\n\t\t\"sDestroyWidth\": 0,\n\t\n\t\t/**\n\t\t * Callback functions array for every time a row is inserted (i.e. on a draw).\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoRowCallback\": [],\n\t\n\t\t/**\n\t\t * Callback functions for the header on each draw.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoHeaderCallback\": [],\n\t\n\t\t/**\n\t\t * Callback function for the footer on each draw.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoFooterCallback\": [],\n\t\n\t\t/**\n\t\t * Array of callback functions for draw callback functions\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoDrawCallback\": [],\n\t\n\t\t/**\n\t\t * Array of callback functions for row created function\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoRowCreatedCallback\": [],\n\t\n\t\t/**\n\t\t * Callback functions for just before the table is redrawn. A return of\n\t\t * false will be used to cancel the draw.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoPreDrawCallback\": [],\n\t\n\t\t/**\n\t\t * Callback functions for when the table has been initialised.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoInitComplete\": [],\n\t\n\t\n\t\t/**\n\t\t * Callbacks for modifying the settings to be stored for state saving, prior to\n\t\t * saving state.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoStateSaveParams\": [],\n\t\n\t\t/**\n\t\t * Callbacks for modifying the settings that have been stored for state saving\n\t\t * prior to using the stored values to restore the state.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoStateLoadParams\": [],\n\t\n\t\t/**\n\t\t * Callbacks for operating on the settings object once the saved state has been\n\t\t * loaded\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoStateLoaded\": [],\n\t\n\t\t/**\n\t\t * Cache the table ID for quick access\n\t\t *  @type string\n\t\t *  @default <i>Empty string</i>\n\t\t */\n\t\t\"sTableId\": \"\",\n\t\n\t\t/**\n\t\t * The TABLE node for the main table\n\t\t *  @type node\n\t\t *  @default null\n\t\t */\n\t\t\"nTable\": null,\n\t\n\t\t/**\n\t\t * Permanent ref to the thead element\n\t\t *  @type node\n\t\t *  @default null\n\t\t */\n\t\t\"nTHead\": null,\n\t\n\t\t/**\n\t\t * Permanent ref to the tfoot element - if it exists\n\t\t *  @type node\n\t\t *  @default null\n\t\t */\n\t\t\"nTFoot\": null,\n\t\n\t\t/**\n\t\t * Permanent ref to the tbody element\n\t\t *  @type node\n\t\t *  @default null\n\t\t */\n\t\t\"nTBody\": null,\n\t\n\t\t/**\n\t\t * Cache the wrapper node (contains all DataTables controlled elements)\n\t\t *  @type node\n\t\t *  @default null\n\t\t */\n\t\t\"nTableWrapper\": null,\n\t\n\t\t/**\n\t\t * Indicate if when using server-side processing the loading of data\n\t\t * should be deferred until the second draw.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t */\n\t\t\"bDeferLoading\": false,\n\t\n\t\t/**\n\t\t * Indicate if all required information has been read in\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t */\n\t\t\"bInitialised\": false,\n\t\n\t\t/**\n\t\t * Information about open rows. Each object in the array has the parameters\n\t\t * 'nTr' and 'nParent'\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoOpenRows\": [],\n\t\n\t\t/**\n\t\t * Dictate the positioning of DataTables' control elements - see\n\t\t * {@link DataTable.model.oInit.sDom}.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sDom\": null,\n\t\n\t\t/**\n\t\t * Search delay (in mS)\n\t\t *  @type integer\n\t\t *  @default null\n\t\t */\n\t\t\"searchDelay\": null,\n\t\n\t\t/**\n\t\t * Which type of pagination should be used.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type string\n\t\t *  @default two_button\n\t\t */\n\t\t\"sPaginationType\": \"two_button\",\n\t\n\t\t/**\n\t\t * The state duration (for `stateSave`) in seconds.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type int\n\t\t *  @default 0\n\t\t */\n\t\t\"iStateDuration\": 0,\n\t\n\t\t/**\n\t\t * Array of callback functions for state saving. Each array element is an\n\t\t * object with the following parameters:\n\t\t *   <ul>\n\t\t *     <li>function:fn - function to call. Takes two parameters, oSettings\n\t\t *       and the JSON string to save that has been thus far created. Returns\n\t\t *       a JSON string to be inserted into a json object\n\t\t *       (i.e. '\"param\": [ 0, 1, 2]')</li>\n\t\t *     <li>string:sName - name of callback</li>\n\t\t *   </ul>\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoStateSave\": [],\n\t\n\t\t/**\n\t\t * Array of callback functions for state loading. Each array element is an\n\t\t * object with the following parameters:\n\t\t *   <ul>\n\t\t *     <li>function:fn - function to call. Takes two parameters, oSettings\n\t\t *       and the object stored. May return false to cancel state loading</li>\n\t\t *     <li>string:sName - name of callback</li>\n\t\t *   </ul>\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoStateLoad\": [],\n\t\n\t\t/**\n\t\t * State that was saved. Useful for back reference\n\t\t *  @type object\n\t\t *  @default null\n\t\t */\n\t\t\"oSavedState\": null,\n\t\n\t\t/**\n\t\t * State that was loaded. Useful for back reference\n\t\t *  @type object\n\t\t *  @default null\n\t\t */\n\t\t\"oLoadedState\": null,\n\t\n\t\t/**\n\t\t * Source url for AJAX data for the table.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sAjaxSource\": null,\n\t\n\t\t/**\n\t\t * Property from a given object from which to read the table data from. This\n\t\t * can be an empty string (when not server-side processing), in which case\n\t\t * it is  assumed an an array is given directly.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type string\n\t\t */\n\t\t\"sAjaxDataProp\": null,\n\t\n\t\t/**\n\t\t * Note if draw should be blocked while getting data\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t */\n\t\t\"bAjaxDataGet\": true,\n\t\n\t\t/**\n\t\t * The last jQuery XHR object that was used for server-side data gathering.\n\t\t * This can be used for working with the XHR information in one of the\n\t\t * callbacks\n\t\t *  @type object\n\t\t *  @default null\n\t\t */\n\t\t\"jqXHR\": null,\n\t\n\t\t/**\n\t\t * JSON returned from the server in the last Ajax request\n\t\t *  @type object\n\t\t *  @default undefined\n\t\t */\n\t\t\"json\": undefined,\n\t\n\t\t/**\n\t\t * Data submitted as part of the last Ajax request\n\t\t *  @type object\n\t\t *  @default undefined\n\t\t */\n\t\t\"oAjaxData\": undefined,\n\t\n\t\t/**\n\t\t * Function to get the server-side data.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type function\n\t\t */\n\t\t\"fnServerData\": null,\n\t\n\t\t/**\n\t\t * Functions which are called prior to sending an Ajax request so extra\n\t\t * parameters can easily be sent to the server\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoServerParams\": [],\n\t\n\t\t/**\n\t\t * Send the XHR HTTP method - GET or POST (could be PUT or DELETE if\n\t\t * required).\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type string\n\t\t */\n\t\t\"sServerMethod\": null,\n\t\n\t\t/**\n\t\t * Format numbers for display.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type function\n\t\t */\n\t\t\"fnFormatNumber\": null,\n\t\n\t\t/**\n\t\t * List of options that can be used for the user selectable length menu.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aLengthMenu\": null,\n\t\n\t\t/**\n\t\t * Counter for the draws that the table does. Also used as a tracker for\n\t\t * server-side processing\n\t\t *  @type int\n\t\t *  @default 0\n\t\t */\n\t\t\"iDraw\": 0,\n\t\n\t\t/**\n\t\t * Indicate if a redraw is being done - useful for Ajax\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t */\n\t\t\"bDrawing\": false,\n\t\n\t\t/**\n\t\t * Draw index (iDraw) of the last error when parsing the returned data\n\t\t *  @type int\n\t\t *  @default -1\n\t\t */\n\t\t\"iDrawError\": -1,\n\t\n\t\t/**\n\t\t * Paging display length\n\t\t *  @type int\n\t\t *  @default 10\n\t\t */\n\t\t\"_iDisplayLength\": 10,\n\t\n\t\t/**\n\t\t * Paging start point - aiDisplay index\n\t\t *  @type int\n\t\t *  @default 0\n\t\t */\n\t\t\"_iDisplayStart\": 0,\n\t\n\t\t/**\n\t\t * Server-side processing - number of records in the result set\n\t\t * (i.e. before filtering), Use fnRecordsTotal rather than\n\t\t * this property to get the value of the number of records, regardless of\n\t\t * the server-side processing setting.\n\t\t *  @type int\n\t\t *  @default 0\n\t\t *  @private\n\t\t */\n\t\t\"_iRecordsTotal\": 0,\n\t\n\t\t/**\n\t\t * Server-side processing - number of records in the current display set\n\t\t * (i.e. after filtering). Use fnRecordsDisplay rather than\n\t\t * this property to get the value of the number of records, regardless of\n\t\t * the server-side processing setting.\n\t\t *  @type boolean\n\t\t *  @default 0\n\t\t *  @private\n\t\t */\n\t\t\"_iRecordsDisplay\": 0,\n\t\n\t\t/**\n\t\t * The classes to use for the table\n\t\t *  @type object\n\t\t *  @default {}\n\t\t */\n\t\t\"oClasses\": {},\n\t\n\t\t/**\n\t\t * Flag attached to the settings object so you can check in the draw\n\t\t * callback if filtering has been done in the draw. Deprecated in favour of\n\t\t * events.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *  @deprecated\n\t\t */\n\t\t\"bFiltered\": false,\n\t\n\t\t/**\n\t\t * Flag attached to the settings object so you can check in the draw\n\t\t * callback if sorting has been done in the draw. Deprecated in favour of\n\t\t * events.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *  @deprecated\n\t\t */\n\t\t\"bSorted\": false,\n\t\n\t\t/**\n\t\t * Indicate that if multiple rows are in the header and there is more than\n\t\t * one unique cell per column, if the top one (true) or bottom one (false)\n\t\t * should be used for sorting / title by DataTables.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type boolean\n\t\t */\n\t\t\"bSortCellsTop\": null,\n\t\n\t\t/**\n\t\t * Initialisation object that is used for the table\n\t\t *  @type object\n\t\t *  @default null\n\t\t */\n\t\t\"oInit\": null,\n\t\n\t\t/**\n\t\t * Destroy callback functions - for plug-ins to attach themselves to the\n\t\t * destroy so they can clean up markup and events.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoDestroyCallback\": [],\n\t\n\t\n\t\t/**\n\t\t * Get the number of records in the current record set, before filtering\n\t\t *  @type function\n\t\t */\n\t\t\"fnRecordsTotal\": function ()\n\t\t{\n\t\t\treturn _fnDataSource( this ) == 'ssp' ?\n\t\t\t\tthis._iRecordsTotal * 1 :\n\t\t\t\tthis.aiDisplayMaster.length;\n\t\t},\n\t\n\t\t/**\n\t\t * Get the number of records in the current record set, after filtering\n\t\t *  @type function\n\t\t */\n\t\t\"fnRecordsDisplay\": function ()\n\t\t{\n\t\t\treturn _fnDataSource( this ) == 'ssp' ?\n\t\t\t\tthis._iRecordsDisplay * 1 :\n\t\t\t\tthis.aiDisplay.length;\n\t\t},\n\t\n\t\t/**\n\t\t * Get the display end point - aiDisplay index\n\t\t *  @type function\n\t\t */\n\t\t\"fnDisplayEnd\": function ()\n\t\t{\n\t\t\tvar\n\t\t\t\tlen      = this._iDisplayLength,\n\t\t\t\tstart    = this._iDisplayStart,\n\t\t\t\tcalc     = start + len,\n\t\t\t\trecords  = this.aiDisplay.length,\n\t\t\t\tfeatures = this.oFeatures,\n\t\t\t\tpaginate = features.bPaginate;\n\t\n\t\t\tif ( features.bServerSide ) {\n\t\t\t\treturn paginate === false || len === -1 ?\n\t\t\t\t\tstart + records :\n\t\t\t\t\tMath.min( start+len, this._iRecordsDisplay );\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn ! paginate || calc>records || len===-1 ?\n\t\t\t\t\trecords :\n\t\t\t\t\tcalc;\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * The DataTables object for this table\n\t\t *  @type object\n\t\t *  @default null\n\t\t */\n\t\t\"oInstance\": null,\n\t\n\t\t/**\n\t\t * Unique identifier for each instance of the DataTables object. If there\n\t\t * is an ID on the table node, then it takes that value, otherwise an\n\t\t * incrementing internal counter is used.\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sInstance\": null,\n\t\n\t\t/**\n\t\t * tabindex attribute value that is added to DataTables control elements, allowing\n\t\t * keyboard navigation of the table and its controls.\n\t\t */\n\t\t\"iTabIndex\": 0,\n\t\n\t\t/**\n\t\t * DIV container for the footer scrolling table if scrolling\n\t\t */\n\t\t\"nScrollHead\": null,\n\t\n\t\t/**\n\t\t * DIV container for the footer scrolling table if scrolling\n\t\t */\n\t\t\"nScrollFoot\": null,\n\t\n\t\t/**\n\t\t * Last applied sort\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aLastSort\": [],\n\t\n\t\t/**\n\t\t * Stored plug-in instances\n\t\t *  @type object\n\t\t *  @default {}\n\t\t */\n\t\t\"oPlugins\": {},\n\t\n\t\t/**\n\t\t * Function used to get a row's id from the row's data\n\t\t *  @type function\n\t\t *  @default null\n\t\t */\n\t\t\"rowIdFn\": null,\n\t\n\t\t/**\n\t\t * Data location where to store a row's id\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"rowId\": null\n\t};\n\n\t/**\n\t * Extension object for DataTables that is used to provide all extension\n\t * options.\n\t *\n\t * Note that the `DataTable.ext` object is available through\n\t * `jQuery.fn.dataTable.ext` where it may be accessed and manipulated. It is\n\t * also aliased to `jQuery.fn.dataTableExt` for historic reasons.\n\t *  @namespace\n\t *  @extends DataTable.models.ext\n\t */\n\t\n\t\n\t/**\n\t * DataTables extensions\n\t * \n\t * This namespace acts as a collection area for plug-ins that can be used to\n\t * extend DataTables capabilities. Indeed many of the build in methods\n\t * use this method to provide their own capabilities (sorting methods for\n\t * example).\n\t *\n\t * Note that this namespace is aliased to `jQuery.fn.dataTableExt` for legacy\n\t * reasons\n\t *\n\t *  @namespace\n\t */\n\tDataTable.ext = _ext = {\n\t\t/**\n\t\t * Buttons. For use with the Buttons extension for DataTables. This is\n\t\t * defined here so other extensions can define buttons regardless of load\n\t\t * order. It is _not_ used by DataTables core.\n\t\t *\n\t\t *  @type object\n\t\t *  @default {}\n\t\t */\n\t\tbuttons: {},\n\t\n\t\n\t\t/**\n\t\t * Element class names\n\t\t *\n\t\t *  @type object\n\t\t *  @default {}\n\t\t */\n\t\tclasses: {},\n\t\n\t\n\t\t/**\n\t\t * DataTables build type (expanded by the download builder)\n\t\t *\n\t\t *  @type string\n\t\t */\n\t\tbuilder: \"-source-\",\n\t\n\t\n\t\t/**\n\t\t * Error reporting.\n\t\t * \n\t\t * How should DataTables report an error. Can take the value 'alert',\n\t\t * 'throw', 'none' or a function.\n\t\t *\n\t\t *  @type string|function\n\t\t *  @default alert\n\t\t */\n\t\terrMode: \"alert\",\n\t\n\t\n\t\t/**\n\t\t * Feature plug-ins.\n\t\t * \n\t\t * This is an array of objects which describe the feature plug-ins that are\n\t\t * available to DataTables. These feature plug-ins are then available for\n\t\t * use through the `dom` initialisation option.\n\t\t * \n\t\t * Each feature plug-in is described by an object which must have the\n\t\t * following properties:\n\t\t * \n\t\t * * `fnInit` - function that is used to initialise the plug-in,\n\t\t * * `cFeature` - a character so the feature can be enabled by the `dom`\n\t\t *   instillation option. This is case sensitive.\n\t\t *\n\t\t * The `fnInit` function has the following input parameters:\n\t\t *\n\t\t * 1. `{object}` DataTables settings object: see\n\t\t *    {@link DataTable.models.oSettings}\n\t\t *\n\t\t * And the following return is expected:\n\t\t * \n\t\t * * {node|null} The element which contains your feature. Note that the\n\t\t *   return may also be void if your plug-in does not require to inject any\n\t\t *   DOM elements into DataTables control (`dom`) - for example this might\n\t\t *   be useful when developing a plug-in which allows table control via\n\t\t *   keyboard entry\n\t\t *\n\t\t *  @type array\n\t\t *\n\t\t *  @example\n\t\t *    $.fn.dataTable.ext.features.push( {\n\t\t *      \"fnInit\": function( oSettings ) {\n\t\t *        return new TableTools( { \"oDTSettings\": oSettings } );\n\t\t *      },\n\t\t *      \"cFeature\": \"T\"\n\t\t *    } );\n\t\t */\n\t\tfeature: [],\n\t\n\t\n\t\t/**\n\t\t * Row searching.\n\t\t * \n\t\t * This method of searching is complimentary to the default type based\n\t\t * searching, and a lot more comprehensive as it allows you complete control\n\t\t * over the searching logic. Each element in this array is a function\n\t\t * (parameters described below) that is called for every row in the table,\n\t\t * and your logic decides if it should be included in the searching data set\n\t\t * or not.\n\t\t *\n\t\t * Searching functions have the following input parameters:\n\t\t *\n\t\t * 1. `{object}` DataTables settings object: see\n\t\t *    {@link DataTable.models.oSettings}\n\t\t * 2. `{array|object}` Data for the row to be processed (same as the\n\t\t *    original format that was passed in as the data source, or an array\n\t\t *    from a DOM data source\n\t\t * 3. `{int}` Row index ({@link DataTable.models.oSettings.aoData}), which\n\t\t *    can be useful to retrieve the `TR` element if you need DOM interaction.\n\t\t *\n\t\t * And the following return is expected:\n\t\t *\n\t\t * * {boolean} Include the row in the searched result set (true) or not\n\t\t *   (false)\n\t\t *\n\t\t * Note that as with the main search ability in DataTables, technically this\n\t\t * is \"filtering\", since it is subtractive. However, for consistency in\n\t\t * naming we call it searching here.\n\t\t *\n\t\t *  @type array\n\t\t *  @default []\n\t\t *\n\t\t *  @example\n\t\t *    // The following example shows custom search being applied to the\n\t\t *    // fourth column (i.e. the data[3] index) based on two input values\n\t\t *    // from the end-user, matching the data in a certain range.\n\t\t *    $.fn.dataTable.ext.search.push(\n\t\t *      function( settings, data, dataIndex ) {\n\t\t *        var min = document.getElementById('min').value * 1;\n\t\t *        var max = document.getElementById('max').value * 1;\n\t\t *        var version = data[3] == \"-\" ? 0 : data[3]*1;\n\t\t *\n\t\t *        if ( min == \"\" && max == \"\" ) {\n\t\t *          return true;\n\t\t *        }\n\t\t *        else if ( min == \"\" && version < max ) {\n\t\t *          return true;\n\t\t *        }\n\t\t *        else if ( min < version && \"\" == max ) {\n\t\t *          return true;\n\t\t *        }\n\t\t *        else if ( min < version && version < max ) {\n\t\t *          return true;\n\t\t *        }\n\t\t *        return false;\n\t\t *      }\n\t\t *    );\n\t\t */\n\t\tsearch: [],\n\t\n\t\n\t\t/**\n\t\t * Selector extensions\n\t\t *\n\t\t * The `selector` option can be used to extend the options available for the\n\t\t * selector modifier options (`selector-modifier` object data type) that\n\t\t * each of the three built in selector types offer (row, column and cell +\n\t\t * their plural counterparts). For example the Select extension uses this\n\t\t * mechanism to provide an option to select only rows, columns and cells\n\t\t * that have been marked as selected by the end user (`{selected: true}`),\n\t\t * which can be used in conjunction with the existing built in selector\n\t\t * options.\n\t\t *\n\t\t * Each property is an array to which functions can be pushed. The functions\n\t\t * take three attributes:\n\t\t *\n\t\t * * Settings object for the host table\n\t\t * * Options object (`selector-modifier` object type)\n\t\t * * Array of selected item indexes\n\t\t *\n\t\t * The return is an array of the resulting item indexes after the custom\n\t\t * selector has been applied.\n\t\t *\n\t\t *  @type object\n\t\t */\n\t\tselector: {\n\t\t\tcell: [],\n\t\t\tcolumn: [],\n\t\t\trow: []\n\t\t},\n\t\n\t\n\t\t/**\n\t\t * Internal functions, exposed for used in plug-ins.\n\t\t * \n\t\t * Please note that you should not need to use the internal methods for\n\t\t * anything other than a plug-in (and even then, try to avoid if possible).\n\t\t * The internal function may change between releases.\n\t\t *\n\t\t *  @type object\n\t\t *  @default {}\n\t\t */\n\t\tinternal: {},\n\t\n\t\n\t\t/**\n\t\t * Legacy configuration options. Enable and disable legacy options that\n\t\t * are available in DataTables.\n\t\t *\n\t\t *  @type object\n\t\t */\n\t\tlegacy: {\n\t\t\t/**\n\t\t\t * Enable / disable DataTables 1.9 compatible server-side processing\n\t\t\t * requests\n\t\t\t *\n\t\t\t *  @type boolean\n\t\t\t *  @default null\n\t\t\t */\n\t\t\tajax: null\n\t\t},\n\t\n\t\n\t\t/**\n\t\t * Pagination plug-in methods.\n\t\t * \n\t\t * Each entry in this object is a function and defines which buttons should\n\t\t * be shown by the pagination rendering method that is used for the table:\n\t\t * {@link DataTable.ext.renderer.pageButton}. The renderer addresses how the\n\t\t * buttons are displayed in the document, while the functions here tell it\n\t\t * what buttons to display. This is done by returning an array of button\n\t\t * descriptions (what each button will do).\n\t\t *\n\t\t * Pagination types (the four built in options and any additional plug-in\n\t\t * options defined here) can be used through the `paginationType`\n\t\t * initialisation parameter.\n\t\t *\n\t\t * The functions defined take two parameters:\n\t\t *\n\t\t * 1. `{int} page` The current page index\n\t\t * 2. `{int} pages` The number of pages in the table\n\t\t *\n\t\t * Each function is expected to return an array where each element of the\n\t\t * array can be one of:\n\t\t *\n\t\t * * `first` - Jump to first page when activated\n\t\t * * `last` - Jump to last page when activated\n\t\t * * `previous` - Show previous page when activated\n\t\t * * `next` - Show next page when activated\n\t\t * * `{int}` - Show page of the index given\n\t\t * * `{array}` - A nested array containing the above elements to add a\n\t\t *   containing 'DIV' element (might be useful for styling).\n\t\t *\n\t\t * Note that DataTables v1.9- used this object slightly differently whereby\n\t\t * an object with two functions would be defined for each plug-in. That\n\t\t * ability is still supported by DataTables 1.10+ to provide backwards\n\t\t * compatibility, but this option of use is now decremented and no longer\n\t\t * documented in DataTables 1.10+.\n\t\t *\n\t\t *  @type object\n\t\t *  @default {}\n\t\t *\n\t\t *  @example\n\t\t *    // Show previous, next and current page buttons only\n\t\t *    $.fn.dataTableExt.oPagination.current = function ( page, pages ) {\n\t\t *      return [ 'previous', page, 'next' ];\n\t\t *    };\n\t\t */\n\t\tpager: {},\n\t\n\t\n\t\trenderer: {\n\t\t\tpageButton: {},\n\t\t\theader: {}\n\t\t},\n\t\n\t\n\t\t/**\n\t\t * Ordering plug-ins - custom data source\n\t\t * \n\t\t * The extension options for ordering of data available here is complimentary\n\t\t * to the default type based ordering that DataTables typically uses. It\n\t\t * allows much greater control over the the data that is being used to\n\t\t * order a column, but is necessarily therefore more complex.\n\t\t * \n\t\t * This type of ordering is useful if you want to do ordering based on data\n\t\t * live from the DOM (for example the contents of an 'input' element) rather\n\t\t * than just the static string that DataTables knows of.\n\t\t * \n\t\t * The way these plug-ins work is that you create an array of the values you\n\t\t * wish to be ordering for the column in question and then return that\n\t\t * array. The data in the array much be in the index order of the rows in\n\t\t * the table (not the currently ordering order!). Which order data gathering\n\t\t * function is run here depends on the `dt-init columns.orderDataType`\n\t\t * parameter that is used for the column (if any).\n\t\t *\n\t\t * The functions defined take two parameters:\n\t\t *\n\t\t * 1. `{object}` DataTables settings object: see\n\t\t *    {@link DataTable.models.oSettings}\n\t\t * 2. `{int}` Target column index\n\t\t *\n\t\t * Each function is expected to return an array:\n\t\t *\n\t\t * * `{array}` Data for the column to be ordering upon\n\t\t *\n\t\t *  @type array\n\t\t *\n\t\t *  @example\n\t\t *    // Ordering using `input` node values\n\t\t *    $.fn.dataTable.ext.order['dom-text'] = function  ( settings, col )\n\t\t *    {\n\t\t *      return this.api().column( col, {order:'index'} ).nodes().map( function ( td, i ) {\n\t\t *        return $('input', td).val();\n\t\t *      } );\n\t\t *    }\n\t\t */\n\t\torder: {},\n\t\n\t\n\t\t/**\n\t\t * Type based plug-ins.\n\t\t *\n\t\t * Each column in DataTables has a type assigned to it, either by automatic\n\t\t * detection or by direct assignment using the `type` option for the column.\n\t\t * The type of a column will effect how it is ordering and search (plug-ins\n\t\t * can also make use of the column type if required).\n\t\t *\n\t\t * @namespace\n\t\t */\n\t\ttype: {\n\t\t\t/**\n\t\t\t * Type detection functions.\n\t\t\t *\n\t\t\t * The functions defined in this object are used to automatically detect\n\t\t\t * a column's type, making initialisation of DataTables super easy, even\n\t\t\t * when complex data is in the table.\n\t\t\t *\n\t\t\t * The functions defined take two parameters:\n\t\t\t *\n\t\t     *  1. `{*}` Data from the column cell to be analysed\n\t\t     *  2. `{settings}` DataTables settings object. This can be used to\n\t\t     *     perform context specific type detection - for example detection\n\t\t     *     based on language settings such as using a comma for a decimal\n\t\t     *     place. Generally speaking the options from the settings will not\n\t\t     *     be required\n\t\t\t *\n\t\t\t * Each function is expected to return:\n\t\t\t *\n\t\t\t * * `{string|null}` Data type detected, or null if unknown (and thus\n\t\t\t *   pass it on to the other type detection functions.\n\t\t\t *\n\t\t\t *  @type array\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Currency type detection plug-in:\n\t\t\t *    $.fn.dataTable.ext.type.detect.push(\n\t\t\t *      function ( data, settings ) {\n\t\t\t *        // Check the numeric part\n\t\t\t *        if ( ! data.substring(1).match(/[0-9]/) ) {\n\t\t\t *          return null;\n\t\t\t *        }\n\t\t\t *\n\t\t\t *        // Check prefixed by currency\n\t\t\t *        if ( data.charAt(0) == '$' || data.charAt(0) == '&pound;' ) {\n\t\t\t *          return 'currency';\n\t\t\t *        }\n\t\t\t *        return null;\n\t\t\t *      }\n\t\t\t *    );\n\t\t\t */\n\t\t\tdetect: [],\n\t\n\t\n\t\t\t/**\n\t\t\t * Type based search formatting.\n\t\t\t *\n\t\t\t * The type based searching functions can be used to pre-format the\n\t\t\t * data to be search on. For example, it can be used to strip HTML\n\t\t\t * tags or to de-format telephone numbers for numeric only searching.\n\t\t\t *\n\t\t\t * Note that is a search is not defined for a column of a given type,\n\t\t\t * no search formatting will be performed.\n\t\t\t * \n\t\t\t * Pre-processing of searching data plug-ins - When you assign the sType\n\t\t\t * for a column (or have it automatically detected for you by DataTables\n\t\t\t * or a type detection plug-in), you will typically be using this for\n\t\t\t * custom sorting, but it can also be used to provide custom searching\n\t\t\t * by allowing you to pre-processing the data and returning the data in\n\t\t\t * the format that should be searched upon. This is done by adding\n\t\t\t * functions this object with a parameter name which matches the sType\n\t\t\t * for that target column. This is the corollary of <i>afnSortData</i>\n\t\t\t * for searching data.\n\t\t\t *\n\t\t\t * The functions defined take a single parameter:\n\t\t\t *\n\t\t     *  1. `{*}` Data from the column cell to be prepared for searching\n\t\t\t *\n\t\t\t * Each function is expected to return:\n\t\t\t *\n\t\t\t * * `{string|null}` Formatted string that will be used for the searching.\n\t\t\t *\n\t\t\t *  @type object\n\t\t\t *  @default {}\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $.fn.dataTable.ext.type.search['title-numeric'] = function ( d ) {\n\t\t\t *      return d.replace(/\\n/g,\" \").replace( /<.*?>/g, \"\" );\n\t\t\t *    }\n\t\t\t */\n\t\t\tsearch: {},\n\t\n\t\n\t\t\t/**\n\t\t\t * Type based ordering.\n\t\t\t *\n\t\t\t * The column type tells DataTables what ordering to apply to the table\n\t\t\t * when a column is sorted upon. The order for each type that is defined,\n\t\t\t * is defined by the functions available in this object.\n\t\t\t *\n\t\t\t * Each ordering option can be described by three properties added to\n\t\t\t * this object:\n\t\t\t *\n\t\t\t * * `{type}-pre` - Pre-formatting function\n\t\t\t * * `{type}-asc` - Ascending order function\n\t\t\t * * `{type}-desc` - Descending order function\n\t\t\t *\n\t\t\t * All three can be used together, only `{type}-pre` or only\n\t\t\t * `{type}-asc` and `{type}-desc` together. It is generally recommended\n\t\t\t * that only `{type}-pre` is used, as this provides the optimal\n\t\t\t * implementation in terms of speed, although the others are provided\n\t\t\t * for compatibility with existing Javascript sort functions.\n\t\t\t *\n\t\t\t * `{type}-pre`: Functions defined take a single parameter:\n\t\t\t *\n\t\t     *  1. `{*}` Data from the column cell to be prepared for ordering\n\t\t\t *\n\t\t\t * And return:\n\t\t\t *\n\t\t\t * * `{*}` Data to be sorted upon\n\t\t\t *\n\t\t\t * `{type}-asc` and `{type}-desc`: Functions are typical Javascript sort\n\t\t\t * functions, taking two parameters:\n\t\t\t *\n\t\t     *  1. `{*}` Data to compare to the second parameter\n\t\t     *  2. `{*}` Data to compare to the first parameter\n\t\t\t *\n\t\t\t * And returning:\n\t\t\t *\n\t\t\t * * `{*}` Ordering match: <0 if first parameter should be sorted lower\n\t\t\t *   than the second parameter, ===0 if the two parameters are equal and\n\t\t\t *   >0 if the first parameter should be sorted height than the second\n\t\t\t *   parameter.\n\t\t\t * \n\t\t\t *  @type object\n\t\t\t *  @default {}\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Numeric ordering of formatted numbers with a pre-formatter\n\t\t\t *    $.extend( $.fn.dataTable.ext.type.order, {\n\t\t\t *      \"string-pre\": function(x) {\n\t\t\t *        a = (a === \"-\" || a === \"\") ? 0 : a.replace( /[^\\d\\-\\.]/g, \"\" );\n\t\t\t *        return parseFloat( a );\n\t\t\t *      }\n\t\t\t *    } );\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Case-sensitive string ordering, with no pre-formatting method\n\t\t\t *    $.extend( $.fn.dataTable.ext.order, {\n\t\t\t *      \"string-case-asc\": function(x,y) {\n\t\t\t *        return ((x < y) ? -1 : ((x > y) ? 1 : 0));\n\t\t\t *      },\n\t\t\t *      \"string-case-desc\": function(x,y) {\n\t\t\t *        return ((x < y) ? 1 : ((x > y) ? -1 : 0));\n\t\t\t *      }\n\t\t\t *    } );\n\t\t\t */\n\t\t\torder: {}\n\t\t},\n\t\n\t\t/**\n\t\t * Unique DataTables instance counter\n\t\t *\n\t\t * @type int\n\t\t * @private\n\t\t */\n\t\t_unique: 0,\n\t\n\t\n\t\t//\n\t\t// Depreciated\n\t\t// The following properties are retained for backwards compatiblity only.\n\t\t// The should not be used in new projects and will be removed in a future\n\t\t// version\n\t\t//\n\t\n\t\t/**\n\t\t * Version check function.\n\t\t *  @type function\n\t\t *  @depreciated Since 1.10\n\t\t */\n\t\tfnVersionCheck: DataTable.fnVersionCheck,\n\t\n\t\n\t\t/**\n\t\t * Index for what 'this' index API functions should use\n\t\t *  @type int\n\t\t *  @deprecated Since v1.10\n\t\t */\n\t\tiApiIndex: 0,\n\t\n\t\n\t\t/**\n\t\t * jQuery UI class container\n\t\t *  @type object\n\t\t *  @deprecated Since v1.10\n\t\t */\n\t\toJUIClasses: {},\n\t\n\t\n\t\t/**\n\t\t * Software version\n\t\t *  @type string\n\t\t *  @deprecated Since v1.10\n\t\t */\n\t\tsVersion: DataTable.version\n\t};\n\t\n\t\n\t//\n\t// Backwards compatibility. Alias to pre 1.10 Hungarian notation counter parts\n\t//\n\t$.extend( _ext, {\n\t\tafnFiltering: _ext.search,\n\t\taTypes:       _ext.type.detect,\n\t\tofnSearch:    _ext.type.search,\n\t\toSort:        _ext.type.order,\n\t\tafnSortData:  _ext.order,\n\t\taoFeatures:   _ext.feature,\n\t\toApi:         _ext.internal,\n\t\toStdClasses:  _ext.classes,\n\t\toPagination:  _ext.pager\n\t} );\n\t\n\t\n\t$.extend( DataTable.ext.classes, {\n\t\t\"sTable\": \"dataTable\",\n\t\t\"sNoFooter\": \"no-footer\",\n\t\n\t\t/* Paging buttons */\n\t\t\"sPageButton\": \"paginate_button\",\n\t\t\"sPageButtonActive\": \"current\",\n\t\t\"sPageButtonDisabled\": \"disabled\",\n\t\n\t\t/* Striping classes */\n\t\t\"sStripeOdd\": \"odd\",\n\t\t\"sStripeEven\": \"even\",\n\t\n\t\t/* Empty row */\n\t\t\"sRowEmpty\": \"dataTables_empty\",\n\t\n\t\t/* Features */\n\t\t\"sWrapper\": \"dataTables_wrapper\",\n\t\t\"sFilter\": \"dataTables_filter\",\n\t\t\"sInfo\": \"dataTables_info\",\n\t\t\"sPaging\": \"dataTables_paginate paging_\", /* Note that the type is postfixed */\n\t\t\"sLength\": \"dataTables_length\",\n\t\t\"sProcessing\": \"dataTables_processing\",\n\t\n\t\t/* Sorting */\n\t\t\"sSortAsc\": \"sorting_asc\",\n\t\t\"sSortDesc\": \"sorting_desc\",\n\t\t\"sSortable\": \"sorting\", /* Sortable in both directions */\n\t\t\"sSortableAsc\": \"sorting_asc_disabled\",\n\t\t\"sSortableDesc\": \"sorting_desc_disabled\",\n\t\t\"sSortableNone\": \"sorting_disabled\",\n\t\t\"sSortColumn\": \"sorting_\", /* Note that an int is postfixed for the sorting order */\n\t\n\t\t/* Filtering */\n\t\t\"sFilterInput\": \"\",\n\t\n\t\t/* Page length */\n\t\t\"sLengthSelect\": \"\",\n\t\n\t\t/* Scrolling */\n\t\t\"sScrollWrapper\": \"dataTables_scroll\",\n\t\t\"sScrollHead\": \"dataTables_scrollHead\",\n\t\t\"sScrollHeadInner\": \"dataTables_scrollHeadInner\",\n\t\t\"sScrollBody\": \"dataTables_scrollBody\",\n\t\t\"sScrollFoot\": \"dataTables_scrollFoot\",\n\t\t\"sScrollFootInner\": \"dataTables_scrollFootInner\",\n\t\n\t\t/* Misc */\n\t\t\"sHeaderTH\": \"\",\n\t\t\"sFooterTH\": \"\",\n\t\n\t\t// Deprecated\n\t\t\"sSortJUIAsc\": \"\",\n\t\t\"sSortJUIDesc\": \"\",\n\t\t\"sSortJUI\": \"\",\n\t\t\"sSortJUIAscAllowed\": \"\",\n\t\t\"sSortJUIDescAllowed\": \"\",\n\t\t\"sSortJUIWrapper\": \"\",\n\t\t\"sSortIcon\": \"\",\n\t\t\"sJUIHeader\": \"\",\n\t\t\"sJUIFooter\": \"\"\n\t} );\n\t\n\t\n\tvar extPagination = DataTable.ext.pager;\n\t\n\tfunction _numbers ( page, pages ) {\n\t\tvar\n\t\t\tnumbers = [],\n\t\t\tbuttons = extPagination.numbers_length,\n\t\t\thalf = Math.floor( buttons / 2 ),\n\t\t\ti = 1;\n\t\n\t\tif ( pages <= buttons ) {\n\t\t\tnumbers = _range( 0, pages );\n\t\t}\n\t\telse if ( page <= half ) {\n\t\t\tnumbers = _range( 0, buttons-2 );\n\t\t\tnumbers.push( 'ellipsis' );\n\t\t\tnumbers.push( pages-1 );\n\t\t}\n\t\telse if ( page >= pages - 1 - half ) {\n\t\t\tnumbers = _range( pages-(buttons-2), pages );\n\t\t\tnumbers.splice( 0, 0, 'ellipsis' ); // no unshift in ie6\n\t\t\tnumbers.splice( 0, 0, 0 );\n\t\t}\n\t\telse {\n\t\t\tnumbers = _range( page-half+2, page+half-1 );\n\t\t\tnumbers.push( 'ellipsis' );\n\t\t\tnumbers.push( pages-1 );\n\t\t\tnumbers.splice( 0, 0, 'ellipsis' );\n\t\t\tnumbers.splice( 0, 0, 0 );\n\t\t}\n\t\n\t\tnumbers.DT_el = 'span';\n\t\treturn numbers;\n\t}\n\t\n\t\n\t$.extend( extPagination, {\n\t\tsimple: function ( page, pages ) {\n\t\t\treturn [ 'previous', 'next' ];\n\t\t},\n\t\n\t\tfull: function ( page, pages ) {\n\t\t\treturn [  'first', 'previous', 'next', 'last' ];\n\t\t},\n\t\n\t\tnumbers: function ( page, pages ) {\n\t\t\treturn [ _numbers(page, pages) ];\n\t\t},\n\t\n\t\tsimple_numbers: function ( page, pages ) {\n\t\t\treturn [ 'previous', _numbers(page, pages), 'next' ];\n\t\t},\n\t\n\t\tfull_numbers: function ( page, pages ) {\n\t\t\treturn [ 'first', 'previous', _numbers(page, pages), 'next', 'last' ];\n\t\t},\n\t\t\n\t\tfirst_last_numbers: function (page, pages) {\n\t \t\treturn ['first', _numbers(page, pages), 'last'];\n\t \t},\n\t\n\t\t// For testing and plug-ins to use\n\t\t_numbers: _numbers,\n\t\n\t\t// Number of number buttons (including ellipsis) to show. _Must be odd!_\n\t\tnumbers_length: 7\n\t} );\n\t\n\t\n\t$.extend( true, DataTable.ext.renderer, {\n\t\tpageButton: {\n\t\t\t_: function ( settings, host, idx, buttons, page, pages ) {\n\t\t\t\tvar classes = settings.oClasses;\n\t\t\t\tvar lang = settings.oLanguage.oPaginate;\n\t\t\t\tvar aria = settings.oLanguage.oAria.paginate || {};\n\t\t\t\tvar btnDisplay, btnClass, counter=0;\n\t\n\t\t\t\tvar attach = function( container, buttons ) {\n\t\t\t\t\tvar i, ien, node, button, tabIndex;\n\t\t\t\t\tvar disabledClass = classes.sPageButtonDisabled;\n\t\t\t\t\tvar clickHandler = function ( e ) {\n\t\t\t\t\t\t_fnPageChange( settings, e.data.action, true );\n\t\t\t\t\t};\n\t\n\t\t\t\t\tfor ( i=0, ien=buttons.length ; i<ien ; i++ ) {\n\t\t\t\t\t\tbutton = buttons[i];\n\t\n\t\t\t\t\t\tif ( $.isArray( button ) ) {\n\t\t\t\t\t\t\tvar inner = $( '<'+(button.DT_el || 'div')+'/>' )\n\t\t\t\t\t\t\t\t.appendTo( container );\n\t\t\t\t\t\t\tattach( inner, button );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tbtnDisplay = null;\n\t\t\t\t\t\t\tbtnClass = button;\n\t\t\t\t\t\t\ttabIndex = settings.iTabIndex;\n\t\n\t\t\t\t\t\t\tswitch ( button ) {\n\t\t\t\t\t\t\t\tcase 'ellipsis':\n\t\t\t\t\t\t\t\t\tcontainer.append('<span class=\"ellipsis\">&#x2026;</span>');\n\t\t\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\t\t\tcase 'first':\n\t\t\t\t\t\t\t\t\tbtnDisplay = lang.sFirst;\n\t\n\t\t\t\t\t\t\t\t\tif ( page === 0 ) {\n\t\t\t\t\t\t\t\t\t\ttabIndex = -1;\n\t\t\t\t\t\t\t\t\t\tbtnClass += ' ' + disabledClass;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\t\t\tcase 'previous':\n\t\t\t\t\t\t\t\t\tbtnDisplay = lang.sPrevious;\n\t\n\t\t\t\t\t\t\t\t\tif ( page === 0 ) {\n\t\t\t\t\t\t\t\t\t\ttabIndex = -1;\n\t\t\t\t\t\t\t\t\t\tbtnClass += ' ' + disabledClass;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\t\t\tcase 'next':\n\t\t\t\t\t\t\t\t\tbtnDisplay = lang.sNext;\n\t\n\t\t\t\t\t\t\t\t\tif ( page === pages-1 ) {\n\t\t\t\t\t\t\t\t\t\ttabIndex = -1;\n\t\t\t\t\t\t\t\t\t\tbtnClass += ' ' + disabledClass;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\t\t\tcase 'last':\n\t\t\t\t\t\t\t\t\tbtnDisplay = lang.sLast;\n\t\n\t\t\t\t\t\t\t\t\tif ( page === pages-1 ) {\n\t\t\t\t\t\t\t\t\t\ttabIndex = -1;\n\t\t\t\t\t\t\t\t\t\tbtnClass += ' ' + disabledClass;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\tbtnDisplay = button + 1;\n\t\t\t\t\t\t\t\t\tbtnClass = page === button ?\n\t\t\t\t\t\t\t\t\t\tclasses.sPageButtonActive : '';\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\tif ( btnDisplay !== null ) {\n\t\t\t\t\t\t\t\tnode = $('<a>', {\n\t\t\t\t\t\t\t\t\t\t'class': classes.sPageButton+' '+btnClass,\n\t\t\t\t\t\t\t\t\t\t'aria-controls': settings.sTableId,\n\t\t\t\t\t\t\t\t\t\t'aria-label': aria[ button ],\n\t\t\t\t\t\t\t\t\t\t'data-dt-idx': counter,\n\t\t\t\t\t\t\t\t\t\t'tabindex': tabIndex,\n\t\t\t\t\t\t\t\t\t\t'id': idx === 0 && typeof button === 'string' ?\n\t\t\t\t\t\t\t\t\t\t\tsettings.sTableId +'_'+ button :\n\t\t\t\t\t\t\t\t\t\t\tnull\n\t\t\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t\t\t.html( btnDisplay )\n\t\t\t\t\t\t\t\t\t.appendTo( container );\n\t\n\t\t\t\t\t\t\t\t_fnBindAction(\n\t\t\t\t\t\t\t\t\tnode, {action: button}, clickHandler\n\t\t\t\t\t\t\t\t);\n\t\n\t\t\t\t\t\t\t\tcounter++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\n\t\t\t\t// IE9 throws an 'unknown error' if document.activeElement is used\n\t\t\t\t// inside an iframe or frame. Try / catch the error. Not good for\n\t\t\t\t// accessibility, but neither are frames.\n\t\t\t\tvar activeEl;\n\t\n\t\t\t\ttry {\n\t\t\t\t\t// Because this approach is destroying and recreating the paging\n\t\t\t\t\t// elements, focus is lost on the select button which is bad for\n\t\t\t\t\t// accessibility. So we want to restore focus once the draw has\n\t\t\t\t\t// completed\n\t\t\t\t\tactiveEl = $(host).find(document.activeElement).data('dt-idx');\n\t\t\t\t}\n\t\t\t\tcatch (e) {}\n\t\n\t\t\t\tattach( $(host).empty(), buttons );\n\t\n\t\t\t\tif ( activeEl !== undefined ) {\n\t\t\t\t\t$(host).find( '[data-dt-idx='+activeEl+']' ).focus();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} );\n\t\n\t\n\t\n\t// Built in type detection. See model.ext.aTypes for information about\n\t// what is required from this methods.\n\t$.extend( DataTable.ext.type.detect, [\n\t\t// Plain numbers - first since V8 detects some plain numbers as dates\n\t\t// e.g. Date.parse('55') (but not all, e.g. Date.parse('22')...).\n\t\tfunction ( d, settings )\n\t\t{\n\t\t\tvar decimal = settings.oLanguage.sDecimal;\n\t\t\treturn _isNumber( d, decimal ) ? 'num'+decimal : null;\n\t\t},\n\t\n\t\t// Dates (only those recognised by the browser's Date.parse)\n\t\tfunction ( d, settings )\n\t\t{\n\t\t\t// V8 tries _very_ hard to make a string passed into `Date.parse()`\n\t\t\t// valid, so we need to use a regex to restrict date formats. Use a\n\t\t\t// plug-in for anything other than ISO8601 style strings\n\t\t\tif ( d && !(d instanceof Date) && ! _re_date.test(d) ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tvar parsed = Date.parse(d);\n\t\t\treturn (parsed !== null && !isNaN(parsed)) || _empty(d) ? 'date' : null;\n\t\t},\n\t\n\t\t// Formatted numbers\n\t\tfunction ( d, settings )\n\t\t{\n\t\t\tvar decimal = settings.oLanguage.sDecimal;\n\t\t\treturn _isNumber( d, decimal, true ) ? 'num-fmt'+decimal : null;\n\t\t},\n\t\n\t\t// HTML numeric\n\t\tfunction ( d, settings )\n\t\t{\n\t\t\tvar decimal = settings.oLanguage.sDecimal;\n\t\t\treturn _htmlNumeric( d, decimal ) ? 'html-num'+decimal : null;\n\t\t},\n\t\n\t\t// HTML numeric, formatted\n\t\tfunction ( d, settings )\n\t\t{\n\t\t\tvar decimal = settings.oLanguage.sDecimal;\n\t\t\treturn _htmlNumeric( d, decimal, true ) ? 'html-num-fmt'+decimal : null;\n\t\t},\n\t\n\t\t// HTML (this is strict checking - there must be html)\n\t\tfunction ( d, settings )\n\t\t{\n\t\t\treturn _empty( d ) || (typeof d === 'string' && d.indexOf('<') !== -1) ?\n\t\t\t\t'html' : null;\n\t\t}\n\t] );\n\t\n\t\n\t\n\t// Filter formatting functions. See model.ext.ofnSearch for information about\n\t// what is required from these methods.\n\t// \n\t// Note that additional search methods are added for the html numbers and\n\t// html formatted numbers by `_addNumericSort()` when we know what the decimal\n\t// place is\n\t\n\t\n\t$.extend( DataTable.ext.type.search, {\n\t\thtml: function ( data ) {\n\t\t\treturn _empty(data) ?\n\t\t\t\tdata :\n\t\t\t\ttypeof data === 'string' ?\n\t\t\t\t\tdata\n\t\t\t\t\t\t.replace( _re_new_lines, \" \" )\n\t\t\t\t\t\t.replace( _re_html, \"\" ) :\n\t\t\t\t\t'';\n\t\t},\n\t\n\t\tstring: function ( data ) {\n\t\t\treturn _empty(data) ?\n\t\t\t\tdata :\n\t\t\t\ttypeof data === 'string' ?\n\t\t\t\t\tdata.replace( _re_new_lines, \" \" ) :\n\t\t\t\t\tdata;\n\t\t}\n\t} );\n\t\n\t\n\t\n\tvar __numericReplace = function ( d, decimalPlace, re1, re2 ) {\n\t\tif ( d !== 0 && (!d || d === '-') ) {\n\t\t\treturn -Infinity;\n\t\t}\n\t\n\t\t// If a decimal place other than `.` is used, it needs to be given to the\n\t\t// function so we can detect it and replace with a `.` which is the only\n\t\t// decimal place Javascript recognises - it is not locale aware.\n\t\tif ( decimalPlace ) {\n\t\t\td = _numToDecimal( d, decimalPlace );\n\t\t}\n\t\n\t\tif ( d.replace ) {\n\t\t\tif ( re1 ) {\n\t\t\t\td = d.replace( re1, '' );\n\t\t\t}\n\t\n\t\t\tif ( re2 ) {\n\t\t\t\td = d.replace( re2, '' );\n\t\t\t}\n\t\t}\n\t\n\t\treturn d * 1;\n\t};\n\t\n\t\n\t// Add the numeric 'deformatting' functions for sorting and search. This is done\n\t// in a function to provide an easy ability for the language options to add\n\t// additional methods if a non-period decimal place is used.\n\tfunction _addNumericSort ( decimalPlace ) {\n\t\t$.each(\n\t\t\t{\n\t\t\t\t// Plain numbers\n\t\t\t\t\"num\": function ( d ) {\n\t\t\t\t\treturn __numericReplace( d, decimalPlace );\n\t\t\t\t},\n\t\n\t\t\t\t// Formatted numbers\n\t\t\t\t\"num-fmt\": function ( d ) {\n\t\t\t\t\treturn __numericReplace( d, decimalPlace, _re_formatted_numeric );\n\t\t\t\t},\n\t\n\t\t\t\t// HTML numeric\n\t\t\t\t\"html-num\": function ( d ) {\n\t\t\t\t\treturn __numericReplace( d, decimalPlace, _re_html );\n\t\t\t\t},\n\t\n\t\t\t\t// HTML numeric, formatted\n\t\t\t\t\"html-num-fmt\": function ( d ) {\n\t\t\t\t\treturn __numericReplace( d, decimalPlace, _re_html, _re_formatted_numeric );\n\t\t\t\t}\n\t\t\t},\n\t\t\tfunction ( key, fn ) {\n\t\t\t\t// Add the ordering method\n\t\t\t\t_ext.type.order[ key+decimalPlace+'-pre' ] = fn;\n\t\n\t\t\t\t// For HTML types add a search formatter that will strip the HTML\n\t\t\t\tif ( key.match(/^html\\-/) ) {\n\t\t\t\t\t_ext.type.search[ key+decimalPlace ] = _ext.type.search.html;\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n\t\n\t\n\t// Default sort methods\n\t$.extend( _ext.type.order, {\n\t\t// Dates\n\t\t\"date-pre\": function ( d ) {\n\t\t\tvar ts = Date.parse( d );\n\t\t\treturn isNaN(ts) ? -Infinity : ts;\n\t\t},\n\t\n\t\t// html\n\t\t\"html-pre\": function ( a ) {\n\t\t\treturn _empty(a) ?\n\t\t\t\t'' :\n\t\t\t\ta.replace ?\n\t\t\t\t\ta.replace( /<.*?>/g, \"\" ).toLowerCase() :\n\t\t\t\t\ta+'';\n\t\t},\n\t\n\t\t// string\n\t\t\"string-pre\": function ( a ) {\n\t\t\t// This is a little complex, but faster than always calling toString,\n\t\t\t// http://jsperf.com/tostring-v-check\n\t\t\treturn _empty(a) ?\n\t\t\t\t'' :\n\t\t\t\ttypeof a === 'string' ?\n\t\t\t\t\ta.toLowerCase() :\n\t\t\t\t\t! a.toString ?\n\t\t\t\t\t\t'' :\n\t\t\t\t\t\ta.toString();\n\t\t},\n\t\n\t\t// string-asc and -desc are retained only for compatibility with the old\n\t\t// sort methods\n\t\t\"string-asc\": function ( x, y ) {\n\t\t\treturn ((x < y) ? -1 : ((x > y) ? 1 : 0));\n\t\t},\n\t\n\t\t\"string-desc\": function ( x, y ) {\n\t\t\treturn ((x < y) ? 1 : ((x > y) ? -1 : 0));\n\t\t}\n\t} );\n\t\n\t\n\t// Numeric sorting types - order doesn't matter here\n\t_addNumericSort( '' );\n\t\n\t\n\t$.extend( true, DataTable.ext.renderer, {\n\t\theader: {\n\t\t\t_: function ( settings, cell, column, classes ) {\n\t\t\t\t// No additional mark-up required\n\t\t\t\t// Attach a sort listener to update on sort - note that using the\n\t\t\t\t// `DT` namespace will allow the event to be removed automatically\n\t\t\t\t// on destroy, while the `dt` namespaced event is the one we are\n\t\t\t\t// listening for\n\t\t\t\t$(settings.nTable).on( 'order.dt.DT', function ( e, ctx, sorting, columns ) {\n\t\t\t\t\tif ( settings !== ctx ) { // need to check this this is the host\n\t\t\t\t\t\treturn;               // table, not a nested one\n\t\t\t\t\t}\n\t\n\t\t\t\t\tvar colIdx = column.idx;\n\t\n\t\t\t\t\tcell\n\t\t\t\t\t\t.removeClass(\n\t\t\t\t\t\t\tcolumn.sSortingClass +' '+\n\t\t\t\t\t\t\tclasses.sSortAsc +' '+\n\t\t\t\t\t\t\tclasses.sSortDesc\n\t\t\t\t\t\t)\n\t\t\t\t\t\t.addClass( columns[ colIdx ] == 'asc' ?\n\t\t\t\t\t\t\tclasses.sSortAsc : columns[ colIdx ] == 'desc' ?\n\t\t\t\t\t\t\t\tclasses.sSortDesc :\n\t\t\t\t\t\t\t\tcolumn.sSortingClass\n\t\t\t\t\t\t);\n\t\t\t\t} );\n\t\t\t},\n\t\n\t\t\tjqueryui: function ( settings, cell, column, classes ) {\n\t\t\t\t$('<div/>')\n\t\t\t\t\t.addClass( classes.sSortJUIWrapper )\n\t\t\t\t\t.append( cell.contents() )\n\t\t\t\t\t.append( $('<span/>')\n\t\t\t\t\t\t.addClass( classes.sSortIcon+' '+column.sSortingClassJUI )\n\t\t\t\t\t)\n\t\t\t\t\t.appendTo( cell );\n\t\n\t\t\t\t// Attach a sort listener to update on sort\n\t\t\t\t$(settings.nTable).on( 'order.dt.DT', function ( e, ctx, sorting, columns ) {\n\t\t\t\t\tif ( settings !== ctx ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tvar colIdx = column.idx;\n\t\n\t\t\t\t\tcell\n\t\t\t\t\t\t.removeClass( classes.sSortAsc +\" \"+classes.sSortDesc )\n\t\t\t\t\t\t.addClass( columns[ colIdx ] == 'asc' ?\n\t\t\t\t\t\t\tclasses.sSortAsc : columns[ colIdx ] == 'desc' ?\n\t\t\t\t\t\t\t\tclasses.sSortDesc :\n\t\t\t\t\t\t\t\tcolumn.sSortingClass\n\t\t\t\t\t\t);\n\t\n\t\t\t\t\tcell\n\t\t\t\t\t\t.find( 'span.'+classes.sSortIcon )\n\t\t\t\t\t\t.removeClass(\n\t\t\t\t\t\t\tclasses.sSortJUIAsc +\" \"+\n\t\t\t\t\t\t\tclasses.sSortJUIDesc +\" \"+\n\t\t\t\t\t\t\tclasses.sSortJUI +\" \"+\n\t\t\t\t\t\t\tclasses.sSortJUIAscAllowed +\" \"+\n\t\t\t\t\t\t\tclasses.sSortJUIDescAllowed\n\t\t\t\t\t\t)\n\t\t\t\t\t\t.addClass( columns[ colIdx ] == 'asc' ?\n\t\t\t\t\t\t\tclasses.sSortJUIAsc : columns[ colIdx ] == 'desc' ?\n\t\t\t\t\t\t\t\tclasses.sSortJUIDesc :\n\t\t\t\t\t\t\t\tcolumn.sSortingClassJUI\n\t\t\t\t\t\t);\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\t} );\n\t\n\t/*\n\t * Public helper functions. These aren't used internally by DataTables, or\n\t * called by any of the options passed into DataTables, but they can be used\n\t * externally by developers working with DataTables. They are helper functions\n\t * to make working with DataTables a little bit easier.\n\t */\n\t\n\tvar __htmlEscapeEntities = function ( d ) {\n\t\treturn typeof d === 'string' ?\n\t\t\td.replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;') :\n\t\t\td;\n\t};\n\t\n\t/**\n\t * Helpers for `columns.render`.\n\t *\n\t * The options defined here can be used with the `columns.render` initialisation\n\t * option to provide a display renderer. The following functions are defined:\n\t *\n\t * * `number` - Will format numeric data (defined by `columns.data`) for\n\t *   display, retaining the original unformatted data for sorting and filtering.\n\t *   It takes 5 parameters:\n\t *   * `string` - Thousands grouping separator\n\t *   * `string` - Decimal point indicator\n\t *   * `integer` - Number of decimal points to show\n\t *   * `string` (optional) - Prefix.\n\t *   * `string` (optional) - Postfix (/suffix).\n\t * * `text` - Escape HTML to help prevent XSS attacks. It has no optional\n\t *   parameters.\n\t *\n\t * @example\n\t *   // Column definition using the number renderer\n\t *   {\n\t *     data: \"salary\",\n\t *     render: $.fn.dataTable.render.number( '\\'', '.', 0, '$' )\n\t *   }\n\t *\n\t * @namespace\n\t */\n\tDataTable.render = {\n\t\tnumber: function ( thousands, decimal, precision, prefix, postfix ) {\n\t\t\treturn {\n\t\t\t\tdisplay: function ( d ) {\n\t\t\t\t\tif ( typeof d !== 'number' && typeof d !== 'string' ) {\n\t\t\t\t\t\treturn d;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tvar negative = d < 0 ? '-' : '';\n\t\t\t\t\tvar flo = parseFloat( d );\n\t\n\t\t\t\t\t// If NaN then there isn't much formatting that we can do - just\n\t\t\t\t\t// return immediately, escaping any HTML (this was supposed to\n\t\t\t\t\t// be a number after all)\n\t\t\t\t\tif ( isNaN( flo ) ) {\n\t\t\t\t\t\treturn __htmlEscapeEntities( d );\n\t\t\t\t\t}\n\t\n\t\t\t\t\tflo = flo.toFixed( precision );\n\t\t\t\t\td = Math.abs( flo );\n\t\n\t\t\t\t\tvar intPart = parseInt( d, 10 );\n\t\t\t\t\tvar floatPart = precision ?\n\t\t\t\t\t\tdecimal+(d - intPart).toFixed( precision ).substring( 2 ):\n\t\t\t\t\t\t'';\n\t\n\t\t\t\t\treturn negative + (prefix||'') +\n\t\t\t\t\t\tintPart.toString().replace(\n\t\t\t\t\t\t\t/\\B(?=(\\d{3})+(?!\\d))/g, thousands\n\t\t\t\t\t\t) +\n\t\t\t\t\t\tfloatPart +\n\t\t\t\t\t\t(postfix||'');\n\t\t\t\t}\n\t\t\t};\n\t\t},\n\t\n\t\ttext: function () {\n\t\t\treturn {\n\t\t\t\tdisplay: __htmlEscapeEntities,\n\t\t\t\tfilter: __htmlEscapeEntities\n\t\t\t};\n\t\t}\n\t};\n\t\n\t\n\t/*\n\t * This is really a good bit rubbish this method of exposing the internal methods\n\t * publicly... - To be fixed in 2.0 using methods on the prototype\n\t */\n\t\n\t\n\t/**\n\t * Create a wrapper function for exporting an internal functions to an external API.\n\t *  @param {string} fn API function name\n\t *  @returns {function} wrapped function\n\t *  @memberof DataTable#internal\n\t */\n\tfunction _fnExternApiFunc (fn)\n\t{\n\t\treturn function() {\n\t\t\tvar args = [_fnSettingsFromNode( this[DataTable.ext.iApiIndex] )].concat(\n\t\t\t\tArray.prototype.slice.call(arguments)\n\t\t\t);\n\t\t\treturn DataTable.ext.internal[fn].apply( this, args );\n\t\t};\n\t}\n\t\n\t\n\t/**\n\t * Reference to internal functions for use by plug-in developers. Note that\n\t * these methods are references to internal functions and are considered to be\n\t * private. If you use these methods, be aware that they are liable to change\n\t * between versions.\n\t *  @namespace\n\t */\n\t$.extend( DataTable.ext.internal, {\n\t\t_fnExternApiFunc: _fnExternApiFunc,\n\t\t_fnBuildAjax: _fnBuildAjax,\n\t\t_fnAjaxUpdate: _fnAjaxUpdate,\n\t\t_fnAjaxParameters: _fnAjaxParameters,\n\t\t_fnAjaxUpdateDraw: _fnAjaxUpdateDraw,\n\t\t_fnAjaxDataSrc: _fnAjaxDataSrc,\n\t\t_fnAddColumn: _fnAddColumn,\n\t\t_fnColumnOptions: _fnColumnOptions,\n\t\t_fnAdjustColumnSizing: _fnAdjustColumnSizing,\n\t\t_fnVisibleToColumnIndex: _fnVisibleToColumnIndex,\n\t\t_fnColumnIndexToVisible: _fnColumnIndexToVisible,\n\t\t_fnVisbleColumns: _fnVisbleColumns,\n\t\t_fnGetColumns: _fnGetColumns,\n\t\t_fnColumnTypes: _fnColumnTypes,\n\t\t_fnApplyColumnDefs: _fnApplyColumnDefs,\n\t\t_fnHungarianMap: _fnHungarianMap,\n\t\t_fnCamelToHungarian: _fnCamelToHungarian,\n\t\t_fnLanguageCompat: _fnLanguageCompat,\n\t\t_fnBrowserDetect: _fnBrowserDetect,\n\t\t_fnAddData: _fnAddData,\n\t\t_fnAddTr: _fnAddTr,\n\t\t_fnNodeToDataIndex: _fnNodeToDataIndex,\n\t\t_fnNodeToColumnIndex: _fnNodeToColumnIndex,\n\t\t_fnGetCellData: _fnGetCellData,\n\t\t_fnSetCellData: _fnSetCellData,\n\t\t_fnSplitObjNotation: _fnSplitObjNotation,\n\t\t_fnGetObjectDataFn: _fnGetObjectDataFn,\n\t\t_fnSetObjectDataFn: _fnSetObjectDataFn,\n\t\t_fnGetDataMaster: _fnGetDataMaster,\n\t\t_fnClearTable: _fnClearTable,\n\t\t_fnDeleteIndex: _fnDeleteIndex,\n\t\t_fnInvalidate: _fnInvalidate,\n\t\t_fnGetRowElements: _fnGetRowElements,\n\t\t_fnCreateTr: _fnCreateTr,\n\t\t_fnBuildHead: _fnBuildHead,\n\t\t_fnDrawHead: _fnDrawHead,\n\t\t_fnDraw: _fnDraw,\n\t\t_fnReDraw: _fnReDraw,\n\t\t_fnAddOptionsHtml: _fnAddOptionsHtml,\n\t\t_fnDetectHeader: _fnDetectHeader,\n\t\t_fnGetUniqueThs: _fnGetUniqueThs,\n\t\t_fnFeatureHtmlFilter: _fnFeatureHtmlFilter,\n\t\t_fnFilterComplete: _fnFilterComplete,\n\t\t_fnFilterCustom: _fnFilterCustom,\n\t\t_fnFilterColumn: _fnFilterColumn,\n\t\t_fnFilter: _fnFilter,\n\t\t_fnFilterCreateSearch: _fnFilterCreateSearch,\n\t\t_fnEscapeRegex: _fnEscapeRegex,\n\t\t_fnFilterData: _fnFilterData,\n\t\t_fnFeatureHtmlInfo: _fnFeatureHtmlInfo,\n\t\t_fnUpdateInfo: _fnUpdateInfo,\n\t\t_fnInfoMacros: _fnInfoMacros,\n\t\t_fnInitialise: _fnInitialise,\n\t\t_fnInitComplete: _fnInitComplete,\n\t\t_fnLengthChange: _fnLengthChange,\n\t\t_fnFeatureHtmlLength: _fnFeatureHtmlLength,\n\t\t_fnFeatureHtmlPaginate: _fnFeatureHtmlPaginate,\n\t\t_fnPageChange: _fnPageChange,\n\t\t_fnFeatureHtmlProcessing: _fnFeatureHtmlProcessing,\n\t\t_fnProcessingDisplay: _fnProcessingDisplay,\n\t\t_fnFeatureHtmlTable: _fnFeatureHtmlTable,\n\t\t_fnScrollDraw: _fnScrollDraw,\n\t\t_fnApplyToChildren: _fnApplyToChildren,\n\t\t_fnCalculateColumnWidths: _fnCalculateColumnWidths,\n\t\t_fnThrottle: _fnThrottle,\n\t\t_fnConvertToWidth: _fnConvertToWidth,\n\t\t_fnGetWidestNode: _fnGetWidestNode,\n\t\t_fnGetMaxLenString: _fnGetMaxLenString,\n\t\t_fnStringToCss: _fnStringToCss,\n\t\t_fnSortFlatten: _fnSortFlatten,\n\t\t_fnSort: _fnSort,\n\t\t_fnSortAria: _fnSortAria,\n\t\t_fnSortListener: _fnSortListener,\n\t\t_fnSortAttachListener: _fnSortAttachListener,\n\t\t_fnSortingClasses: _fnSortingClasses,\n\t\t_fnSortData: _fnSortData,\n\t\t_fnSaveState: _fnSaveState,\n\t\t_fnLoadState: _fnLoadState,\n\t\t_fnSettingsFromNode: _fnSettingsFromNode,\n\t\t_fnLog: _fnLog,\n\t\t_fnMap: _fnMap,\n\t\t_fnBindAction: _fnBindAction,\n\t\t_fnCallbackReg: _fnCallbackReg,\n\t\t_fnCallbackFire: _fnCallbackFire,\n\t\t_fnLengthOverflow: _fnLengthOverflow,\n\t\t_fnRenderer: _fnRenderer,\n\t\t_fnDataSource: _fnDataSource,\n\t\t_fnRowAttributes: _fnRowAttributes,\n\t\t_fnExtend: _fnExtend,\n\t\t_fnCalculateEnd: function () {} // Used by a lot of plug-ins, but redundant\n\t\t                                // in 1.10, so this dead-end function is\n\t\t                                // added to prevent errors\n\t} );\n\t\n\n\t// jQuery access\n\t$.fn.dataTable = DataTable;\n\n\t// Provide access to the host jQuery object (circular reference)\n\tDataTable.$ = $;\n\n\t// Legacy aliases\n\t$.fn.dataTableSettings = DataTable.settings;\n\t$.fn.dataTableExt = DataTable.ext;\n\n\t// With a capital `D` we return a DataTables API instance rather than a\n\t// jQuery object\n\t$.fn.DataTable = function ( opts ) {\n\t\treturn $(this).dataTable( opts ).api();\n\t};\n\n\t// All properties that are available to $.fn.dataTable should also be\n\t// available on $.fn.DataTable\n\t$.each( DataTable, function ( prop, val ) {\n\t\t$.fn.DataTable[ prop ] = val;\n\t} );\n\n\n\t// Information about events fired by DataTables - for documentation.\n\t/**\n\t * Draw event, fired whenever the table is redrawn on the page, at the same\n\t * point as fnDrawCallback. This may be useful for binding events or\n\t * performing calculations when the table is altered at all.\n\t *  @name DataTable#draw.dt\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n\t */\n\n\t/**\n\t * Search event, fired when the searching applied to the table (using the\n\t * built-in global search, or column filters) is altered.\n\t *  @name DataTable#search.dt\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n\t */\n\n\t/**\n\t * Page change event, fired when the paging of the table is altered.\n\t *  @name DataTable#page.dt\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n\t */\n\n\t/**\n\t * Order event, fired when the ordering applied to the table is altered.\n\t *  @name DataTable#order.dt\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n\t */\n\n\t/**\n\t * DataTables initialisation complete event, fired when the table is fully\n\t * drawn, including Ajax data loaded, if Ajax data is required.\n\t *  @name DataTable#init.dt\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} oSettings DataTables settings object\n\t *  @param {object} json The JSON object request from the server - only\n\t *    present if client-side Ajax sourced data is used</li></ol>\n\t */\n\n\t/**\n\t * State save event, fired when the table has changed state a new state save\n\t * is required. This event allows modification of the state saving object\n\t * prior to actually doing the save, including addition or other state\n\t * properties (for plug-ins) or modification of a DataTables core property.\n\t *  @name DataTable#stateSaveParams.dt\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} oSettings DataTables settings object\n\t *  @param {object} json The state information to be saved\n\t */\n\n\t/**\n\t * State load event, fired when the table is loading state from the stored\n\t * data, but prior to the settings object being modified by the saved state\n\t * - allowing modification of the saved state is required or loading of\n\t * state for a plug-in.\n\t *  @name DataTable#stateLoadParams.dt\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} oSettings DataTables settings object\n\t *  @param {object} json The saved state information\n\t */\n\n\t/**\n\t * State loaded event, fired when state has been loaded from stored data and\n\t * the settings object has been modified by the loaded data.\n\t *  @name DataTable#stateLoaded.dt\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} oSettings DataTables settings object\n\t *  @param {object} json The saved state information\n\t */\n\n\t/**\n\t * Processing event, fired when DataTables is doing some kind of processing\n\t * (be it, order, search or anything else). It can be used to indicate to\n\t * the end user that there is something happening, or that something has\n\t * finished.\n\t *  @name DataTable#processing.dt\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} oSettings DataTables settings object\n\t *  @param {boolean} bShow Flag for if DataTables is doing processing or not\n\t */\n\n\t/**\n\t * Ajax (XHR) event, fired whenever an Ajax request is completed from a\n\t * request to made to the server for new data. This event is called before\n\t * DataTables processed the returned data, so it can also be used to pre-\n\t * process the data returned from the server, if needed.\n\t *\n\t * Note that this trigger is called in `fnServerData`, if you override\n\t * `fnServerData` and which to use this event, you need to trigger it in you\n\t * success function.\n\t *  @name DataTable#xhr.dt\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n\t *  @param {object} json JSON returned from the server\n\t *\n\t *  @example\n\t *     // Use a custom property returned from the server in another DOM element\n\t *     $('#table').dataTable().on('xhr.dt', function (e, settings, json) {\n\t *       $('#status').html( json.status );\n\t *     } );\n\t *\n\t *  @example\n\t *     // Pre-process the data returned from the server\n\t *     $('#table').dataTable().on('xhr.dt', function (e, settings, json) {\n\t *       for ( var i=0, ien=json.aaData.length ; i<ien ; i++ ) {\n\t *         json.aaData[i].sum = json.aaData[i].one + json.aaData[i].two;\n\t *       }\n\t *       // Note no return - manipulate the data directly in the JSON object.\n\t *     } );\n\t */\n\n\t/**\n\t * Destroy event, fired when the DataTable is destroyed by calling fnDestroy\n\t * or passing the bDestroy:true parameter in the initialisation object. This\n\t * can be used to remove bound events, added DOM nodes, etc.\n\t *  @name DataTable#destroy.dt\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n\t */\n\n\t/**\n\t * Page length change event, fired when number of records to show on each\n\t * page (the length) is changed.\n\t *  @name DataTable#length.dt\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n\t *  @param {integer} len New length\n\t */\n\n\t/**\n\t * Column sizing has changed.\n\t *  @name DataTable#column-sizing.dt\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n\t */\n\n\t/**\n\t * Column visibility has changed.\n\t *  @name DataTable#column-visibility.dt\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n\t *  @param {int} column Column index\n\t *  @param {bool} vis `false` if column now hidden, or `true` if visible\n\t */\n\n\treturn $.fn.dataTable;\n}));\n","/**\n * @license\n * Lodash <https://lodash.com/>\n * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '4.17.15';\n\n  /** Used as the size to enable large array optimizations. */\n  var LARGE_ARRAY_SIZE = 200;\n\n  /** Error message constants. */\n  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',\n      FUNC_ERROR_TEXT = 'Expected a function';\n\n  /** Used to stand-in for `undefined` hash values. */\n  var HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n  /** Used as the maximum memoize cache size. */\n  var MAX_MEMOIZE_SIZE = 500;\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** Used to compose bitmasks for cloning. */\n  var CLONE_DEEP_FLAG = 1,\n      CLONE_FLAT_FLAG = 2,\n      CLONE_SYMBOLS_FLAG = 4;\n\n  /** Used to compose bitmasks for value comparisons. */\n  var COMPARE_PARTIAL_FLAG = 1,\n      COMPARE_UNORDERED_FLAG = 2;\n\n  /** Used to compose bitmasks for function metadata. */\n  var WRAP_BIND_FLAG = 1,\n      WRAP_BIND_KEY_FLAG = 2,\n      WRAP_CURRY_BOUND_FLAG = 4,\n      WRAP_CURRY_FLAG = 8,\n      WRAP_CURRY_RIGHT_FLAG = 16,\n      WRAP_PARTIAL_FLAG = 32,\n      WRAP_PARTIAL_RIGHT_FLAG = 64,\n      WRAP_ARY_FLAG = 128,\n      WRAP_REARG_FLAG = 256,\n      WRAP_FLIP_FLAG = 512;\n\n  /** Used as default options for `_.truncate`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect hot functions by number of calls within a span of milliseconds. */\n  var HOT_COUNT = 800,\n      HOT_SPAN = 16;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2,\n      LAZY_WHILE_FLAG = 3;\n\n  /** Used as references for various `Number` constants. */\n  var INFINITY = 1 / 0,\n      MAX_SAFE_INTEGER = 9007199254740991,\n      MAX_INTEGER = 1.7976931348623157e+308,\n      NAN = 0 / 0;\n\n  /** Used as references for the maximum length and index of an array. */\n  var MAX_ARRAY_LENGTH = 4294967295,\n      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n  /** Used to associate wrap methods with their bit flags. */\n  var wrapFlags = [\n    ['ary', WRAP_ARY_FLAG],\n    ['bind', WRAP_BIND_FLAG],\n    ['bindKey', WRAP_BIND_KEY_FLAG],\n    ['curry', WRAP_CURRY_FLAG],\n    ['curryRight', WRAP_CURRY_RIGHT_FLAG],\n    ['flip', WRAP_FLIP_FLAG],\n    ['partial', WRAP_PARTIAL_FLAG],\n    ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],\n    ['rearg', WRAP_REARG_FLAG]\n  ];\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      asyncTag = '[object AsyncFunction]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      domExcTag = '[object DOMException]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      genTag = '[object GeneratorFunction]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      nullTag = '[object Null]',\n      objectTag = '[object Object]',\n      promiseTag = '[object Promise]',\n      proxyTag = '[object Proxy]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      symbolTag = '[object Symbol]',\n      undefinedTag = '[object Undefined]',\n      weakMapTag = '[object WeakMap]',\n      weakSetTag = '[object WeakSet]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      dataViewTag = '[object DataView]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,\n      reUnescapedHtml = /[&<>\"']/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n  /**\n   * Used to match `RegExp`\n   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n   */\n  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n      reHasRegExpChar = RegExp(reRegExpChar.source);\n\n  /** Used to match leading and trailing whitespace. */\n  var reTrim = /^\\s+|\\s+$/g,\n      reTrimStart = /^\\s+/,\n      reTrimEnd = /\\s+$/;\n\n  /** Used to match wrap detail comments. */\n  var reWrapComment = /\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/,\n      reWrapDetails = /\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,\n      reSplitDetails = /,? & /;\n\n  /** Used to match words composed of alphanumeric characters. */\n  var reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /**\n   * Used to match\n   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).\n   */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect bad signed hexadecimal string values. */\n  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n  /** Used to detect binary string values. */\n  var reIsBinary = /^0b[01]+$/i;\n\n  /** Used to detect host constructors (Safari). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to detect octal string values. */\n  var reIsOctal = /^0o[0-7]+$/i;\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n  /** Used to match Latin Unicode letters (excluding mathematical operators). */\n  var reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to compose unicode character classes. */\n  var rsAstralRange = '\\\\ud800-\\\\udfff',\n      rsComboMarksRange = '\\\\u0300-\\\\u036f',\n      reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n      rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n      rsDingbatRange = '\\\\u2700-\\\\u27bf',\n      rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n      rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n      rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n      rsPunctuationRange = '\\\\u2000-\\\\u206f',\n      rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n      rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n      rsVarRange = '\\\\ufe0e\\\\ufe0f',\n      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n  /** Used to compose unicode capture groups. */\n  var rsApos = \"['\\u2019]\",\n      rsAstral = '[' + rsAstralRange + ']',\n      rsBreak = '[' + rsBreakRange + ']',\n      rsCombo = '[' + rsComboRange + ']',\n      rsDigits = '\\\\d+',\n      rsDingbat = '[' + rsDingbatRange + ']',\n      rsLower = '[' + rsLowerRange + ']',\n      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n      rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n      rsNonAstral = '[^' + rsAstralRange + ']',\n      rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n      rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n      rsUpper = '[' + rsUpperRange + ']',\n      rsZWJ = '\\\\u200d';\n\n  /** Used to compose unicode regexes. */\n  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',\n      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',\n      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n      reOptMod = rsModifier + '?',\n      rsOptVar = '[' + rsVarRange + ']?',\n      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n      rsOrdLower = '\\\\d*(?:1st|2nd|3rd|(?![123])\\\\dth)(?=\\\\b|[A-Z_])',\n      rsOrdUpper = '\\\\d*(?:1ST|2ND|3RD|(?![123])\\\\dTH)(?=\\\\b|[a-z_])',\n      rsSeq = rsOptVar + reOptMod + rsOptJoin,\n      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n  /** Used to match apostrophes. */\n  var reApos = RegExp(rsApos, 'g');\n\n  /**\n   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n   */\n  var reComboMark = RegExp(rsCombo, 'g');\n\n  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\n  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n  /** Used to match complex or compound words. */\n  var reUnicodeWord = RegExp([\n    rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n    rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',\n    rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,\n    rsUpper + '+' + rsOptContrUpper,\n    rsOrdUpper,\n    rsOrdLower,\n    rsDigits,\n    rsEmoji\n  ].join('|'), 'g');\n\n  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\n  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n  /** Used to detect strings that need a more robust regexp to match words. */\n  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',\n    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',\n    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',\n    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\n  typedArrayTags[errorTag] = typedArrayTags[funcTag] =\n  typedArrayTags[mapTag] = typedArrayTags[numberTag] =\n  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =\n  typedArrayTags[setTag] = typedArrayTags[stringTag] =\n  typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\n  cloneableTags[boolTag] = cloneableTags[dateTag] =\n  cloneableTags[float32Tag] = cloneableTags[float64Tag] =\n  cloneableTags[int8Tag] = cloneableTags[int16Tag] =\n  cloneableTags[int32Tag] = cloneableTags[mapTag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[setTag] =\n  cloneableTags[stringTag] = cloneableTags[symbolTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used to map Latin Unicode letters to basic Latin letters. */\n  var deburredLetters = {\n    // Latin-1 Supplement block.\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss',\n    // Latin Extended-A block.\n    '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n    '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n    '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n    '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n    '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n    '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n    '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n    '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n    '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n    '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n    '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n    '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n    '\\u0134': 'J',  '\\u0135': 'j',\n    '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n    '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n    '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n    '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n    '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n    '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n    '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n    '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n    '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n    '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n    '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n    '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n    '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n    '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n    '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n    '\\u0174': 'W',  '\\u0175': 'w',\n    '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n    '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n    '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n    '\\u0132': 'IJ', '\\u0133': 'ij',\n    '\\u0152': 'Oe', '\\u0153': 'oe',\n    '\\u0149': \"'n\", '\\u017f': 's'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\"\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Built-in method references without a dependency on `root`. */\n  var freeParseFloat = parseFloat,\n      freeParseInt = parseInt;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n  /** Used as a reference to the global object. */\n  var root = freeGlobal || freeSelf || Function('return this')();\n\n  /** Detect free variable `exports`. */\n  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports;\n\n  /** Detect free variable `process` from Node.js. */\n  var freeProcess = moduleExports && freeGlobal.process;\n\n  /** Used to access faster Node.js helpers. */\n  var nodeUtil = (function() {\n    try {\n      // Use `util.types` for Node.js 10+.\n      var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n      if (types) {\n        return types;\n      }\n\n      // Legacy `process.binding('util')` for Node.js < 10.\n      return freeProcess && freeProcess.binding && freeProcess.binding('util');\n    } catch (e) {}\n  }());\n\n  /* Node.js helper references. */\n  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,\n      nodeIsDate = nodeUtil && nodeUtil.isDate,\n      nodeIsMap = nodeUtil && nodeUtil.isMap,\n      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,\n      nodeIsSet = nodeUtil && nodeUtil.isSet,\n      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * A faster alternative to `Function#apply`, this function invokes `func`\n   * with the `this` binding of `thisArg` and the arguments of `args`.\n   *\n   * @private\n   * @param {Function} func The function to invoke.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {Array} args The arguments to invoke `func` with.\n   * @returns {*} Returns the result of `func`.\n   */\n  function apply(func, thisArg, args) {\n    switch (args.length) {\n      case 0: return func.call(thisArg);\n      case 1: return func.call(thisArg, args[0]);\n      case 2: return func.call(thisArg, args[0], args[1]);\n      case 3: return func.call(thisArg, args[0], args[1], args[2]);\n    }\n    return func.apply(thisArg, args);\n  }\n\n  /**\n   * A specialized version of `baseAggregator` for arrays.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} setter The function to set `accumulator` values.\n   * @param {Function} iteratee The iteratee to transform keys.\n   * @param {Object} accumulator The initial aggregated object.\n   * @returns {Function} Returns `accumulator`.\n   */\n  function arrayAggregator(array, setter, iteratee, accumulator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      var value = array[index];\n      setter(accumulator, value, iteratee(value), array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.forEach` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEach(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (iteratee(array[index], index, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.forEachRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEachRight(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n\n    while (length--) {\n      if (iteratee(array[length], length, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.every` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n   *  else `false`.\n   */\n  function arrayEvery(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (!predicate(array[index], index, array)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * A specialized version of `_.filter` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {Array} Returns the new filtered array.\n   */\n  function arrayFilter(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (predicate(value, index, array)) {\n        result[resIndex++] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.includes` for arrays without support for\n   * specifying an index to search from.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludes(array, value) {\n    var length = array == null ? 0 : array.length;\n    return !!length && baseIndexOf(array, value, 0) > -1;\n  }\n\n  /**\n   * This function is like `arrayIncludes` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludesWith(array, value, comparator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (comparator(value, array[index])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * A specialized version of `_.map` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the new mapped array.\n   */\n  function arrayMap(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        result = Array(length);\n\n    while (++index < length) {\n      result[index] = iteratee(array[index], index, array);\n    }\n    return result;\n  }\n\n  /**\n   * Appends the elements of `values` to `array`.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {Array} values The values to append.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayPush(array, values) {\n    var index = -1,\n        length = values.length,\n        offset = array.length;\n\n    while (++index < length) {\n      array[offset + index] = values[index];\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.reduce` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the first element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduce(array, iteratee, accumulator, initAccum) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    if (initAccum && length) {\n      accumulator = array[++index];\n    }\n    while (++index < length) {\n      accumulator = iteratee(accumulator, array[index], index, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.reduceRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the last element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduceRight(array, iteratee, accumulator, initAccum) {\n    var length = array == null ? 0 : array.length;\n    if (initAccum && length) {\n      accumulator = array[--length];\n    }\n    while (length--) {\n      accumulator = iteratee(accumulator, array[length], length, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.some` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if any element passes the predicate check,\n   *  else `false`.\n   */\n  function arraySome(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (predicate(array[index], index, array)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Gets the size of an ASCII `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  var asciiSize = baseProperty('length');\n\n  /**\n   * Converts an ASCII `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function asciiToArray(string) {\n    return string.split('');\n  }\n\n  /**\n   * Splits an ASCII `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function asciiWords(string) {\n    return string.match(reAsciiWord) || [];\n  }\n\n  /**\n   * The base implementation of methods like `_.findKey` and `_.findLastKey`,\n   * without support for iteratee shorthands, which iterates over `collection`\n   * using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the found element or its key, else `undefined`.\n   */\n  function baseFindKey(collection, predicate, eachFunc) {\n    var result;\n    eachFunc(collection, function(value, key, collection) {\n      if (predicate(value, key, collection)) {\n        result = key;\n        return false;\n      }\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 1 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    return value === value\n      ? strictIndexOf(array, value, fromIndex)\n      : baseFindIndex(array, baseIsNaN, fromIndex);\n  }\n\n  /**\n   * This function is like `baseIndexOf` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOfWith(array, value, fromIndex, comparator) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (comparator(array[index], value)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.isNaN` without support for number objects.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n   */\n  function baseIsNaN(value) {\n    return value !== value;\n  }\n\n  /**\n   * The base implementation of `_.mean` and `_.meanBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the mean.\n   */\n  function baseMean(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n    return length ? (baseSum(array, iteratee) / length) : NAN;\n  }\n\n  /**\n   * The base implementation of `_.property` without support for deep paths.\n   *\n   * @private\n   * @param {string} key The key of the property to get.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function baseProperty(key) {\n    return function(object) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.propertyOf` without support for deep paths.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function basePropertyOf(object) {\n    return function(key) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} accumulator The initial value.\n   * @param {boolean} initAccum Specify using the first or last element of\n   *  `collection` as the initial value.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the accumulated value.\n   */\n  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n    eachFunc(collection, function(value, index, collection) {\n      accumulator = initAccum\n        ? (initAccum = false, value)\n        : iteratee(accumulator, value, index, collection);\n    });\n    return accumulator;\n  }\n\n  /**\n   * The base implementation of `_.sortBy` which uses `comparer` to define the\n   * sort order of `array` and replaces criteria objects with their corresponding\n   * values.\n   *\n   * @private\n   * @param {Array} array The array to sort.\n   * @param {Function} comparer The function to define sort order.\n   * @returns {Array} Returns `array`.\n   */\n  function baseSortBy(array, comparer) {\n    var length = array.length;\n\n    array.sort(comparer);\n    while (length--) {\n      array[length] = array[length].value;\n    }\n    return array;\n  }\n\n  /**\n   * The base implementation of `_.sum` and `_.sumBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the sum.\n   */\n  function baseSum(array, iteratee) {\n    var result,\n        index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      var current = iteratee(array[index]);\n      if (current !== undefined) {\n        result = result === undefined ? current : (result + current);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.times` without support for iteratee shorthands\n   * or max array length checks.\n   *\n   * @private\n   * @param {number} n The number of times to invoke `iteratee`.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the array of results.\n   */\n  function baseTimes(n, iteratee) {\n    var index = -1,\n        result = Array(n);\n\n    while (++index < n) {\n      result[index] = iteratee(index);\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n   * of key-value pairs for `object` corresponding to the property names of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the key-value pairs.\n   */\n  function baseToPairs(object, props) {\n    return arrayMap(props, function(key) {\n      return [key, object[key]];\n    });\n  }\n\n  /**\n   * The base implementation of `_.unary` without support for storing metadata.\n   *\n   * @private\n   * @param {Function} func The function to cap arguments for.\n   * @returns {Function} Returns the new capped function.\n   */\n  function baseUnary(func) {\n    return function(value) {\n      return func(value);\n    };\n  }\n\n  /**\n   * The base implementation of `_.values` and `_.valuesIn` which creates an\n   * array of `object` property values corresponding to the property names\n   * of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the array of property values.\n   */\n  function baseValues(object, props) {\n    return arrayMap(props, function(key) {\n      return object[key];\n    });\n  }\n\n  /**\n   * Checks if a `cache` value for `key` exists.\n   *\n   * @private\n   * @param {Object} cache The cache to query.\n   * @param {string} key The key of the entry to check.\n   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n   */\n  function cacheHas(cache, key) {\n    return cache.has(key);\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the first unmatched string symbol.\n   */\n  function charsStartIndex(strSymbols, chrSymbols) {\n    var index = -1,\n        length = strSymbols.length;\n\n    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the last unmatched string symbol.\n   */\n  function charsEndIndex(strSymbols, chrSymbols) {\n    var index = strSymbols.length;\n\n    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Gets the number of `placeholder` occurrences in `array`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} placeholder The placeholder to search for.\n   * @returns {number} Returns the placeholder count.\n   */\n  function countHolders(array, placeholder) {\n    var length = array.length,\n        result = 0;\n\n    while (length--) {\n      if (array[length] === placeholder) {\n        ++result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n   * letters to basic Latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  var deburrLetter = basePropertyOf(deburredLetters);\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  var escapeHtmlChar = basePropertyOf(htmlEscapes);\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the value at `key` of `object`.\n   *\n   * @private\n   * @param {Object} [object] The object to query.\n   * @param {string} key The key of the property to get.\n   * @returns {*} Returns the property value.\n   */\n  function getValue(object, key) {\n    return object == null ? undefined : object[key];\n  }\n\n  /**\n   * Checks if `string` contains Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n   */\n  function hasUnicode(string) {\n    return reHasUnicode.test(string);\n  }\n\n  /**\n   * Checks if `string` contains a word composed of Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a word is found, else `false`.\n   */\n  function hasUnicodeWord(string) {\n    return reHasUnicodeWord.test(string);\n  }\n\n  /**\n   * Converts `iterator` to an array.\n   *\n   * @private\n   * @param {Object} iterator The iterator to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function iteratorToArray(iterator) {\n    var data,\n        result = [];\n\n    while (!(data = iterator.next()).done) {\n      result.push(data.value);\n    }\n    return result;\n  }\n\n  /**\n   * Converts `map` to its key-value pairs.\n   *\n   * @private\n   * @param {Object} map The map to convert.\n   * @returns {Array} Returns the key-value pairs.\n   */\n  function mapToArray(map) {\n    var index = -1,\n        result = Array(map.size);\n\n    map.forEach(function(value, key) {\n      result[++index] = [key, value];\n    });\n    return result;\n  }\n\n  /**\n   * Creates a unary function that invokes `func` with its argument transformed.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {Function} transform The argument transform.\n   * @returns {Function} Returns the new function.\n   */\n  function overArg(func, transform) {\n    return function(arg) {\n      return func(transform(arg));\n    };\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (value === placeholder || value === PLACEHOLDER) {\n        array[index] = PLACEHOLDER;\n        result[resIndex++] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Converts `set` to an array of its values.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the values.\n   */\n  function setToArray(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = value;\n    });\n    return result;\n  }\n\n  /**\n   * Converts `set` to its value-value pairs.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the value-value pairs.\n   */\n  function setToPairs(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = [value, value];\n    });\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.indexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictIndexOf(array, value, fromIndex) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * A specialized version of `_.lastIndexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictLastIndexOf(array, value, fromIndex) {\n    var index = fromIndex + 1;\n    while (index--) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return index;\n  }\n\n  /**\n   * Gets the number of symbols in `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the string size.\n   */\n  function stringSize(string) {\n    return hasUnicode(string)\n      ? unicodeSize(string)\n      : asciiSize(string);\n  }\n\n  /**\n   * Converts `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function stringToArray(string) {\n    return hasUnicode(string)\n      ? unicodeToArray(string)\n      : asciiToArray(string);\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);\n\n  /**\n   * Gets the size of a Unicode `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  function unicodeSize(string) {\n    var result = reUnicode.lastIndex = 0;\n    while (reUnicode.test(string)) {\n      ++result;\n    }\n    return result;\n  }\n\n  /**\n   * Converts a Unicode `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function unicodeToArray(string) {\n    return string.match(reUnicode) || [];\n  }\n\n  /**\n   * Splits a Unicode `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function unicodeWords(string) {\n    return string.match(reUnicodeWord) || [];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 1.1.0\n   * @category Util\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // Create a suped-up `defer` in Node.js.\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  var runInContext = (function runInContext(context) {\n    context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));\n\n    /** Built-in constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Error = context.Error,\n        Function = context.Function,\n        Math = context.Math,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n\n    /** Used for built-in method references. */\n    var arrayProto = Array.prototype,\n        funcProto = Function.prototype,\n        objectProto = Object.prototype;\n\n    /** Used to detect overreaching core-js shims. */\n    var coreJsData = context['__core-js_shared__'];\n\n    /** Used to resolve the decompiled source of functions. */\n    var funcToString = funcProto.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /** Used to detect methods masquerading as native. */\n    var maskSrcKey = (function() {\n      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n      return uid ? ('Symbol(src)_1.' + uid) : '';\n    }());\n\n    /**\n     * Used to resolve the\n     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n    var nativeObjectToString = objectProto.toString;\n\n    /** Used to infer the `Object` constructor. */\n    var objectCtorString = funcToString.call(Object);\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = root._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Built-in value references. */\n    var Buffer = moduleExports ? context.Buffer : undefined,\n        Symbol = context.Symbol,\n        Uint8Array = context.Uint8Array,\n        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,\n        getPrototype = overArg(Object.getPrototypeOf, Object),\n        objectCreate = Object.create,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        splice = arrayProto.splice,\n        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,\n        symIterator = Symbol ? Symbol.iterator : undefined,\n        symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n    var defineProperty = (function() {\n      try {\n        var func = getNative(Object, 'defineProperty');\n        func({}, '', {});\n        return func;\n      } catch (e) {}\n    }());\n\n    /** Mocked built-ins. */\n    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,\n        ctxNow = Date && Date.now !== root.Date.now && Date.now,\n        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;\n\n    /* Built-in method references for those with the same name as other `lodash` methods. */\n    var nativeCeil = Math.ceil,\n        nativeFloor = Math.floor,\n        nativeGetSymbols = Object.getOwnPropertySymbols,\n        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n        nativeIsFinite = context.isFinite,\n        nativeJoin = arrayProto.join,\n        nativeKeys = overArg(Object.keys, Object),\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeNow = Date.now,\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random,\n        nativeReverse = arrayProto.reverse;\n\n    /* Built-in method references that are verified to be native. */\n    var DataView = getNative(context, 'DataView'),\n        Map = getNative(context, 'Map'),\n        Promise = getNative(context, 'Promise'),\n        Set = getNative(context, 'Set'),\n        WeakMap = getNative(context, 'WeakMap'),\n        nativeCreate = getNative(Object, 'create');\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /** Used to detect maps, sets, and weakmaps. */\n    var dataViewCtorString = toSource(DataView),\n        mapCtorString = toSource(Map),\n        promiseCtorString = toSource(Promise),\n        setCtorString = toSource(Set),\n        weakMapCtorString = toSource(WeakMap);\n\n    /** Used to convert symbols to primitives and strings. */\n    var symbolProto = Symbol ? Symbol.prototype : undefined,\n        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n        symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit method\n     * chain sequences. Methods that operate on and return arrays, collections,\n     * and functions can be chained together. Methods that retrieve a single value\n     * or may return a primitive value will automatically end the chain sequence\n     * and return the unwrapped value. Otherwise, the value must be unwrapped\n     * with `_#value`.\n     *\n     * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n     * enabled using `_.chain`.\n     *\n     * The execution of chained methods is lazy, that is, it's deferred until\n     * `_#value` is implicitly or explicitly called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion.\n     * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n     * the creation of intermediate arrays and can greatly reduce the number of\n     * iteratee executions. Sections of a chain sequence qualify for shortcut\n     * fusion if the section is applied to an array and iteratees accept only\n     * one argument. The heuristic for whether a section qualifies for shortcut\n     * fusion is subject to change.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n     * `zipObject`, `zipObjectDeep`, and `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n     * `upperFirst`, `value`, and `words`\n     *\n     * @name _\n     * @constructor\n     * @category Seq\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // Returns an unwrapped value.\n     * wrapped.reduce(_.add);\n     * // => 6\n     *\n     * // Returns a wrapped value.\n     * var squares = wrapped.map(square);\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} proto The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    var baseCreate = (function() {\n      function object() {}\n      return function(proto) {\n        if (!isObject(proto)) {\n          return {};\n        }\n        if (objectCreate) {\n          return objectCreate(proto);\n        }\n        object.prototype = proto;\n        var result = new object;\n        object.prototype = undefined;\n        return result;\n      };\n    }());\n\n    /**\n     * The function whose prototype chain sequence wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable explicit method chain sequences.\n     */\n    function LodashWrapper(value, chainAll) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__chain__ = !!chainAll;\n      this.__index__ = 0;\n      this.__values__ = undefined;\n    }\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB) as well as ES2015 template strings. Change the\n     * following template settings to use alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type {Object}\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type {string}\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type {Object}\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type {Function}\n         */\n        '_': lodash\n      }\n    };\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n    lodash.prototype.constructor = lodash;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @constructor\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__dir__ = 1;\n      this.__filtered__ = false;\n      this.__iteratees__ = [];\n      this.__takeCount__ = MAX_ARRAY_LENGTH;\n      this.__views__ = [];\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var result = new LazyWrapper(this.__wrapped__);\n      result.__actions__ = copyArray(this.__actions__);\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = copyArray(this.__iteratees__);\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = copyArray(this.__views__);\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value(),\n          dir = this.__dir__,\n          isArr = isArray(array),\n          isRight = dir < 0,\n          arrLength = isArr ? array.length : 0,\n          view = getView(0, arrLength, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees.length,\n          resIndex = 0,\n          takeCount = nativeMin(length, this.__takeCount__);\n\n      if (!isArr || (!isRight && arrLength == length && takeCount == length)) {\n        return baseWrapperValue(array, this.__actions__);\n      }\n      var result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type,\n              computed = iteratee(value);\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    // Ensure `LazyWrapper` is an instance of `baseLodash`.\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a hash object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Hash(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the hash.\n     *\n     * @private\n     * @name clear\n     * @memberOf Hash\n     */\n    function hashClear() {\n      this.__data__ = nativeCreate ? nativeCreate(null) : {};\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the hash.\n     *\n     * @private\n     * @name delete\n     * @memberOf Hash\n     * @param {Object} hash The hash to modify.\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function hashDelete(key) {\n      var result = this.has(key) && delete this.__data__[key];\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the hash value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Hash\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function hashGet(key) {\n      var data = this.__data__;\n      if (nativeCreate) {\n        var result = data[key];\n        return result === HASH_UNDEFINED ? undefined : result;\n      }\n      return hasOwnProperty.call(data, key) ? data[key] : undefined;\n    }\n\n    /**\n     * Checks if a hash value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Hash\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function hashHas(key) {\n      var data = this.__data__;\n      return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n    }\n\n    /**\n     * Sets the hash `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Hash\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the hash instance.\n     */\n    function hashSet(key, value) {\n      var data = this.__data__;\n      this.size += this.has(key) ? 0 : 1;\n      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n      return this;\n    }\n\n    // Add methods to `Hash`.\n    Hash.prototype.clear = hashClear;\n    Hash.prototype['delete'] = hashDelete;\n    Hash.prototype.get = hashGet;\n    Hash.prototype.has = hashHas;\n    Hash.prototype.set = hashSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an list cache object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function ListCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the list cache.\n     *\n     * @private\n     * @name clear\n     * @memberOf ListCache\n     */\n    function listCacheClear() {\n      this.__data__ = [];\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the list cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf ListCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function listCacheDelete(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        return false;\n      }\n      var lastIndex = data.length - 1;\n      if (index == lastIndex) {\n        data.pop();\n      } else {\n        splice.call(data, index, 1);\n      }\n      --this.size;\n      return true;\n    }\n\n    /**\n     * Gets the list cache value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf ListCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function listCacheGet(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      return index < 0 ? undefined : data[index][1];\n    }\n\n    /**\n     * Checks if a list cache value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf ListCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function listCacheHas(key) {\n      return assocIndexOf(this.__data__, key) > -1;\n    }\n\n    /**\n     * Sets the list cache `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf ListCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the list cache instance.\n     */\n    function listCacheSet(key, value) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        ++this.size;\n        data.push([key, value]);\n      } else {\n        data[index][1] = value;\n      }\n      return this;\n    }\n\n    // Add methods to `ListCache`.\n    ListCache.prototype.clear = listCacheClear;\n    ListCache.prototype['delete'] = listCacheDelete;\n    ListCache.prototype.get = listCacheGet;\n    ListCache.prototype.has = listCacheHas;\n    ListCache.prototype.set = listCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a map cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function MapCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the map.\n     *\n     * @private\n     * @name clear\n     * @memberOf MapCache\n     */\n    function mapCacheClear() {\n      this.size = 0;\n      this.__data__ = {\n        'hash': new Hash,\n        'map': new (Map || ListCache),\n        'string': new Hash\n      };\n    }\n\n    /**\n     * Removes `key` and its value from the map.\n     *\n     * @private\n     * @name delete\n     * @memberOf MapCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function mapCacheDelete(key) {\n      var result = getMapData(this, key)['delete'](key);\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the map value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf MapCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function mapCacheGet(key) {\n      return getMapData(this, key).get(key);\n    }\n\n    /**\n     * Checks if a map value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf MapCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapCacheHas(key) {\n      return getMapData(this, key).has(key);\n    }\n\n    /**\n     * Sets the map `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf MapCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the map cache instance.\n     */\n    function mapCacheSet(key, value) {\n      var data = getMapData(this, key),\n          size = data.size;\n\n      data.set(key, value);\n      this.size += data.size == size ? 0 : 1;\n      return this;\n    }\n\n    // Add methods to `MapCache`.\n    MapCache.prototype.clear = mapCacheClear;\n    MapCache.prototype['delete'] = mapCacheDelete;\n    MapCache.prototype.get = mapCacheGet;\n    MapCache.prototype.has = mapCacheHas;\n    MapCache.prototype.set = mapCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates an array cache object to store unique values.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var index = -1,\n          length = values == null ? 0 : values.length;\n\n      this.__data__ = new MapCache;\n      while (++index < length) {\n        this.add(values[index]);\n      }\n    }\n\n    /**\n     * Adds `value` to the array cache.\n     *\n     * @private\n     * @name add\n     * @memberOf SetCache\n     * @alias push\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache instance.\n     */\n    function setCacheAdd(value) {\n      this.__data__.set(value, HASH_UNDEFINED);\n      return this;\n    }\n\n    /**\n     * Checks if `value` is in the array cache.\n     *\n     * @private\n     * @name has\n     * @memberOf SetCache\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `true` if `value` is found, else `false`.\n     */\n    function setCacheHas(value) {\n      return this.__data__.has(value);\n    }\n\n    // Add methods to `SetCache`.\n    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\n    SetCache.prototype.has = setCacheHas;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a stack cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Stack(entries) {\n      var data = this.__data__ = new ListCache(entries);\n      this.size = data.size;\n    }\n\n    /**\n     * Removes all key-value entries from the stack.\n     *\n     * @private\n     * @name clear\n     * @memberOf Stack\n     */\n    function stackClear() {\n      this.__data__ = new ListCache;\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the stack.\n     *\n     * @private\n     * @name delete\n     * @memberOf Stack\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function stackDelete(key) {\n      var data = this.__data__,\n          result = data['delete'](key);\n\n      this.size = data.size;\n      return result;\n    }\n\n    /**\n     * Gets the stack value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Stack\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function stackGet(key) {\n      return this.__data__.get(key);\n    }\n\n    /**\n     * Checks if a stack value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Stack\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function stackHas(key) {\n      return this.__data__.has(key);\n    }\n\n    /**\n     * Sets the stack `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Stack\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the stack cache instance.\n     */\n    function stackSet(key, value) {\n      var data = this.__data__;\n      if (data instanceof ListCache) {\n        var pairs = data.__data__;\n        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n          pairs.push([key, value]);\n          this.size = ++data.size;\n          return this;\n        }\n        data = this.__data__ = new MapCache(pairs);\n      }\n      data.set(key, value);\n      this.size = data.size;\n      return this;\n    }\n\n    // Add methods to `Stack`.\n    Stack.prototype.clear = stackClear;\n    Stack.prototype['delete'] = stackDelete;\n    Stack.prototype.get = stackGet;\n    Stack.prototype.has = stackHas;\n    Stack.prototype.set = stackSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of the enumerable property names of the array-like `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @param {boolean} inherited Specify returning inherited property names.\n     * @returns {Array} Returns the array of property names.\n     */\n    function arrayLikeKeys(value, inherited) {\n      var isArr = isArray(value),\n          isArg = !isArr && isArguments(value),\n          isBuff = !isArr && !isArg && isBuffer(value),\n          isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n          skipIndexes = isArr || isArg || isBuff || isType,\n          result = skipIndexes ? baseTimes(value.length, String) : [],\n          length = result.length;\n\n      for (var key in value) {\n        if ((inherited || hasOwnProperty.call(value, key)) &&\n            !(skipIndexes && (\n               // Safari 9 has enumerable `arguments.length` in strict mode.\n               key == 'length' ||\n               // Node.js 0.10 has enumerable non-index properties on buffers.\n               (isBuff && (key == 'offset' || key == 'parent')) ||\n               // PhantomJS 2 has enumerable non-index properties on typed arrays.\n               (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n               // Skip index properties.\n               isIndex(key, length)\n            ))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.sample` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @returns {*} Returns the random element.\n     */\n    function arraySample(array) {\n      var length = array.length;\n      return length ? array[baseRandom(0, length - 1)] : undefined;\n    }\n\n    /**\n     * A specialized version of `_.sampleSize` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function arraySampleSize(array, n) {\n      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * A specialized version of `_.shuffle` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function arrayShuffle(array) {\n      return shuffleSelf(copyArray(array));\n    }\n\n    /**\n     * This function is like `assignValue` except that it doesn't assign\n     * `undefined` values.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignMergeValue(object, key, value) {\n      if ((value !== undefined && !eq(object[key], value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Assigns `value` to `key` of `object` if the existing value is not equivalent\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignValue(object, key, value) {\n      var objValue = object[key];\n      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Gets the index at which the `key` is found in `array` of key-value pairs.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {*} key The key to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     */\n    function assocIndexOf(array, key) {\n      var length = array.length;\n      while (length--) {\n        if (eq(array[length][0], key)) {\n          return length;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Aggregates elements of `collection` on `accumulator` with keys transformed\n     * by `iteratee` and values set by `setter`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform keys.\n     * @param {Object} accumulator The initial aggregated object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseAggregator(collection, setter, iteratee, accumulator) {\n      baseEach(collection, function(value, key, collection) {\n        setter(accumulator, value, iteratee(value), collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssign(object, source) {\n      return object && copyObject(source, keys(source), object);\n    }\n\n    /**\n     * The base implementation of `_.assignIn` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssignIn(object, source) {\n      return object && copyObject(source, keysIn(source), object);\n    }\n\n    /**\n     * The base implementation of `assignValue` and `assignMergeValue` without\n     * value checks.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function baseAssignValue(object, key, value) {\n      if (key == '__proto__' && defineProperty) {\n        defineProperty(object, key, {\n          'configurable': true,\n          'enumerable': true,\n          'value': value,\n          'writable': true\n        });\n      } else {\n        object[key] = value;\n      }\n    }\n\n    /**\n     * The base implementation of `_.at` without support for individual paths.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Array} Returns the picked elements.\n     */\n    function baseAt(object, paths) {\n      var index = -1,\n          length = paths.length,\n          result = Array(length),\n          skip = object == null;\n\n      while (++index < length) {\n        result[index] = skip ? undefined : get(object, paths[index]);\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.clamp` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     */\n    function baseClamp(number, lower, upper) {\n      if (number === number) {\n        if (upper !== undefined) {\n          number = number <= upper ? number : upper;\n        }\n        if (lower !== undefined) {\n          number = number >= lower ? number : lower;\n        }\n      }\n      return number;\n    }\n\n    /**\n     * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n     * traversed objects.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Deep clone\n     *  2 - Flatten inherited properties\n     *  4 - Clone symbols\n     * @param {Function} [customizer] The function to customize cloning.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The parent object of `value`.\n     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, bitmask, customizer, key, object, stack) {\n      var result,\n          isDeep = bitmask & CLONE_DEEP_FLAG,\n          isFlat = bitmask & CLONE_FLAT_FLAG,\n          isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n      if (customizer) {\n        result = object ? customizer(value, key, object, stack) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return copyArray(value, result);\n        }\n      } else {\n        var tag = getTag(value),\n            isFunc = tag == funcTag || tag == genTag;\n\n        if (isBuffer(value)) {\n          return cloneBuffer(value, isDeep);\n        }\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          result = (isFlat || isFunc) ? {} : initCloneObject(value);\n          if (!isDeep) {\n            return isFlat\n              ? copySymbolsIn(value, baseAssignIn(result, value))\n              : copySymbols(value, baseAssign(result, value));\n          }\n        } else {\n          if (!cloneableTags[tag]) {\n            return object ? value : {};\n          }\n          result = initCloneByTag(value, tag, isDeep);\n        }\n      }\n      // Check for circular references and return its corresponding clone.\n      stack || (stack = new Stack);\n      var stacked = stack.get(value);\n      if (stacked) {\n        return stacked;\n      }\n      stack.set(value, result);\n\n      if (isSet(value)) {\n        value.forEach(function(subValue) {\n          result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n        });\n      } else if (isMap(value)) {\n        value.forEach(function(subValue, key) {\n          result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n        });\n      }\n\n      var keysFunc = isFull\n        ? (isFlat ? getAllKeysIn : getAllKeys)\n        : (isFlat ? keysIn : keys);\n\n      var props = isArr ? undefined : keysFunc(value);\n      arrayEach(props || value, function(subValue, key) {\n        if (props) {\n          key = subValue;\n          subValue = value[key];\n        }\n        // Recursively populate clone (susceptible to call stack limits).\n        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.conforms` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseConforms(source) {\n      var props = keys(source);\n      return function(object) {\n        return baseConformsTo(object, source, props);\n      };\n    }\n\n    /**\n     * The base implementation of `_.conformsTo` which accepts `props` to check.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     */\n    function baseConformsTo(object, source, props) {\n      var length = props.length;\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (length--) {\n        var key = props[length],\n            predicate = source[key],\n            value = object[key];\n\n        if ((value === undefined && !(key in object)) || !predicate(value)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts `args`\n     * to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Array} args The arguments to provide to `func`.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of methods like `_.difference` without support\n     * for excluding multiple arrays or iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          isCommon = true,\n          length = array.length,\n          result = [],\n          valuesLength = values.length;\n\n      if (!length) {\n        return result;\n      }\n      if (iteratee) {\n        values = arrayMap(values, baseUnary(iteratee));\n      }\n      if (comparator) {\n        includes = arrayIncludesWith;\n        isCommon = false;\n      }\n      else if (values.length >= LARGE_ARRAY_SIZE) {\n        includes = cacheHas;\n        isCommon = false;\n        values = new SetCache(values);\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee == null ? value : iteratee(value);\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === computed) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (!includes(values, computed, comparator)) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of methods like `_.max` and `_.min` which accepts a\n     * `comparator` to determine the extremum value.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The iteratee invoked per iteration.\n     * @param {Function} comparator The comparator used to compare values.\n     * @returns {*} Returns the extremum value.\n     */\n    function baseExtremum(array, iteratee, comparator) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        var value = array[index],\n            current = iteratee(value);\n\n        if (current != null && (computed === undefined\n              ? (current === current && !isSymbol(current))\n              : comparator(current, computed)\n            )) {\n          var computed = current,\n              result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = toInteger(start);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : toInteger(end);\n      if (end < 0) {\n        end += length;\n      }\n      end = start > end ? 0 : toLength(end);\n      while (start < end) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with support for restricting flattening.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {number} depth The maximum recursion depth.\n     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n     * @param {Array} [result=[]] The initial result value.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, depth, predicate, isStrict, result) {\n      var index = -1,\n          length = array.length;\n\n      predicate || (predicate = isFlattenable);\n      result || (result = []);\n\n      while (++index < length) {\n        var value = array[index];\n        if (depth > 0 && predicate(value)) {\n          if (depth > 1) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            baseFlatten(value, depth - 1, predicate, isStrict, result);\n          } else {\n            arrayPush(result, value);\n          }\n        } else if (!isStrict) {\n          result[result.length] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForOwn` which iterates over `object`\n     * properties returned by `keysFunc` and invokes `iteratee` for each property.\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forOwn` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return object && baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return object && baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from `props`.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the function names.\n     */\n    function baseFunctions(object, props) {\n      return arrayFilter(props, function(key) {\n        return isFunction(object[key]);\n      });\n    }\n\n    /**\n     * The base implementation of `_.get` without support for default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path) {\n      path = castPath(path, object);\n\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[toKey(path[index++])];\n      }\n      return (index && index == length) ? object : undefined;\n    }\n\n    /**\n     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n     * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @param {Function} symbolsFunc The function to get the symbols of `object`.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function baseGetAllKeys(object, keysFunc, symbolsFunc) {\n      var result = keysFunc(object);\n      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n    }\n\n    /**\n     * The base implementation of `getTag` without fallbacks for buggy environments.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    function baseGetTag(value) {\n      if (value == null) {\n        return value === undefined ? undefinedTag : nullTag;\n      }\n      return (symToStringTag && symToStringTag in Object(value))\n        ? getRawTag(value)\n        : objectToString(value);\n    }\n\n    /**\n     * The base implementation of `_.gt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     */\n    function baseGt(value, other) {\n      return value > other;\n    }\n\n    /**\n     * The base implementation of `_.has` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHas(object, key) {\n      return object != null && hasOwnProperty.call(object, key);\n    }\n\n    /**\n     * The base implementation of `_.hasIn` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHasIn(object, key) {\n      return object != null && key in Object(object);\n    }\n\n    /**\n     * The base implementation of `_.inRange` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to check.\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     */\n    function baseInRange(number, start, end) {\n      return number >= nativeMin(start, end) && number < nativeMax(start, end);\n    }\n\n    /**\n     * The base implementation of methods like `_.intersection`, without support\n     * for iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of shared values.\n     */\n    function baseIntersection(arrays, iteratee, comparator) {\n      var includes = comparator ? arrayIncludesWith : arrayIncludes,\n          length = arrays[0].length,\n          othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(othLength),\n          maxLength = Infinity,\n          result = [];\n\n      while (othIndex--) {\n        var array = arrays[othIndex];\n        if (othIndex && iteratee) {\n          array = arrayMap(array, baseUnary(iteratee));\n        }\n        maxLength = nativeMin(array.length, maxLength);\n        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n          ? new SetCache(othIndex && array)\n          : undefined;\n      }\n      array = arrays[0];\n\n      var index = -1,\n          seen = caches[0];\n\n      outer:\n      while (++index < length && result.length < maxLength) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (!(seen\n              ? cacheHas(seen, computed)\n              : includes(result, computed, comparator)\n            )) {\n          othIndex = othLength;\n          while (--othIndex) {\n            var cache = caches[othIndex];\n            if (!(cache\n                  ? cacheHas(cache, computed)\n                  : includes(arrays[othIndex], computed, comparator))\n                ) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.invert` and `_.invertBy` which inverts\n     * `object` with values transformed by `iteratee` and set by `setter`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform values.\n     * @param {Object} accumulator The initial inverted object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseInverter(object, setter, iteratee, accumulator) {\n      baseForOwn(object, function(value, key, object) {\n        setter(accumulator, iteratee(value), key, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.invoke` without support for individual\n     * method arguments.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function baseInvoke(object, path, args) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      var func = object == null ? object : object[toKey(last(path))];\n      return func == null ? undefined : apply(func, object, args);\n    }\n\n    /**\n     * The base implementation of `_.isArguments`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     */\n    function baseIsArguments(value) {\n      return isObjectLike(value) && baseGetTag(value) == argsTag;\n    }\n\n    /**\n     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     */\n    function baseIsArrayBuffer(value) {\n      return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;\n    }\n\n    /**\n     * The base implementation of `_.isDate` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     */\n    function baseIsDate(value) {\n      return isObjectLike(value) && baseGetTag(value) == dateTag;\n    }\n\n    /**\n     * The base implementation of `_.isEqual` which supports partial comparisons\n     * and tracks traversed objects.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Unordered comparison\n     *  2 - Partial comparison\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, bitmask, customizer, stack) {\n      if (value === other) {\n        return true;\n      }\n      if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = objIsArr ? arrayTag : getTag(object),\n          othTag = othIsArr ? arrayTag : getTag(other);\n\n      objTag = objTag == argsTag ? objectTag : objTag;\n      othTag = othTag == argsTag ? objectTag : othTag;\n\n      var objIsObj = objTag == objectTag,\n          othIsObj = othTag == objectTag,\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && isBuffer(object)) {\n        if (!isBuffer(other)) {\n          return false;\n        }\n        objIsArr = true;\n        objIsObj = false;\n      }\n      if (isSameTag && !objIsObj) {\n        stack || (stack = new Stack);\n        return (objIsArr || isTypedArray(object))\n          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n          : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n      }\n      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          var objUnwrapped = objIsWrapped ? object.value() : object,\n              othUnwrapped = othIsWrapped ? other.value() : other;\n\n          stack || (stack = new Stack);\n          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      stack || (stack = new Stack);\n      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n    }\n\n    /**\n     * The base implementation of `_.isMap` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     */\n    function baseIsMap(value) {\n      return isObjectLike(value) && getTag(value) == mapTag;\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Array} matchData The property names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, source, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (index--) {\n        var data = matchData[index];\n        if ((noCustomizer && data[2])\n              ? data[1] !== object[data[0]]\n              : !(data[0] in object)\n            ) {\n          return false;\n        }\n      }\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var stack = new Stack;\n          if (customizer) {\n            var result = customizer(objValue, srcValue, key, object, source, stack);\n          }\n          if (!(result === undefined\n                ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n                : result\n              )) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.isNative` without bad shim checks.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     */\n    function baseIsNative(value) {\n      if (!isObject(value) || isMasked(value)) {\n        return false;\n      }\n      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n      return pattern.test(toSource(value));\n    }\n\n    /**\n     * The base implementation of `_.isRegExp` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     */\n    function baseIsRegExp(value) {\n      return isObjectLike(value) && baseGetTag(value) == regexpTag;\n    }\n\n    /**\n     * The base implementation of `_.isSet` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     */\n    function baseIsSet(value) {\n      return isObjectLike(value) && getTag(value) == setTag;\n    }\n\n    /**\n     * The base implementation of `_.isTypedArray` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     */\n    function baseIsTypedArray(value) {\n      return isObjectLike(value) &&\n        isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n    }\n\n    /**\n     * The base implementation of `_.iteratee`.\n     *\n     * @private\n     * @param {*} [value=_.identity] The value to convert to an iteratee.\n     * @returns {Function} Returns the iteratee.\n     */\n    function baseIteratee(value) {\n      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n      if (typeof value == 'function') {\n        return value;\n      }\n      if (value == null) {\n        return identity;\n      }\n      if (typeof value == 'object') {\n        return isArray(value)\n          ? baseMatchesProperty(value[0], value[1])\n          : baseMatches(value);\n      }\n      return property(value);\n    }\n\n    /**\n     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeys(object) {\n      if (!isPrototype(object)) {\n        return nativeKeys(object);\n      }\n      var result = [];\n      for (var key in Object(object)) {\n        if (hasOwnProperty.call(object, key) && key != 'constructor') {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeysIn(object) {\n      if (!isObject(object)) {\n        return nativeKeysIn(object);\n      }\n      var isProto = isPrototype(object),\n          result = [];\n\n      for (var key in object) {\n        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.lt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     */\n    function baseLt(value, other) {\n      return value < other;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n      if (matchData.length == 1 && matchData[0][2]) {\n        return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n      }\n      return function(object) {\n        return object === source || baseIsMatch(object, source, matchData);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatchesProperty(path, srcValue) {\n      if (isKey(path) && isStrictComparable(srcValue)) {\n        return matchesStrictComparable(toKey(path), srcValue);\n      }\n      return function(object) {\n        var objValue = get(object, path);\n        return (objValue === undefined && objValue === srcValue)\n          ? hasIn(object, path)\n          : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for multiple sources.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMerge(object, source, srcIndex, customizer, stack) {\n      if (object === source) {\n        return;\n      }\n      baseFor(source, function(srcValue, key) {\n        stack || (stack = new Stack);\n        if (isObject(srcValue)) {\n          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n        }\n        else {\n          var newValue = customizer\n            ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)\n            : undefined;\n\n          if (newValue === undefined) {\n            newValue = srcValue;\n          }\n          assignMergeValue(object, key, newValue);\n        }\n      }, keysIn);\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n      var objValue = safeGet(object, key),\n          srcValue = safeGet(source, key),\n          stacked = stack.get(srcValue);\n\n      if (stacked) {\n        assignMergeValue(object, key, stacked);\n        return;\n      }\n      var newValue = customizer\n        ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      var isCommon = newValue === undefined;\n\n      if (isCommon) {\n        var isArr = isArray(srcValue),\n            isBuff = !isArr && isBuffer(srcValue),\n            isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n        newValue = srcValue;\n        if (isArr || isBuff || isTyped) {\n          if (isArray(objValue)) {\n            newValue = objValue;\n          }\n          else if (isArrayLikeObject(objValue)) {\n            newValue = copyArray(objValue);\n          }\n          else if (isBuff) {\n            isCommon = false;\n            newValue = cloneBuffer(srcValue, true);\n          }\n          else if (isTyped) {\n            isCommon = false;\n            newValue = cloneTypedArray(srcValue, true);\n          }\n          else {\n            newValue = [];\n          }\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          newValue = objValue;\n          if (isArguments(objValue)) {\n            newValue = toPlainObject(objValue);\n          }\n          else if (!isObject(objValue) || isFunction(objValue)) {\n            newValue = initCloneObject(srcValue);\n          }\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, newValue);\n        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n        stack['delete'](srcValue);\n      }\n      assignMergeValue(object, key, newValue);\n    }\n\n    /**\n     * The base implementation of `_.nth` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {number} n The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     */\n    function baseNth(array, n) {\n      var length = array.length;\n      if (!length) {\n        return;\n      }\n      n += n < 0 ? length : 0;\n      return isIndex(n, length) ? array[n] : undefined;\n    }\n\n    /**\n     * The base implementation of `_.orderBy` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {string[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseOrderBy(collection, iteratees, orders) {\n      var index = -1;\n      iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(getIteratee()));\n\n      var result = baseMap(collection, function(value, key, collection) {\n        var criteria = arrayMap(iteratees, function(iteratee) {\n          return iteratee(value);\n        });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.pick` without support for individual\n     * property identifiers.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function basePick(object, paths) {\n      return basePickBy(object, paths, function(value, path) {\n        return hasIn(object, path);\n      });\n    }\n\n    /**\n     * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @param {Function} predicate The function invoked per property.\n     * @returns {Object} Returns the new object.\n     */\n    function basePickBy(object, paths, predicate) {\n      var index = -1,\n          length = paths.length,\n          result = {};\n\n      while (++index < length) {\n        var path = paths[index],\n            value = baseGet(object, path);\n\n        if (predicate(value, path)) {\n          baseSet(result, castPath(path, object), value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     */\n    function basePropertyDeep(path) {\n      return function(object) {\n        return baseGet(object, path);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAllBy` without support for iteratee\n     * shorthands.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAll(array, values, iteratee, comparator) {\n      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\n          index = -1,\n          length = values.length,\n          seen = array;\n\n      if (array === values) {\n        values = copyArray(values);\n      }\n      if (iteratee) {\n        seen = arrayMap(array, baseUnary(iteratee));\n      }\n      while (++index < length) {\n        var fromIndex = 0,\n            value = values[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n          if (seen !== array) {\n            splice.call(seen, fromIndex, 1);\n          }\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * indexes or capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0,\n          lastIndex = length - 1;\n\n      while (length--) {\n        var index = indexes[length];\n        if (length == lastIndex || index !== previous) {\n          var previous = index;\n          if (isIndex(index)) {\n            splice.call(array, index, 1);\n          } else {\n            baseUnset(array, index);\n          }\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for returning\n     * floating-point numbers.\n     *\n     * @private\n     * @param {number} lower The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(lower, upper) {\n      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n    }\n\n    /**\n     * The base implementation of `_.range` and `_.rangeRight` which doesn't\n     * coerce arguments.\n     *\n     * @private\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} step The value to increment or decrement by.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the range of numbers.\n     */\n    function baseRange(start, end, step, fromRight) {\n      var index = -1,\n          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (length--) {\n        result[fromRight ? length : ++index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.repeat` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {string} string The string to repeat.\n     * @param {number} n The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     */\n    function baseRepeat(string, n) {\n      var result = '';\n      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = nativeFloor(n / 2);\n        if (n) {\n          string += string;\n        }\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     */\n    function baseRest(func, start) {\n      return setToString(overRest(func, start, identity), func + '');\n    }\n\n    /**\n     * The base implementation of `_.sample`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     */\n    function baseSample(collection) {\n      return arraySample(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.sampleSize` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function baseSampleSize(collection, n) {\n      var array = values(collection);\n      return shuffleSelf(array, baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * The base implementation of `_.set`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseSet(object, path, value, customizer) {\n      if (!isObject(object)) {\n        return object;\n      }\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = toKey(path[index]),\n            newValue = value;\n\n        if (index != lastIndex) {\n          var objValue = nested[key];\n          newValue = customizer ? customizer(objValue, key, nested) : undefined;\n          if (newValue === undefined) {\n            newValue = isObject(objValue)\n              ? objValue\n              : (isIndex(path[index + 1]) ? [] : {});\n          }\n        }\n        assignValue(nested, key, newValue);\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `setToString` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetToString = !defineProperty ? identity : function(func, string) {\n      return defineProperty(func, 'toString', {\n        'configurable': true,\n        'enumerable': false,\n        'value': constant(string),\n        'writable': true\n      });\n    };\n\n    /**\n     * The base implementation of `_.shuffle`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function baseShuffle(collection) {\n      return shuffleSelf(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = end > length ? length : end;\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which\n     * performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndex(array, value, retHighest) {\n      var low = 0,\n          high = array == null ? low : array.length;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if (computed !== null && !isSymbol(computed) &&\n              (retHighest ? (computed <= value) : (computed < value))) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return baseSortedIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n     * which invokes `iteratee` for `value` and each element of `array` to compute\n     * their sort ranking. The iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The iteratee invoked per element.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndexBy(array, value, iteratee, retHighest) {\n      value = iteratee(value);\n\n      var low = 0,\n          high = array == null ? 0 : array.length,\n          valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsSymbol = isSymbol(value),\n          valIsUndefined = value === undefined;\n\n      while (low < high) {\n        var mid = nativeFloor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            othIsDefined = computed !== undefined,\n            othIsNull = computed === null,\n            othIsReflexive = computed === computed,\n            othIsSymbol = isSymbol(computed);\n\n        if (valIsNaN) {\n          var setLow = retHighest || othIsReflexive;\n        } else if (valIsUndefined) {\n          setLow = othIsReflexive && (retHighest || othIsDefined);\n        } else if (valIsNull) {\n          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);\n        } else if (valIsSymbol) {\n          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);\n        } else if (othIsNull || othIsSymbol) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without\n     * support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseSortedUniq(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        if (!index || !eq(computed, seen)) {\n          var seen = computed;\n          result[resIndex++] = value === 0 ? 0 : value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.toNumber` which doesn't ensure correct\n     * conversions of binary, hexadecimal, or octal string values.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     */\n    function baseToNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      return +value;\n    }\n\n    /**\n     * The base implementation of `_.toString` which doesn't convert nullish\n     * values to empty strings.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {string} Returns the string.\n     */\n    function baseToString(value) {\n      // Exit early for strings to avoid a performance hit in some environments.\n      if (typeof value == 'string') {\n        return value;\n      }\n      if (isArray(value)) {\n        // Recursively convert values (susceptible to call stack limits).\n        return arrayMap(value, baseToString) + '';\n      }\n      if (isSymbol(value)) {\n        return symbolToString ? symbolToString.call(value) : '';\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseUniq(array, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          length = array.length,\n          isCommon = true,\n          result = [],\n          seen = result;\n\n      if (comparator) {\n        isCommon = false;\n        includes = arrayIncludesWith;\n      }\n      else if (length >= LARGE_ARRAY_SIZE) {\n        var set = iteratee ? null : createSet(array);\n        if (set) {\n          return setToArray(set);\n        }\n        isCommon = false;\n        includes = cacheHas;\n        seen = new SetCache;\n      }\n      else {\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (!includes(seen, computed, comparator)) {\n          if (seen !== result) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.unset`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The property path to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     */\n    function baseUnset(object, path) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      return object == null || delete object[toKey(last(path))];\n    }\n\n    /**\n     * The base implementation of `_.update`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to update.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseUpdate(object, path, updater, customizer) {\n      return baseSet(object, path, updater(baseGet(object, path)), customizer);\n    }\n\n    /**\n     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`\n     * without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) &&\n        predicate(array[index], index, array)) {}\n\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to perform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      return arrayReduce(actions, function(result, action) {\n        return action.func.apply(action.thisArg, arrayPush([result], action.args));\n      }, result);\n    }\n\n    /**\n     * The base implementation of methods like `_.xor`, without support for\n     * iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of values.\n     */\n    function baseXor(arrays, iteratee, comparator) {\n      var length = arrays.length;\n      if (length < 2) {\n        return length ? baseUniq(arrays[0]) : [];\n      }\n      var index = -1,\n          result = Array(length);\n\n      while (++index < length) {\n        var array = arrays[index],\n            othIndex = -1;\n\n        while (++othIndex < length) {\n          if (othIndex != index) {\n            result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);\n          }\n        }\n      }\n      return baseUniq(baseFlatten(result, 1), iteratee, comparator);\n    }\n\n    /**\n     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n     *\n     * @private\n     * @param {Array} props The property identifiers.\n     * @param {Array} values The property values.\n     * @param {Function} assignFunc The function to assign values.\n     * @returns {Object} Returns the new object.\n     */\n    function baseZipObject(props, values, assignFunc) {\n      var index = -1,\n          length = props.length,\n          valsLength = values.length,\n          result = {};\n\n      while (++index < length) {\n        var value = index < valsLength ? values[index] : undefined;\n        assignFunc(result, props[index], value);\n      }\n      return result;\n    }\n\n    /**\n     * Casts `value` to an empty array if it's not an array like object.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Array|Object} Returns the cast array-like object.\n     */\n    function castArrayLikeObject(value) {\n      return isArrayLikeObject(value) ? value : [];\n    }\n\n    /**\n     * Casts `value` to `identity` if it's not a function.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Function} Returns cast function.\n     */\n    function castFunction(value) {\n      return typeof value == 'function' ? value : identity;\n    }\n\n    /**\n     * Casts `value` to a path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {Array} Returns the cast property path array.\n     */\n    function castPath(value, object) {\n      if (isArray(value)) {\n        return value;\n      }\n      return isKey(value, object) ? [value] : stringToPath(toString(value));\n    }\n\n    /**\n     * A `baseRest` alias which can be replaced with `identity` by module\n     * replacement plugins.\n     *\n     * @private\n     * @type {Function}\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    var castRest = baseRest;\n\n    /**\n     * Casts `array` to a slice if it's needed.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {number} start The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the cast slice.\n     */\n    function castSlice(array, start, end) {\n      var length = array.length;\n      end = end === undefined ? length : end;\n      return (!start && end >= length) ? array : baseSlice(array, start, end);\n    }\n\n    /**\n     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).\n     *\n     * @private\n     * @param {number|Object} id The timer id or timeout object of the timer to clear.\n     */\n    var clearTimeout = ctxClearTimeout || function(id) {\n      return root.clearTimeout(id);\n    };\n\n    /**\n     * Creates a clone of  `buffer`.\n     *\n     * @private\n     * @param {Buffer} buffer The buffer to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Buffer} Returns the cloned buffer.\n     */\n    function cloneBuffer(buffer, isDeep) {\n      if (isDeep) {\n        return buffer.slice();\n      }\n      var length = buffer.length,\n          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n      buffer.copy(result);\n      return result;\n    }\n\n    /**\n     * Creates a clone of `arrayBuffer`.\n     *\n     * @private\n     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function cloneArrayBuffer(arrayBuffer) {\n      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n      new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n      return result;\n    }\n\n    /**\n     * Creates a clone of `dataView`.\n     *\n     * @private\n     * @param {Object} dataView The data view to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned data view.\n     */\n    function cloneDataView(dataView, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n    }\n\n    /**\n     * Creates a clone of `regexp`.\n     *\n     * @private\n     * @param {Object} regexp The regexp to clone.\n     * @returns {Object} Returns the cloned regexp.\n     */\n    function cloneRegExp(regexp) {\n      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n      result.lastIndex = regexp.lastIndex;\n      return result;\n    }\n\n    /**\n     * Creates a clone of the `symbol` object.\n     *\n     * @private\n     * @param {Object} symbol The symbol object to clone.\n     * @returns {Object} Returns the cloned symbol object.\n     */\n    function cloneSymbol(symbol) {\n      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n    }\n\n    /**\n     * Creates a clone of `typedArray`.\n     *\n     * @private\n     * @param {Object} typedArray The typed array to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned typed array.\n     */\n    function cloneTypedArray(typedArray, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n    }\n\n    /**\n     * Compares values to sort them in ascending order.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {number} Returns the sort order indicator for `value`.\n     */\n    function compareAscending(value, other) {\n      if (value !== other) {\n        var valIsDefined = value !== undefined,\n            valIsNull = value === null,\n            valIsReflexive = value === value,\n            valIsSymbol = isSymbol(value);\n\n        var othIsDefined = other !== undefined,\n            othIsNull = other === null,\n            othIsReflexive = other === other,\n            othIsSymbol = isSymbol(other);\n\n        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n            (valIsNull && othIsDefined && othIsReflexive) ||\n            (!valIsDefined && othIsReflexive) ||\n            !valIsReflexive) {\n          return 1;\n        }\n        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n            (othIsNull && valIsDefined && valIsReflexive) ||\n            (!othIsDefined && valIsReflexive) ||\n            !othIsReflexive) {\n          return -1;\n        }\n      }\n      return 0;\n    }\n\n    /**\n     * Used by `_.orderBy` to compare multiple properties of a value to another\n     * and stable sort them.\n     *\n     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n     * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n     * of corresponding values.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {boolean[]|string[]} orders The order to sort by for each property.\n     * @returns {number} Returns the sort order indicator for `object`.\n     */\n    function compareMultiple(object, other, orders) {\n      var index = -1,\n          objCriteria = object.criteria,\n          othCriteria = other.criteria,\n          length = objCriteria.length,\n          ordersLength = orders.length;\n\n      while (++index < length) {\n        var result = compareAscending(objCriteria[index], othCriteria[index]);\n        if (result) {\n          if (index >= ordersLength) {\n            return result;\n          }\n          var order = orders[index];\n          return result * (order == 'desc' ? -1 : 1);\n        }\n      }\n      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n      // that causes it, under certain circumstances, to provide the same value for\n      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n      // for more details.\n      //\n      // This also ensures a stable sort in V8 and other engines.\n      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n      return object.index - other.index;\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersLength = holders.length,\n          leftIndex = -1,\n          leftLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(leftLength + rangeLength),\n          isUncurried = !isCurried;\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[holders[argsIndex]] = args[argsIndex];\n        }\n      }\n      while (rangeLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersIndex = -1,\n          holdersLength = holders.length,\n          rightIndex = -1,\n          rightLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(rangeLength + rightLength),\n          isUncurried = !isCurried;\n\n      while (++argsIndex < rangeLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var offset = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[offset + holders[holdersIndex]] = args[argsIndex++];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function copyArray(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property identifiers to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @param {Function} [customizer] The function to customize copied values.\n     * @returns {Object} Returns `object`.\n     */\n    function copyObject(source, props, object, customizer) {\n      var isNew = !object;\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n\n        var newValue = customizer\n          ? customizer(object[key], source[key], key, object, source)\n          : undefined;\n\n        if (newValue === undefined) {\n          newValue = source[key];\n        }\n        if (isNew) {\n          baseAssignValue(object, key, newValue);\n        } else {\n          assignValue(object, key, newValue);\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Copies own symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbols(source, object) {\n      return copyObject(source, getSymbols(source), object);\n    }\n\n    /**\n     * Copies own and inherited symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbolsIn(source, object) {\n      return copyObject(source, getSymbolsIn(source), object);\n    }\n\n    /**\n     * Creates a function like `_.groupBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} [initializer] The accumulator object initializer.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee) {\n        var func = isArray(collection) ? arrayAggregator : baseAggregator,\n            accumulator = initializer ? initializer() : {};\n\n        return func(collection, setter, getIteratee(iteratee, 2), accumulator);\n      };\n    }\n\n    /**\n     * Creates a function like `_.assign`.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return baseRest(function(object, sources) {\n        var index = -1,\n            length = sources.length,\n            customizer = length > 1 ? sources[length - 1] : undefined,\n            guard = length > 2 ? sources[2] : undefined;\n\n        customizer = (assigner.length > 3 && typeof customizer == 'function')\n          ? (length--, customizer)\n          : undefined;\n\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n        object = Object(object);\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, index, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        if (collection == null) {\n          return collection;\n        }\n        if (!isArrayLike(collection)) {\n          return eachFunc(collection, iteratee);\n        }\n        var length = collection.length,\n            index = fromRight ? length : -1,\n            iterable = Object(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var index = -1,\n            iterable = Object(object),\n            props = keysFunc(object),\n            length = props.length;\n\n        while (length--) {\n          var key = props[fromRight ? length : ++index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the optional `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createBind(func, bitmask, thisArg) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.lowerFirst`.\n     *\n     * @private\n     * @param {string} methodName The name of the `String` case method to use.\n     * @returns {Function} Returns the new case function.\n     */\n    function createCaseFirst(methodName) {\n      return function(string) {\n        string = toString(string);\n\n        var strSymbols = hasUnicode(string)\n          ? stringToArray(string)\n          : undefined;\n\n        var chr = strSymbols\n          ? strSymbols[0]\n          : string.charAt(0);\n\n        var trailing = strSymbols\n          ? castSlice(strSymbols, 1).join('')\n          : string.slice(1);\n\n        return chr[methodName]() + trailing;\n      };\n    }\n\n    /**\n     * Creates a function like `_.camelCase`.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtor(Ctor) {\n      return function() {\n        // Use a `switch` statement to work with class constructors. See\n        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n        switch (args.length) {\n          case 0: return new Ctor;\n          case 1: return new Ctor(args[0]);\n          case 2: return new Ctor(args[0], args[1]);\n          case 3: return new Ctor(args[0], args[1], args[2]);\n          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n        }\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to enable currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {number} arity The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCurry(func, bitmask, arity) {\n      var Ctor = createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length,\n            placeholder = getHolder(wrapper);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n          ? []\n          : replaceHolders(args, placeholder);\n\n        length -= holders.length;\n        if (length < arity) {\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, undefined,\n            args, holders, undefined, undefined, arity - length);\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return apply(fn, this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} findIndexFunc The function to find the collection index.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFind(findIndexFunc) {\n      return function(collection, predicate, fromIndex) {\n        var iterable = Object(collection);\n        if (!isArrayLike(collection)) {\n          var iteratee = getIteratee(predicate, 3);\n          collection = keys(collection);\n          predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n        }\n        var index = findIndexFunc(collection, predicate, fromIndex);\n        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n      };\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return flatRest(function(funcs) {\n        var length = funcs.length,\n            index = length,\n            prereq = LodashWrapper.prototype.thru;\n\n        if (fromRight) {\n          funcs.reverse();\n        }\n        while (index--) {\n          var func = funcs[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n            var wrapper = new LodashWrapper([], true);\n          }\n        }\n        index = wrapper ? index : length;\n        while (++index < length) {\n          func = funcs[index];\n\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : undefined;\n\n          if (data && isLaziable(data[0]) &&\n                data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&\n                !data[4].length && data[9] == 1\n              ) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func))\n              ? wrapper[funcName]()\n              : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments,\n              value = args[0];\n\n          if (wrapper && args.length == 1 && isArray(value)) {\n            return wrapper.plant(value).value();\n          }\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : value;\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      });\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with optional `this`\n     * binding of `thisArg`, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided\n     *  to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & WRAP_ARY_FLAG,\n          isBind = bitmask & WRAP_BIND_FLAG,\n          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,\n          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),\n          isFlip = bitmask & WRAP_FLIP_FLAG,\n          Ctor = isBindKey ? undefined : createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length;\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (isCurried) {\n          var placeholder = getHolder(wrapper),\n              holdersCount = countHolders(args, placeholder);\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders, isCurried);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n        }\n        length -= holdersCount;\n        if (isCurried && length < arity) {\n          var newHolders = replaceHolders(args, placeholder);\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, thisArg,\n            args, newHolders, argPos, ary, arity - length\n          );\n        }\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        length = args.length;\n        if (argPos) {\n          args = reorder(args, argPos);\n        } else if (isFlip && length > 1) {\n          args.reverse();\n        }\n        if (isAry && ary < length) {\n          args.length = ary;\n        }\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtor(fn);\n        }\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.invertBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} toIteratee The function to resolve iteratees.\n     * @returns {Function} Returns the new inverter function.\n     */\n    function createInverter(setter, toIteratee) {\n      return function(object, iteratee) {\n        return baseInverter(object, setter, toIteratee(iteratee), {});\n      };\n    }\n\n    /**\n     * Creates a function that performs a mathematical operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @param {number} [defaultValue] The value used for `undefined` arguments.\n     * @returns {Function} Returns the new mathematical operation function.\n     */\n    function createMathOperation(operator, defaultValue) {\n      return function(value, other) {\n        var result;\n        if (value === undefined && other === undefined) {\n          return defaultValue;\n        }\n        if (value !== undefined) {\n          result = value;\n        }\n        if (other !== undefined) {\n          if (result === undefined) {\n            return other;\n          }\n          if (typeof value == 'string' || typeof other == 'string') {\n            value = baseToString(value);\n            other = baseToString(other);\n          } else {\n            value = baseToNumber(value);\n            other = baseToNumber(other);\n          }\n          result = operator(value, other);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function like `_.over`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over iteratees.\n     * @returns {Function} Returns the new over function.\n     */\n    function createOver(arrayFunc) {\n      return flatRest(function(iteratees) {\n        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));\n        return baseRest(function(args) {\n          var thisArg = this;\n          return arrayFunc(iteratees, function(iteratee) {\n            return apply(iteratee, thisArg, args);\n          });\n        });\n      });\n    }\n\n    /**\n     * Creates the padding for `string` based on `length`. The `chars` string\n     * is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {number} length The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padding for `string`.\n     */\n    function createPadding(length, chars) {\n      chars = chars === undefined ? ' ' : baseToString(chars);\n\n      var charsLength = chars.length;\n      if (charsLength < 2) {\n        return charsLength ? baseRepeat(chars, length) : chars;\n      }\n      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));\n      return hasUnicode(chars)\n        ? castSlice(stringToArray(result), 0, length).join('')\n        : result.slice(0, length);\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the `this` binding\n     * of `thisArg` and `partials` prepended to the arguments it receives.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to\n     *  the new function.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createPartial(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(leftLength + argsLength),\n            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        return apply(fn, isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.range` or `_.rangeRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new range function.\n     */\n    function createRange(fromRight) {\n      return function(start, end, step) {\n        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n          end = step = undefined;\n        }\n        // Ensure the sign of `-0` is preserved.\n        start = toFinite(start);\n        if (end === undefined) {\n          end = start;\n          start = 0;\n        } else {\n          end = toFinite(end);\n        }\n        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\n        return baseRange(start, end, step, fromRight);\n      };\n    }\n\n    /**\n     * Creates a function that performs a relational operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @returns {Function} Returns the new relational operation function.\n     */\n    function createRelationalOperation(operator) {\n      return function(value, other) {\n        if (!(typeof value == 'string' && typeof other == 'string')) {\n          value = toNumber(value);\n          other = toNumber(other);\n        }\n        return operator(value, other);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to continue currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {Function} wrapFunc The function to create the `func` wrapper.\n     * @param {*} placeholder The placeholder value.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n      var isCurry = bitmask & WRAP_CURRY_FLAG,\n          newHolders = isCurry ? holders : undefined,\n          newHoldersRight = isCurry ? undefined : holders,\n          newPartials = isCurry ? partials : undefined,\n          newPartialsRight = isCurry ? undefined : partials;\n\n      bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);\n      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);\n\n      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {\n        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);\n      }\n      var newData = [\n        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\n        newHoldersRight, argPos, ary, arity\n      ];\n\n      var result = wrapFunc.apply(undefined, newData);\n      if (isLaziable(func)) {\n        setData(result, newData);\n      }\n      result.placeholder = placeholder;\n      return setWrapToString(result, func, bitmask);\n    }\n\n    /**\n     * Creates a function like `_.round`.\n     *\n     * @private\n     * @param {string} methodName The name of the `Math` method to use when rounding.\n     * @returns {Function} Returns the new round function.\n     */\n    function createRound(methodName) {\n      var func = Math[methodName];\n      return function(number, precision) {\n        number = toNumber(number);\n        precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);\n        if (precision && nativeIsFinite(number)) {\n          // Shift with exponential notation to avoid floating-point issues.\n          // See [MDN](https://mdn.io/round#Examples) for more details.\n          var pair = (toString(number) + 'e').split('e'),\n              value = func(pair[0] + 'e' + (+pair[1] + precision));\n\n          pair = (toString(value) + 'e').split('e');\n          return +(pair[0] + 'e' + (+pair[1] - precision));\n        }\n        return func(number);\n      };\n    }\n\n    /**\n     * Creates a set object of `values`.\n     *\n     * @private\n     * @param {Array} values The values to add to the set.\n     * @returns {Object} Returns the new set.\n     */\n    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n      return new Set(values);\n    };\n\n    /**\n     * Creates a `_.toPairs` or `_.toPairsIn` function.\n     *\n     * @private\n     * @param {Function} keysFunc The function to get the keys of a given object.\n     * @returns {Function} Returns the new pairs function.\n     */\n    function createToPairs(keysFunc) {\n      return function(object) {\n        var tag = getTag(object);\n        if (tag == mapTag) {\n          return mapToArray(object);\n        }\n        if (tag == setTag) {\n          return setToPairs(object);\n        }\n        return baseToPairs(object, keysFunc(object));\n      };\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags.\n     *    1 - `_.bind`\n     *    2 - `_.bindKey`\n     *    4 - `_.curry` or `_.curryRight` of a bound function\n     *    8 - `_.curry`\n     *   16 - `_.curryRight`\n     *   32 - `_.partial`\n     *   64 - `_.partialRight`\n     *  128 - `_.rearg`\n     *  256 - `_.ary`\n     *  512 - `_.flip`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);\n        partials = holders = undefined;\n      }\n      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\n      arity = arity === undefined ? arity : toInteger(arity);\n      length -= holders ? holders.length : 0;\n\n      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = undefined;\n      }\n      var data = isBindKey ? undefined : getData(func);\n\n      var newData = [\n        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\n        argPos, ary, arity\n      ];\n\n      if (data) {\n        mergeData(newData, data);\n      }\n      func = newData[0];\n      bitmask = newData[1];\n      thisArg = newData[2];\n      partials = newData[3];\n      holders = newData[4];\n      arity = newData[9] = newData[9] === undefined\n        ? (isBindKey ? 0 : func.length)\n        : nativeMax(newData[9] - length, 0);\n\n      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {\n        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);\n      }\n      if (!bitmask || bitmask == WRAP_BIND_FLAG) {\n        var result = createBind(func, bitmask, thisArg);\n      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {\n        result = createCurry(func, bitmask, arity);\n      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {\n        result = createPartial(func, bitmask, thisArg, partials);\n      } else {\n        result = createHybrid.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setWrapToString(setter(result, newData), func, bitmask);\n    }\n\n    /**\n     * Used by `_.defaults` to customize its `_.assignIn` use to assign properties\n     * of source objects to the destination object for all destination properties\n     * that resolve to `undefined`.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to assign.\n     * @param {Object} object The parent object of `objValue`.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsAssignIn(objValue, srcValue, key, object) {\n      if (objValue === undefined ||\n          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        return srcValue;\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source\n     * objects into destination objects that are passed thru.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to merge.\n     * @param {Object} object The parent object of `objValue`.\n     * @param {Object} source The parent object of `srcValue`.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {\n      if (isObject(objValue) && isObject(srcValue)) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, objValue);\n        baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);\n        stack['delete'](srcValue);\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\n     * objects.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {string} key The key of the property to inspect.\n     * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\n     */\n    function customOmitClone(value) {\n      return isPlainObject(value) ? undefined : value;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `array` and `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(array);\n      if (stacked && stack.get(other)) {\n        return stacked == other;\n      }\n      var index = -1,\n          result = true,\n          seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n      stack.set(array, other);\n      stack.set(other, array);\n\n      // Ignore non-index properties.\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, arrValue, index, other, array, stack)\n            : customizer(arrValue, othValue, index, array, other, stack);\n        }\n        if (compared !== undefined) {\n          if (compared) {\n            continue;\n          }\n          result = false;\n          break;\n        }\n        // Recursively compare arrays (susceptible to call stack limits).\n        if (seen) {\n          if (!arraySome(other, function(othValue, othIndex) {\n                if (!cacheHas(seen, othIndex) &&\n                    (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n                  return seen.push(othIndex);\n                }\n              })) {\n            result = false;\n            break;\n          }\n        } else if (!(\n              arrValue === othValue ||\n                equalFunc(arrValue, othValue, bitmask, customizer, stack)\n            )) {\n          result = false;\n          break;\n        }\n      }\n      stack['delete'](array);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n      switch (tag) {\n        case dataViewTag:\n          if ((object.byteLength != other.byteLength) ||\n              (object.byteOffset != other.byteOffset)) {\n            return false;\n          }\n          object = object.buffer;\n          other = other.buffer;\n\n        case arrayBufferTag:\n          if ((object.byteLength != other.byteLength) ||\n              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n            return false;\n          }\n          return true;\n\n        case boolTag:\n        case dateTag:\n        case numberTag:\n          // Coerce booleans to `1` or `0` and dates to milliseconds.\n          // Invalid dates are coerced to `NaN`.\n          return eq(+object, +other);\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings, primitives and objects,\n          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n          // for more details.\n          return object == (other + '');\n\n        case mapTag:\n          var convert = mapToArray;\n\n        case setTag:\n          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n          convert || (convert = setToArray);\n\n          if (object.size != other.size && !isPartial) {\n            return false;\n          }\n          // Assume cyclic values are equal.\n          var stacked = stack.get(object);\n          if (stacked) {\n            return stacked == other;\n          }\n          bitmask |= COMPARE_UNORDERED_FLAG;\n\n          // Recursively compare objects (susceptible to call stack limits).\n          stack.set(object, other);\n          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n          stack['delete'](object);\n          return result;\n\n        case symbolTag:\n          if (symbolValueOf) {\n            return symbolValueOf.call(object) == symbolValueOf.call(other);\n          }\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          objProps = getAllKeys(object),\n          objLength = objProps.length,\n          othProps = getAllKeys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isPartial) {\n        return false;\n      }\n      var index = objLength;\n      while (index--) {\n        var key = objProps[index];\n        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n          return false;\n        }\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked && stack.get(other)) {\n        return stacked == other;\n      }\n      var result = true;\n      stack.set(object, other);\n      stack.set(other, object);\n\n      var skipCtor = isPartial;\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, objValue, key, other, object, stack)\n            : customizer(objValue, othValue, key, object, other, stack);\n        }\n        // Recursively compare objects (susceptible to call stack limits).\n        if (!(compared === undefined\n              ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n              : compared\n            )) {\n          result = false;\n          break;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (result && !skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          result = false;\n        }\n      }\n      stack['delete'](object);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseRest` which flattens the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    function flatRest(func) {\n      return setToString(overRest(func, undefined, flatten), func + '');\n    }\n\n    /**\n     * Creates an array of own enumerable property names and symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeys(object) {\n      return baseGetAllKeys(object, keys, getSymbols);\n    }\n\n    /**\n     * Creates an array of own and inherited enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeysIn(object) {\n      return baseGetAllKeys(object, keysIn, getSymbolsIn);\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    function getFuncName(func) {\n      var result = (func.name + ''),\n          array = realNames[result],\n          length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the argument placeholder value for `func`.\n     *\n     * @private\n     * @param {Function} func The function to inspect.\n     * @returns {*} Returns the placeholder value.\n     */\n    function getHolder(func) {\n      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;\n      return object.placeholder;\n    }\n\n    /**\n     * Gets the appropriate \"iteratee\" function. If `_.iteratee` is customized,\n     * this function returns the custom method, otherwise it returns `baseIteratee`.\n     * If arguments are provided, the chosen function is invoked with them and\n     * its result is returned.\n     *\n     * @private\n     * @param {*} [value] The value to convert to an iteratee.\n     * @param {number} [arity] The arity of the created iteratee.\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getIteratee() {\n      var result = lodash.iteratee || iteratee;\n      result = result === iteratee ? baseIteratee : result;\n      return arguments.length ? result(arguments[0], arguments[1]) : result;\n    }\n\n    /**\n     * Gets the data for `map`.\n     *\n     * @private\n     * @param {Object} map The map to query.\n     * @param {string} key The reference key.\n     * @returns {*} Returns the map data.\n     */\n    function getMapData(map, key) {\n      var data = map.__data__;\n      return isKeyable(key)\n        ? data[typeof key == 'string' ? 'string' : 'hash']\n        : data.map;\n    }\n\n    /**\n     * Gets the property names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n    function getMatchData(object) {\n      var result = keys(object),\n          length = result.length;\n\n      while (length--) {\n        var key = result[length],\n            value = object[key];\n\n        result[length] = [key, value, isStrictComparable(value)];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n    function getNative(object, key) {\n      var value = getValue(object, key);\n      return baseIsNative(value) ? value : undefined;\n    }\n\n    /**\n     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the raw `toStringTag`.\n     */\n    function getRawTag(value) {\n      var isOwn = hasOwnProperty.call(value, symToStringTag),\n          tag = value[symToStringTag];\n\n      try {\n        value[symToStringTag] = undefined;\n        var unmasked = true;\n      } catch (e) {}\n\n      var result = nativeObjectToString.call(value);\n      if (unmasked) {\n        if (isOwn) {\n          value[symToStringTag] = tag;\n        } else {\n          delete value[symToStringTag];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of the own enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n      if (object == null) {\n        return [];\n      }\n      object = Object(object);\n      return arrayFilter(nativeGetSymbols(object), function(symbol) {\n        return propertyIsEnumerable.call(object, symbol);\n      });\n    };\n\n    /**\n     * Creates an array of the own and inherited enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n      var result = [];\n      while (object) {\n        arrayPush(result, getSymbols(object));\n        object = getPrototype(object);\n      }\n      return result;\n    };\n\n    /**\n     * Gets the `toStringTag` of `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    var getTag = baseGetTag;\n\n    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n        (Map && getTag(new Map) != mapTag) ||\n        (Promise && getTag(Promise.resolve()) != promiseTag) ||\n        (Set && getTag(new Set) != setTag) ||\n        (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n      getTag = function(value) {\n        var result = baseGetTag(value),\n            Ctor = result == objectTag ? value.constructor : undefined,\n            ctorString = Ctor ? toSource(Ctor) : '';\n\n        if (ctorString) {\n          switch (ctorString) {\n            case dataViewCtorString: return dataViewTag;\n            case mapCtorString: return mapTag;\n            case promiseCtorString: return promiseTag;\n            case setCtorString: return setTag;\n            case weakMapCtorString: return weakMapTag;\n          }\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} transforms The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms.length;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Extracts wrapper details from the `source` body comment.\n     *\n     * @private\n     * @param {string} source The source to inspect.\n     * @returns {Array} Returns the wrapper details.\n     */\n    function getWrapDetails(source) {\n      var match = source.match(reWrapDetails);\n      return match ? match[1].split(reSplitDetails) : [];\n    }\n\n    /**\n     * Checks if `path` exists on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @param {Function} hasFunc The function to check properties.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     */\n    function hasPath(object, path, hasFunc) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          result = false;\n\n      while (++index < length) {\n        var key = toKey(path[index]);\n        if (!(result = object != null && hasFunc(object, key))) {\n          break;\n        }\n        object = object[key];\n      }\n      if (result || ++index != length) {\n        return result;\n      }\n      length = object == null ? 0 : object.length;\n      return !!length && isLength(length) && isIndex(key, length) &&\n        (isArray(object) || isArguments(object));\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = new array.constructor(length);\n\n      // Add properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      return (typeof object.constructor == 'function' && !isPrototype(object))\n        ? baseCreate(getPrototype(object))\n        : {};\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return cloneArrayBuffer(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case dataViewTag:\n          return cloneDataView(object, isDeep);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          return cloneTypedArray(object, isDeep);\n\n        case mapTag:\n          return new Ctor;\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          return cloneRegExp(object);\n\n        case setTag:\n          return new Ctor;\n\n        case symbolTag:\n          return cloneSymbol(object);\n      }\n    }\n\n    /**\n     * Inserts wrapper `details` in a comment at the top of the `source` body.\n     *\n     * @private\n     * @param {string} source The source to modify.\n     * @returns {Array} details The details to insert.\n     * @returns {string} Returns the modified source.\n     */\n    function insertWrapDetails(source, details) {\n      var length = details.length;\n      if (!length) {\n        return source;\n      }\n      var lastIndex = length - 1;\n      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];\n      details = details.join(length > 2 ? ', ' : ' ');\n      return source.replace(reWrapComment, '{\\n/* [wrapped with ' + details + '] */\\n');\n    }\n\n    /**\n     * Checks if `value` is a flattenable `arguments` object or array.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n     */\n    function isFlattenable(value) {\n      return isArray(value) || isArguments(value) ||\n        !!(spreadableSymbol && value && value[spreadableSymbol]);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      var type = typeof value;\n      length = length == null ? MAX_SAFE_INTEGER : length;\n\n      return !!length &&\n        (type == 'number' ||\n          (type != 'symbol' && reIsUint.test(value))) &&\n            (value > -1 && value % 1 == 0 && value < length);\n    }\n\n    /**\n     * Checks if the given arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n     *  else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number'\n            ? (isArrayLike(object) && isIndex(index, object.length))\n            : (type == 'string' && index in object)\n          ) {\n        return eq(object[index], value);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      if (isArray(value)) {\n        return false;\n      }\n      var type = typeof value;\n      if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n          value == null || isSymbol(value)) {\n        return true;\n      }\n      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n        (object != null && value in Object(object));\n    }\n\n    /**\n     * Checks if `value` is suitable for use as unique object key.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n     */\n    function isKeyable(value) {\n      var type = typeof value;\n      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n        ? (value !== '__proto__')\n        : (value === null);\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\n     *  else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func),\n          other = lodash[funcName];\n\n      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n      if (func === other) {\n        return true;\n      }\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n\n    /**\n     * Checks if `func` has its source masked.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n     */\n    function isMasked(func) {\n      return !!maskSrcKey && (maskSrcKey in func);\n    }\n\n    /**\n     * Checks if `func` is capable of being masked.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.\n     */\n    var isMaskable = coreJsData ? isFunction : stubFalse;\n\n    /**\n     * Checks if `value` is likely a prototype object.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n     */\n    function isPrototype(value) {\n      var Ctor = value && value.constructor,\n          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n      return value === proto;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n\n    /**\n     * A specialized version of `matchesProperty` for source values suitable\n     * for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function matchesStrictComparable(key, srcValue) {\n      return function(object) {\n        if (object == null) {\n          return false;\n        }\n        return object[key] === srcValue &&\n          (srcValue !== undefined || (key in Object(object)));\n      };\n    }\n\n    /**\n     * A specialized version of `_.memoize` which clears the memoized function's\n     * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n     *\n     * @private\n     * @param {Function} func The function to have its output memoized.\n     * @returns {Function} Returns the new memoized function.\n     */\n    function memoizeCapped(func) {\n      var result = memoize(func, function(key) {\n        if (cache.size === MAX_MEMOIZE_SIZE) {\n          cache.clear();\n        }\n        return key;\n      });\n\n      var cache = result.cache;\n      return result;\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers used to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and\n     * `_.rearg` modify function arguments, making the order in which they are\n     * executed important, preventing the merging of metadata. However, we make\n     * an exception for a safe combined case where curried functions have `_.ary`\n     * and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);\n\n      var isCombo =\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||\n        ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & WRAP_BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : value;\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = value;\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & WRAP_ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * This function is like\n     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * except that it includes inherited enumerable properties.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function nativeKeysIn(object) {\n      var result = [];\n      if (object != null) {\n        for (var key in Object(object)) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a string using `Object.prototype.toString`.\n     *\n     * @private\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     */\n    function objectToString(value) {\n      return nativeObjectToString.call(value);\n    }\n\n    /**\n     * A specialized version of `baseRest` which transforms the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @param {Function} transform The rest array transform.\n     * @returns {Function} Returns the new function.\n     */\n    function overRest(func, start, transform) {\n      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            array = Array(length);\n\n        while (++index < length) {\n          array[index] = args[start + index];\n        }\n        index = -1;\n        var otherArgs = Array(start + 1);\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = transform(array);\n        return apply(func, this, otherArgs);\n      };\n    }\n\n    /**\n     * Gets the parent value at `path` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path to get the parent value of.\n     * @returns {*} Returns the parent value.\n     */\n    function parent(object, path) {\n      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = copyArray(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Gets the value at `key`, unless `key` is \"__proto__\" or \"constructor\".\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the property to get.\n     * @returns {*} Returns the property value.\n     */\n    function safeGet(object, key) {\n      if (key === 'constructor' && typeof object[key] === 'function') {\n        return;\n      }\n\n      if (key == '__proto__') {\n        return;\n      }\n\n      return object[key];\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity\n     * function to avoid garbage collection pauses in V8. See\n     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = shortOut(baseSetData);\n\n    /**\n     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    var setTimeout = ctxSetTimeout || function(func, wait) {\n      return root.setTimeout(func, wait);\n    };\n\n    /**\n     * Sets the `toString` method of `func` to return `string`.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var setToString = shortOut(baseSetToString);\n\n    /**\n     * Sets the `toString` method of `wrapper` to mimic the source of `reference`\n     * with wrapper details in a comment at the top of the source body.\n     *\n     * @private\n     * @param {Function} wrapper The function to modify.\n     * @param {Function} reference The reference function.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Function} Returns `wrapper`.\n     */\n    function setWrapToString(wrapper, reference, bitmask) {\n      var source = (reference + '');\n      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));\n    }\n\n    /**\n     * Creates a function that'll short out and invoke `identity` instead\n     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n     * milliseconds.\n     *\n     * @private\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new shortable function.\n     */\n    function shortOut(func) {\n      var count = 0,\n          lastCalled = 0;\n\n      return function() {\n        var stamp = nativeNow(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return arguments[0];\n          }\n        } else {\n          count = 0;\n        }\n        return func.apply(undefined, arguments);\n      };\n    }\n\n    /**\n     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @param {number} [size=array.length] The size of `array`.\n     * @returns {Array} Returns `array`.\n     */\n    function shuffleSelf(array, size) {\n      var index = -1,\n          length = array.length,\n          lastIndex = length - 1;\n\n      size = size === undefined ? length : size;\n      while (++index < size) {\n        var rand = baseRandom(index, lastIndex),\n            value = array[rand];\n\n        array[rand] = array[index];\n        array[index] = value;\n      }\n      array.length = size;\n      return array;\n    }\n\n    /**\n     * Converts `string` to a property path array.\n     *\n     * @private\n     * @param {string} string The string to convert.\n     * @returns {Array} Returns the property path array.\n     */\n    var stringToPath = memoizeCapped(function(string) {\n      var result = [];\n      if (string.charCodeAt(0) === 46 /* . */) {\n        result.push('');\n      }\n      string.replace(rePropName, function(match, number, quote, subString) {\n        result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    });\n\n    /**\n     * Converts `value` to a string key if it's not a string or symbol.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {string|symbol} Returns the key.\n     */\n    function toKey(value) {\n      if (typeof value == 'string' || isSymbol(value)) {\n        return value;\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * Converts `func` to its source code.\n     *\n     * @private\n     * @param {Function} func The function to convert.\n     * @returns {string} Returns the source code.\n     */\n    function toSource(func) {\n      if (func != null) {\n        try {\n          return funcToString.call(func);\n        } catch (e) {}\n        try {\n          return (func + '');\n        } catch (e) {}\n      }\n      return '';\n    }\n\n    /**\n     * Updates wrapper `details` based on `bitmask` flags.\n     *\n     * @private\n     * @returns {Array} details The details to modify.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Array} Returns `details`.\n     */\n    function updateWrapDetails(details, bitmask) {\n      arrayEach(wrapFlags, function(pair) {\n        var value = '_.' + pair[0];\n        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {\n          details.push(value);\n        }\n      });\n      return details.sort();\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      if (wrapper instanceof LazyWrapper) {\n        return wrapper.clone();\n      }\n      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n      result.__actions__ = copyArray(wrapper.__actions__);\n      result.__index__  = wrapper.__index__;\n      result.__values__ = wrapper.__values__;\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `array` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the new array of chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\n        size = 1;\n      } else {\n        size = nativeMax(toInteger(size), 0);\n      }\n      var length = array == null ? 0 : array.length;\n      if (!length || size < 1) {\n        return [];\n      }\n      var index = 0,\n          resIndex = 0,\n          result = Array(nativeCeil(length / size));\n\n      while (index < length) {\n        result[resIndex++] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array == null ? 0 : array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[resIndex++] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates a new array concatenating `array` with any additional arrays\n     * and/or values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to concatenate.\n     * @param {...*} [values] The values to concatenate.\n     * @returns {Array} Returns the new concatenated array.\n     * @example\n     *\n     * var array = [1];\n     * var other = _.concat(array, 2, [3], [[4]]);\n     *\n     * console.log(other);\n     * // => [1, 2, 3, [4]]\n     *\n     * console.log(array);\n     * // => [1]\n     */\n    function concat() {\n      var length = arguments.length;\n      if (!length) {\n        return [];\n      }\n      var args = Array(length - 1),\n          array = arguments[0],\n          index = length;\n\n      while (index--) {\n        args[index - 1] = arguments[index];\n      }\n      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));\n    }\n\n    /**\n     * Creates an array of `array` values not included in the other given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * **Note:** Unlike `_.pullAll`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.without, _.xor\n     * @example\n     *\n     * _.difference([2, 1], [2, 3]);\n     * // => [1]\n     */\n    var difference = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `iteratee` which\n     * is invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var differenceBy = baseRest(function(array, values) {\n      var iteratee = last(values);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `comparator`\n     * which is invoked to compare elements of `array` to `values`. The order and\n     * references of result values are determined by the first array. The comparator\n     * is invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     *\n     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }]\n     */\n    var differenceWith = baseRest(function(array, values) {\n      var comparator = last(values);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.dropRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropRightWhile(users, ['active', false]);\n     * // => objects for ['barney']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropRightWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.dropWhile(users, function(o) { return !o.active; });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropWhile(users, ['active', false]);\n     * // => objects for ['pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8, 10], '*', 1, 3);\n     * // => [4, '*', '*', 10]\n     */\n    function fill(array, value, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(o) { return o.user == 'barney'; });\n     * // => 0\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findIndex(users, ['active', false]);\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    function findIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index);\n    }\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n     * // => 2\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastIndex(users, ['active', false]);\n     * // => 2\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    function findLastIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length - 1;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = fromIndex < 0\n          ? nativeMax(length + index, 0)\n          : nativeMin(index, length - 1);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index, true);\n    }\n\n    /**\n     * Flattens `array` a single level deep.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, [3, [4]], 5]\n     */\n    function flatten(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, 1) : [];\n    }\n\n    /**\n     * Recursively flattens `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, 3, 4, 5]\n     */\n    function flattenDeep(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, INFINITY) : [];\n    }\n\n    /**\n     * Recursively flatten `array` up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * var array = [1, [2, [3, [4]], 5]];\n     *\n     * _.flattenDepth(array, 1);\n     * // => [1, 2, [3, [4]], 5]\n     *\n     * _.flattenDepth(array, 2);\n     * // => [1, 2, 3, [4], 5]\n     */\n    function flattenDepth(array, depth) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(array, depth);\n    }\n\n    /**\n     * The inverse of `_.toPairs`; this method returns an object composed\n     * from key-value `pairs`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} pairs The key-value pairs.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.fromPairs([['a', 1], ['b', 2]]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function fromPairs(pairs) {\n      var index = -1,\n          length = pairs == null ? 0 : pairs.length,\n          result = {};\n\n      while (++index < length) {\n        var pair = pairs[index];\n        result[pair[0]] = pair[1];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias first\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.head([1, 2, 3]);\n     * // => 1\n     *\n     * _.head([]);\n     * // => undefined\n     */\n    function head(array) {\n      return (array && array.length) ? array[0] : undefined;\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it's used as the\n     * offset from the end of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // Search from the `fromIndex`.\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseIndexOf(array, value, index);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 0, -1) : [];\n    }\n\n    /**\n     * Creates an array of unique values that are included in all given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersection([2, 1], [2, 3]);\n     * // => [2]\n     */\n    var intersection = baseRest(function(arrays) {\n      var mapped = arrayMap(arrays, castArrayLikeObject);\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped)\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `iteratee`\n     * which is invoked for each element of each `arrays` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [2.1]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }]\n     */\n    var intersectionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      if (iteratee === last(mapped)) {\n        iteratee = undefined;\n      } else {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `comparator`\n     * which is invoked to compare elements of `arrays`. The order and references\n     * of result values are determined by the first array. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.intersectionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }]\n     */\n    var intersectionWith = baseRest(function(arrays) {\n      var comparator = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      if (comparator) {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Converts all elements in `array` into a string separated by `separator`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to convert.\n     * @param {string} [separator=','] The element separator.\n     * @returns {string} Returns the joined string.\n     * @example\n     *\n     * _.join(['a', 'b', 'c'], '~');\n     * // => 'a~b~c'\n     */\n    function join(array, separator) {\n      return array == null ? '' : nativeJoin.call(array, separator);\n    }\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // Search from the `fromIndex`.\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);\n      }\n      return value === value\n        ? strictLastIndexOf(array, value, index)\n        : baseFindIndex(array, baseIsNaN, index, true);\n    }\n\n    /**\n     * Gets the element at index `n` of `array`. If `n` is negative, the nth\n     * element from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.11.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=0] The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     *\n     * _.nth(array, 1);\n     * // => 'b'\n     *\n     * _.nth(array, -2);\n     * // => 'c';\n     */\n    function nth(array, n) {\n      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;\n    }\n\n    /**\n     * Removes all given values from `array` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n     * to remove elements from an array by predicate.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pull(array, 'a', 'c');\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    var pull = baseRest(pullAll);\n\n    /**\n     * This method is like `_.pull` except that it accepts an array of values to remove.\n     *\n     * **Note:** Unlike `_.difference`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pullAll(array, ['a', 'c']);\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    function pullAll(array, values) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values)\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `iteratee` which is\n     * invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The iteratee is invoked with one argument: (value).\n     *\n     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n     *\n     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\n     * console.log(array);\n     * // => [{ 'x': 2 }]\n     */\n    function pullAllBy(array, values, iteratee) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, getIteratee(iteratee, 2))\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `comparator` which\n     * is invoked to compare elements of `array` to `values`. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];\n     *\n     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);\n     * console.log(array);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]\n     */\n    function pullAllWith(array, values, comparator) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, undefined, comparator)\n        : array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to `indexes` and returns an\n     * array of removed elements.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     * var pulled = _.pullAt(array, [1, 3]);\n     *\n     * console.log(array);\n     * // => ['a', 'c']\n     *\n     * console.log(pulled);\n     * // => ['b', 'd']\n     */\n    var pullAt = flatRest(function(array, indexes) {\n      var length = array == null ? 0 : array.length,\n          result = baseAt(array, indexes);\n\n      basePullAt(array, arrayMap(indexes, function(index) {\n        return isIndex(index, length) ? +index : index;\n      }).sort(compareAscending));\n\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is invoked\n     * with three arguments: (value, index, array).\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\n     * to pull elements from an array by value.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getIteratee(predicate, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Reverses `array` so that the first element becomes the last, the second\n     * element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates `array` and is based on\n     * [`Array#reverse`](https://mdn.io/Array/reverse).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.reverse(array);\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function reverse(array) {\n      return array == null ? array : nativeReverse.call(array);\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of\n     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n     * returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      else {\n        start = start == null ? 0 : toInteger(start);\n        end = end === undefined ? length : toInteger(end);\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     */\n    function sortedIndex(array, value) {\n      return baseSortedIndex(array, value);\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 0\n     */\n    function sortedIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 1\n     */\n    function sortedIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value);\n        if (index < length && eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);\n     * // => 4\n     */\n    function sortedLastIndex(array, value) {\n      return baseSortedIndex(array, value, true);\n    }\n\n    /**\n     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 1\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 1\n     */\n    function sortedLastIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);\n    }\n\n    /**\n     * This method is like `_.lastIndexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 3\n     */\n    function sortedLastIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value, true) - 1;\n        if (eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.uniq` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniq([1, 1, 2]);\n     * // => [1, 2]\n     */\n    function sortedUniq(array) {\n      return (array && array.length)\n        ? baseSortedUniq(array)\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniqBy` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\n     * // => [1.1, 2.3]\n     */\n    function sortedUniqBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSortedUniq(array, getIteratee(iteratee, 2))\n        : [];\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.tail([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function tail(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 1, length) : [];\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.takeRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeRightWhile(users, ['active', false]);\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeRightWhile(users, 'active');\n     * // => []\n     */\n    function takeRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.takeWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeWhile(users, ['active', false]);\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeWhile(users, 'active');\n     * // => []\n     */\n    function takeWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, from all given arrays using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([2], [1, 2]);\n     * // => [2, 1]\n     */\n    var union = baseRest(function(arrays) {\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which uniqueness is computed. Result values are chosen from the first\n     * array in which the value occurs. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.unionBy([2.1], [1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    var unionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `comparator` which\n     * is invoked to compare elements of `arrays`. Result values are chosen from\n     * the first array in which the value occurs. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.unionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var unionWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurrence of each element\n     * is kept. The order of result values is determined by the order they occur\n     * in the array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     */\n    function uniq(array) {\n      return (array && array.length) ? baseUniq(array) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * uniqueness is computed. The order of result values is determined by the\n     * order they occur in the array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniqBy(array, iteratee) {\n      return (array && array.length) ? baseUniq(array, getIteratee(iteratee, 2)) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `comparator` which\n     * is invoked to compare elements of `array`. The order of result values is\n     * determined by the order they occur in the array.The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.uniqWith(objects, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n     */\n    function uniqWith(array, comparator) {\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return (array && array.length) ? baseUniq(array, undefined, comparator) : [];\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.2.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['a', 'b'], [1, 2], [true, false]]\n     */\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var length = 0;\n      array = arrayFilter(array, function(group) {\n        if (isArrayLikeObject(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      return baseTimes(length, function(index) {\n        return arrayMap(array, baseProperty(index));\n      });\n    }\n\n    /**\n     * This method is like `_.unzip` except that it accepts `iteratee` to specify\n     * how regrouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  regrouped values.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n    function unzipWith(array, iteratee) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var result = unzip(array);\n      if (iteratee == null) {\n        return result;\n      }\n      return arrayMap(result, function(group) {\n        return apply(iteratee, undefined, group);\n      });\n    }\n\n    /**\n     * Creates an array excluding all given values using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.pull`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.xor\n     * @example\n     *\n     * _.without([2, 1, 2, 3], 1, 2);\n     * // => [3]\n     */\n    var without = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array of unique values that is the\n     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the given arrays. The order of result values is determined by the order\n     * they occur in the arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.without\n     * @example\n     *\n     * _.xor([2, 1], [2, 3]);\n     * // => [1, 3]\n     */\n    var xor = baseRest(function(arrays) {\n      return baseXor(arrayFilter(arrays, isArrayLikeObject));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which by which they're compared. The order of result values is determined\n     * by the order they occur in the arrays. The iteratee is invoked with one\n     * argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2, 3.4]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var xorBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `comparator` which is\n     * invoked to compare elements of `arrays`. The order of result values is\n     * determined by the order they occur in the arrays. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.xorWith(objects, others, _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var xorWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);\n    });\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the\n     * first elements of the given arrays, the second of which contains the\n     * second elements of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     */\n    var zip = baseRest(unzip);\n\n    /**\n     * This method is like `_.fromPairs` except that it accepts two arrays,\n     * one of property identifiers and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.4.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject(['a', 'b'], [1, 2]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function zipObject(props, values) {\n      return baseZipObject(props || [], values || [], assignValue);\n    }\n\n    /**\n     * This method is like `_.zipObject` except that it supports property paths.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\n     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }\n     */\n    function zipObjectDeep(props, values) {\n      return baseZipObject(props || [], values || [], baseSet);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts `iteratee` to specify\n     * how grouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  grouped values.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n     *   return a + b + c;\n     * });\n     * // => [111, 222]\n     */\n    var zipWith = baseRest(function(arrays) {\n      var length = arrays.length,\n          iteratee = length > 1 ? arrays[length - 1] : undefined;\n\n      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n      return unzipWith(arrays, iteratee);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` wrapper instance that wraps `value` with explicit method\n     * chain sequences enabled. The result of such sequences must be unwrapped\n     * with `_#value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Seq\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _\n     *   .chain(users)\n     *   .sortBy('age')\n     *   .map(function(o) {\n     *     return o.user + ' is ' + o.age;\n     *   })\n     *   .head()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor\n     * is invoked with one argument; (value). The purpose of this method is to\n     * \"tap into\" a method chain sequence in order to modify intermediate results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    // Mutate input array.\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor) {\n      interceptor(value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     * The purpose of this method is to \"pass thru\" values replacing intermediate\n     * results in a method chain sequence.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor) {\n      return interceptor(value);\n    }\n\n    /**\n     * This method is the wrapper version of `_.at`.\n     *\n     * @name at\n     * @memberOf _\n     * @since 1.0.0\n     * @category Seq\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _(object).at(['a[0].b.c', 'a[1]']).value();\n     * // => [3, 4]\n     */\n    var wrapperAt = flatRest(function(paths) {\n      var length = paths.length,\n          start = length ? paths[0] : 0,\n          value = this.__wrapped__,\n          interceptor = function(object) { return baseAt(object, paths); };\n\n      if (length > 1 || this.__actions__.length ||\n          !(value instanceof LazyWrapper) || !isIndex(start)) {\n        return this.thru(interceptor);\n      }\n      value = value.slice(start, +start + (length ? 1 : 0));\n      value.__actions__.push({\n        'func': thru,\n        'args': [interceptor],\n        'thisArg': undefined\n      });\n      return new LodashWrapper(value, this.__chain__).thru(function(array) {\n        if (length && !array.length) {\n          array.push(undefined);\n        }\n        return array;\n      });\n    });\n\n    /**\n     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\n     *\n     * @name chain\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // A sequence without explicit chaining.\n     * _(users).head();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // A sequence with explicit chaining.\n     * _(users)\n     *   .chain()\n     *   .head()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chain sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapped = wrapped.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapped.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Gets the next value on a wrapped object following the\n     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).\n     *\n     * @name next\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the next iterator value.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 1 }\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 2 }\n     *\n     * wrapped.next();\n     * // => { 'done': true, 'value': undefined }\n     */\n    function wrapperNext() {\n      if (this.__values__ === undefined) {\n        this.__values__ = toArray(this.value());\n      }\n      var done = this.__index__ >= this.__values__.length,\n          value = done ? undefined : this.__values__[this.__index__++];\n\n      return { 'done': done, 'value': value };\n    }\n\n    /**\n     * Enables the wrapper to be iterable.\n     *\n     * @name Symbol.iterator\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the wrapper object.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped[Symbol.iterator]() === wrapped;\n     * // => true\n     *\n     * Array.from(wrapped);\n     * // => [1, 2]\n     */\n    function wrapperToIterator() {\n      return this;\n    }\n\n    /**\n     * Creates a clone of the chain sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @param {*} value The value to plant.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2]).map(square);\n     * var other = wrapped.plant([3, 4]);\n     *\n     * other.value();\n     * // => [9, 16]\n     *\n     * wrapped.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        clone.__index__ = 0;\n        clone.__values__ = undefined;\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * This method is the wrapper version of `_.reverse`.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n      if (value instanceof LazyWrapper) {\n        var wrapped = value;\n        if (this.__actions__.length) {\n          wrapped = new LazyWrapper(this);\n        }\n        wrapped = wrapped.reverse();\n        wrapped.__actions__.push({\n          'func': thru,\n          'args': [reverse],\n          'thisArg': undefined\n        });\n        return new LodashWrapper(wrapped, this.__chain__);\n      }\n      return this.thru(reverse);\n    }\n\n    /**\n     * Executes the chain sequence to resolve the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @since 0.1.0\n     * @alias toJSON, valueOf\n     * @category Seq\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the number of times the key was returned by `iteratee`. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': 1, '6': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        ++result[key];\n      } else {\n        baseAssignValue(result, key, 1);\n      }\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * Iteration is stopped once `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * **Note:** This method returns `true` for\n     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n     * elements of empty collections.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.every(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, guard) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * **Note:** Unlike `_.remove`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.reject\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, { 'age': 36, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.filter(users, 'active');\n     * // => objects for ['barney']\n     */\n    function filter(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.find(users, function(o) { return o.age < 40; });\n     * // => object for 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.find(users, { 'age': 1, 'active': true });\n     * // => object for 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.find(users, ['active', false]);\n     * // => object for 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.find(users, 'active');\n     * // => object for 'barney'\n     */\n    var find = createFind(findIndex);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=collection.length-1] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    var findLast = createFind(findLastIndex);\n\n    /**\n     * Creates a flattened array of values by running each element in `collection`\n     * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [n, n];\n     * }\n     *\n     * _.flatMap([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMap(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), 1);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDeep([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMapDeep(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), INFINITY);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDepth([1, 2], duplicate, 2);\n     * // => [[1, 1], [2, 2]]\n     */\n    function flatMapDepth(collection, iteratee, depth) {\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(map(collection, iteratee), depth);\n    }\n\n    /**\n     * Iterates over elements of `collection` and invokes `iteratee` for each element.\n     * The iteratee is invoked with three arguments: (value, index|key, collection).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n     * property are iterated like arrays. To avoid this behavior use `_.forIn`\n     * or `_.forOwn` for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias each\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEachRight\n     * @example\n     *\n     * _.forEach([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `1` then `2`.\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forEach(collection, iteratee) {\n      var func = isArray(collection) ? arrayEach : baseEach;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEach\n     * @example\n     *\n     * _.forEachRight([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `2` then `1`.\n     */\n    function forEachRight(collection, iteratee) {\n      var func = isArray(collection) ? arrayEachRight : baseEachRight;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The order of grouped values\n     * is determined by the order they occur in `collection`. The corresponding\n     * value of each key is an array of elements responsible for generating the\n     * key. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': [4.2], '6': [6.1, 6.3] }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        baseAssignValue(result, key, [value]);\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection`. If `collection` is a string, it's\n     * checked for a substring of `value`, otherwise\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * is used for equality comparisons. If `fromIndex` is negative, it's used as\n     * the offset from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {boolean} Returns `true` if `value` is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'a': 1, 'b': 2 }, 1);\n     * // => true\n     *\n     * _.includes('abcd', 'bc');\n     * // => true\n     */\n    function includes(collection, value, fromIndex, guard) {\n      collection = isArrayLike(collection) ? collection : values(collection);\n      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n      var length = collection.length;\n      if (fromIndex < 0) {\n        fromIndex = nativeMax(length + fromIndex, 0);\n      }\n      return isString(collection)\n        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n    }\n\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `path` is a function, it's invoked\n     * for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke each method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invokeMap([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invokeMap = baseRest(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value) {\n        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the last element responsible for generating the key. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var array = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.keyBy(array, function(o) {\n     *   return String.fromCharCode(o.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.keyBy(array, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     */\n    var keyBy = createAggregator(function(result, value, key) {\n      baseAssignValue(result, key, value);\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * _.map([4, 8], square);\n     * // => [16, 64]\n     *\n     * _.map({ 'a': 4, 'b': 8 }, square);\n     * // => [16, 64] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it allows specifying the sort\n     * orders of the iteratees to sort by. If `orders` is unspecified, all values\n     * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n     * descending or \"asc\" for ascending sort order of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @param {string[]} [orders] The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // Sort by `user` in ascending order and by `age` in descending order.\n     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     */\n    function orderBy(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      orders = guard ? undefined : orders;\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseOrderBy(collection, iteratees, orders);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, the second of which\n     * contains elements `predicate` returns falsey for. The predicate is\n     * invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * _.partition(users, function(o) { return o.active; });\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.partition(users, { 'age': 1, 'active': false });\n     * // => objects for [['pebbles'], ['barney', 'fred']]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.partition(users, ['active', false]);\n     * // => objects for [['barney', 'pebbles'], ['fred']]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.partition(users, 'active');\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` thru `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not given, the first element of `collection` is used as the initial\n     * value. The iteratee is invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n     * and `sortBy`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduceRight\n     * @example\n     *\n     * _.reduce([1, 2], function(sum, n) {\n     *   return sum + n;\n     * }, 0);\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     *   return result;\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n     */\n    function reduce(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduce : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n    }\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduce\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    function reduceRight(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduceRight : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);\n    }\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.filter\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * _.reject(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.reject(users, { 'age': 40, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.reject(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.reject(users, 'active');\n     * // => objects for ['barney']\n     */\n    function reject(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, negate(getIteratee(predicate, 3)));\n    }\n\n    /**\n     * Gets a random element from `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     */\n    function sample(collection) {\n      var func = isArray(collection) ? arraySample : baseSample;\n      return func(collection);\n    }\n\n    /**\n     * Gets `n` random elements at unique keys from `collection` up to the\n     * size of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} [n=1] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the random elements.\n     * @example\n     *\n     * _.sampleSize([1, 2, 3], 2);\n     * // => [3, 1]\n     *\n     * _.sampleSize([1, 2, 3], 4);\n     * // => [2, 3, 1]\n     */\n    function sampleSize(collection, n, guard) {\n      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      var func = isArray(collection) ? arraySampleSize : baseSampleSize;\n      return func(collection, n);\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      var func = isArray(collection) ? arrayShuffle : baseShuffle;\n      return func(collection);\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable string keyed properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns the collection size.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      if (collection == null) {\n        return 0;\n      }\n      if (isArrayLike(collection)) {\n        return isString(collection) ? stringSize(collection) : collection.length;\n      }\n      var tag = getTag(collection);\n      if (tag == mapTag || tag == setTag) {\n        return collection.size;\n      }\n      return baseKeys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * Iteration is stopped once `predicate` returns truthy. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.some(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, guard) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection thru each iteratee. This method\n     * performs a stable sort, that is, it preserves the original sort order of\n     * equal elements. The iteratees are invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.sortBy(users, [function(o) { return o.user; }]);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     *\n     * _.sortBy(users, ['user', 'age']);\n     * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]\n     */\n    var sortBy = baseRest(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var length = iteratees.length;\n      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n        iteratees = [];\n      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n        iteratees = [iteratees[0]];\n      }\n      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the timestamp of the number of milliseconds that have elapsed since\n     * the Unix epoch (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Date\n     * @returns {number} Returns the timestamp.\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => Logs the number of milliseconds it took for the deferred invocation.\n     */\n    var now = ctxNow || function() {\n      return root.Date.now();\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it's called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => Logs 'done saving!' after the two async saves have completed.\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func`, with up to `n` arguments,\n     * ignoring any additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      n = guard ? undefined : n;\n      n = (func && n == null) ? func.length : n;\n      return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it's called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery(element).on('click', _.before(5, addContactToList));\n     * // => Allows adding up to 4 contacts to the list.\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = undefined;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and `partials` prepended to the arguments it receives.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * function greet(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * }\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = baseRest(function(func, thisArg, partials) {\n      var bitmask = WRAP_BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bind));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` with `partials`\n     * prepended to the arguments it receives.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist. See\n     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Function\n     * @param {Object} object The object to invoke the method on.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = baseRest(function(object, key, partials) {\n      var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bindKey));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts arguments of `func` and either invokes\n     * `func` returning its result, if at least `arity` number of arguments have\n     * been provided, or returns a function that accepts the remaining `func`\n     * arguments, and so on. The arity of `func` may be specified if `func.length`\n     * is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    function curry(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curry.placeholder;\n      return result;\n    }\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    function curryRight(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curryRight.placeholder;\n      return result;\n    }\n\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed `func` invocations and a `flush` method to immediately invoke them.\n     * Provide `options` to indicate whether `func` should be invoked on the\n     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n     * with the last arguments provided to the debounced function. Subsequent\n     * calls to the debounced function return the result of the last `func`\n     * invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the debounced function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=false]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {number} [options.maxWait]\n     *  The maximum time `func` is allowed to be delayed before it's invoked.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // Avoid costly calculations while the window size is in flux.\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n     * jQuery(element).on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', debounced);\n     *\n     * // Cancel the trailing debounced invocation.\n     * jQuery(window).on('popstate', debounced.cancel);\n     */\n    function debounce(func, wait, options) {\n      var lastArgs,\n          lastThis,\n          maxWait,\n          result,\n          timerId,\n          lastCallTime,\n          lastInvokeTime = 0,\n          leading = false,\n          maxing = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = toNumber(wait) || 0;\n      if (isObject(options)) {\n        leading = !!options.leading;\n        maxing = 'maxWait' in options;\n        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n\n      function invokeFunc(time) {\n        var args = lastArgs,\n            thisArg = lastThis;\n\n        lastArgs = lastThis = undefined;\n        lastInvokeTime = time;\n        result = func.apply(thisArg, args);\n        return result;\n      }\n\n      function leadingEdge(time) {\n        // Reset any `maxWait` timer.\n        lastInvokeTime = time;\n        // Start the timer for the trailing edge.\n        timerId = setTimeout(timerExpired, wait);\n        // Invoke the leading edge.\n        return leading ? invokeFunc(time) : result;\n      }\n\n      function remainingWait(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime,\n            timeWaiting = wait - timeSinceLastCall;\n\n        return maxing\n          ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n          : timeWaiting;\n      }\n\n      function shouldInvoke(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime;\n\n        // Either this is the first call, activity has stopped and we're at the\n        // trailing edge, the system time has gone backwards and we're treating\n        // it as the trailing edge, or we've hit the `maxWait` limit.\n        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n      }\n\n      function timerExpired() {\n        var time = now();\n        if (shouldInvoke(time)) {\n          return trailingEdge(time);\n        }\n        // Restart the timer.\n        timerId = setTimeout(timerExpired, remainingWait(time));\n      }\n\n      function trailingEdge(time) {\n        timerId = undefined;\n\n        // Only invoke if we have `lastArgs` which means `func` has been\n        // debounced at least once.\n        if (trailing && lastArgs) {\n          return invokeFunc(time);\n        }\n        lastArgs = lastThis = undefined;\n        return result;\n      }\n\n      function cancel() {\n        if (timerId !== undefined) {\n          clearTimeout(timerId);\n        }\n        lastInvokeTime = 0;\n        lastArgs = lastCallTime = lastThis = timerId = undefined;\n      }\n\n      function flush() {\n        return timerId === undefined ? result : trailingEdge(now());\n      }\n\n      function debounced() {\n        var time = now(),\n            isInvoking = shouldInvoke(time);\n\n        lastArgs = arguments;\n        lastThis = this;\n        lastCallTime = time;\n\n        if (isInvoking) {\n          if (timerId === undefined) {\n            return leadingEdge(lastCallTime);\n          }\n          if (maxing) {\n            // Handle invocations in a tight loop.\n            clearTimeout(timerId);\n            timerId = setTimeout(timerExpired, wait);\n            return invokeFunc(lastCallTime);\n          }\n        }\n        if (timerId === undefined) {\n          timerId = setTimeout(timerExpired, wait);\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      debounced.flush = flush;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // => Logs 'deferred' after one millisecond.\n     */\n    var defer = baseRest(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => Logs 'later' after one second.\n     */\n    var delay = baseRest(function(func, wait, args) {\n      return baseDelay(func, toNumber(wait) || 0, args);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments reversed.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to flip arguments for.\n     * @returns {Function} Returns the new flipped function.\n     * @example\n     *\n     * var flipped = _.flip(function() {\n     *   return _.toArray(arguments);\n     * });\n     *\n     * flipped('a', 'b', 'c', 'd');\n     * // => ['d', 'c', 'b', 'a']\n     */\n    function flip(func) {\n      return createWrap(func, WRAP_FLIP_FLAG);\n    }\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided, it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is used as the map cache key. The `func`\n     * is invoked with the `this` binding of the memoized function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the\n     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n     * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoized function.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     * var other = { 'c': 3, 'd': 4 };\n     *\n     * var values = _.memoize(_.values);\n     * values(object);\n     * // => [1, 2]\n     *\n     * values(other);\n     * // => [3, 4]\n     *\n     * object.a = 2;\n     * values(object);\n     * // => [1, 2]\n     *\n     * // Modify the result cache.\n     * values.cache.set(object, ['a', 'b']);\n     * values(object);\n     * // => ['a', 'b']\n     *\n     * // Replace `_.memoize.Cache`.\n     * _.memoize.Cache = WeakMap;\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result) || cache;\n        return result;\n      };\n      memoized.cache = new (memoize.Cache || MapCache);\n      return memoized;\n    }\n\n    // Expose `MapCache`.\n    memoize.Cache = MapCache;\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new negated function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        var args = arguments;\n        switch (args.length) {\n          case 0: return !predicate.call(this);\n          case 1: return !predicate.call(this, args[0]);\n          case 2: return !predicate.call(this, args[0], args[1]);\n          case 3: return !predicate.call(this, args[0], args[1], args[2]);\n        }\n        return !predicate.apply(this, args);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first invocation. The `func` is\n     * invoked with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // => `createApplication` is invoked once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with its arguments transformed.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to wrap.\n     * @param {...(Function|Function[])} [transforms=[_.identity]]\n     *  The argument transforms.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function doubled(n) {\n     *   return n * 2;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var func = _.overArgs(function(x, y) {\n     *   return [x, y];\n     * }, [square, doubled]);\n     *\n     * func(9, 3);\n     * // => [81, 6]\n     *\n     * func(10, 5);\n     * // => [100, 10]\n     */\n    var overArgs = castRest(function(func, transforms) {\n      transforms = (transforms.length == 1 && isArray(transforms[0]))\n        ? arrayMap(transforms[0], baseUnary(getIteratee()))\n        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));\n\n      var funcsLength = transforms.length;\n      return baseRest(function(args) {\n        var index = -1,\n            length = nativeMin(args.length, funcsLength);\n\n        while (++index < length) {\n          args[index] = transforms[index].call(this, args[index]);\n        }\n        return apply(func, this, args);\n      });\n    });\n\n    /**\n     * Creates a function that invokes `func` with `partials` prepended to the\n     * arguments it receives. This method is like `_.bind` except it does **not**\n     * alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.2.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // Partially applied with placeholders.\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partial));\n      return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to the arguments it receives.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // Partially applied with placeholders.\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partialRight));\n      return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified `indexes` where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, [2, 0, 1]);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     */\n    var rearg = flatRest(function(func, indexes) {\n      return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as\n     * an array.\n     *\n     * **Note:** This method is based on the\n     * [rest parameter](https://mdn.io/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.rest(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function rest(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start === undefined ? start : toInteger(start);\n      return baseRest(func, start);\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * create function and an array of arguments much like\n     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).\n     *\n     * **Note:** This method is based on the\n     * [spread operator](https://mdn.io/spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @param {number} [start=0] The start position of the spread.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start == null ? 0 : nativeMax(toInteger(start), 0);\n      return baseRest(function(args) {\n        var array = args[start],\n            otherArgs = castSlice(args, 0, start);\n\n        if (array) {\n          arrayPush(otherArgs, array);\n        }\n        return apply(func, this, otherArgs);\n      });\n    }\n\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed `func` invocations and a `flush` method to\n     * immediately invoke them. Provide `options` to indicate whether `func`\n     * should be invoked on the leading and/or trailing edge of the `wait`\n     * timeout. The `func` is invoked with the last arguments provided to the\n     * throttled function. Subsequent calls to the throttled function return the\n     * result of the last `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the throttled function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=true]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // Avoid excessively updating the position while scrolling.\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n     * jQuery(element).on('click', throttled);\n     *\n     * // Cancel the trailing throttled invocation.\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      return debounce(func, wait, {\n        'leading': leading,\n        'maxWait': wait,\n        'trailing': trailing\n      });\n    }\n\n    /**\n     * Creates a function that accepts up to one argument, ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.unary(parseInt));\n     * // => [6, 8, 10]\n     */\n    function unary(func) {\n      return ary(func, 1);\n    }\n\n    /**\n     * Creates a function that provides `value` to `wrapper` as its first\n     * argument. Any additional arguments provided to the function are appended\n     * to those provided to the `wrapper`. The wrapper is invoked with the `this`\n     * binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} [wrapper=identity] The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      return partial(castFunction(wrapper), value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Casts `value` as an array if it's not one.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Lang\n     * @param {*} value The value to inspect.\n     * @returns {Array} Returns the cast array.\n     * @example\n     *\n     * _.castArray(1);\n     * // => [1]\n     *\n     * _.castArray({ 'a': 1 });\n     * // => [{ 'a': 1 }]\n     *\n     * _.castArray('abc');\n     * // => ['abc']\n     *\n     * _.castArray(null);\n     * // => [null]\n     *\n     * _.castArray(undefined);\n     * // => [undefined]\n     *\n     * _.castArray();\n     * // => []\n     *\n     * var array = [1, 2, 3];\n     * console.log(_.castArray(array) === array);\n     * // => true\n     */\n    function castArray() {\n      if (!arguments.length) {\n        return [];\n      }\n      var value = arguments[0];\n      return isArray(value) ? value : [value];\n    }\n\n    /**\n     * Creates a shallow clone of `value`.\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n     * and supports cloning arrays, array buffers, booleans, date objects, maps,\n     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n     * arrays. The own enumerable properties of `arguments` objects are cloned\n     * as plain objects. An empty object is returned for uncloneable values such\n     * as error objects, functions, DOM nodes, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeep\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var shallow = _.clone(objects);\n     * console.log(shallow[0] === objects[0]);\n     * // => true\n     */\n    function clone(value) {\n      return baseClone(value, CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.clone` except that it accepts `customizer` which\n     * is invoked to produce the cloned value. If `customizer` returns `undefined`,\n     * cloning is handled by the method instead. The `customizer` is invoked with\n     * up to four arguments; (value [, index|key, object, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeepWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * }\n     *\n     * var el = _.cloneWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 0\n     */\n    function cloneWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * This method is like `_.clone` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.clone\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var deep = _.cloneDeep(objects);\n     * console.log(deep[0] === objects[0]);\n     * // => false\n     */\n    function cloneDeep(value) {\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.cloneWith` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.cloneWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * }\n     *\n     * var el = _.cloneDeepWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 20\n     */\n    function cloneDeepWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * Checks if `object` conforms to `source` by invoking the predicate\n     * properties of `source` with the corresponding property values of `object`.\n     *\n     * **Note:** This method is equivalent to `_.conforms` when `source` is\n     * partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });\n     * // => true\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });\n     * // => false\n     */\n    function conformsTo(object, source) {\n      return source == null || baseConformsTo(object, source, keys(source));\n    }\n\n    /**\n     * Performs a\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * comparison between two values to determine if they are equivalent.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.eq(object, object);\n     * // => true\n     *\n     * _.eq(object, other);\n     * // => false\n     *\n     * _.eq('a', 'a');\n     * // => true\n     *\n     * _.eq('a', Object('a'));\n     * // => false\n     *\n     * _.eq(NaN, NaN);\n     * // => true\n     */\n    function eq(value, other) {\n      return value === other || (value !== value && other !== other);\n    }\n\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     * @see _.lt\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n    var gt = createRelationalOperation(baseGt);\n\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to\n     *  `other`, else `false`.\n     * @see _.lte\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n    var gte = createRelationalOperation(function(value, other) {\n      return value >= other;\n    });\n\n    /**\n     * Checks if `value` is likely an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n      return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n        !propertyIsEnumerable.call(value, 'callee');\n    };\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(document.body.children);\n     * // => false\n     *\n     * _.isArray('abc');\n     * // => false\n     *\n     * _.isArray(_.noop);\n     * // => false\n     */\n    var isArray = Array.isArray;\n\n    /**\n     * Checks if `value` is classified as an `ArrayBuffer` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     * @example\n     *\n     * _.isArrayBuffer(new ArrayBuffer(2));\n     * // => true\n     *\n     * _.isArrayBuffer(new Array(2));\n     * // => false\n     */\n    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;\n\n    /**\n     * Checks if `value` is array-like. A value is considered array-like if it's\n     * not a function and has a `value.length` that's an integer greater than or\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     * @example\n     *\n     * _.isArrayLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLike(document.body.children);\n     * // => true\n     *\n     * _.isArrayLike('abc');\n     * // => true\n     *\n     * _.isArrayLike(_.noop);\n     * // => false\n     */\n    function isArrayLike(value) {\n      return value != null && isLength(value.length) && !isFunction(value);\n    }\n\n    /**\n     * This method is like `_.isArrayLike` except that it also checks if `value`\n     * is an object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array-like object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArrayLikeObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLikeObject(document.body.children);\n     * // => true\n     *\n     * _.isArrayLikeObject('abc');\n     * // => false\n     *\n     * _.isArrayLikeObject(_.noop);\n     * // => false\n     */\n    function isArrayLikeObject(value) {\n      return isObjectLike(value) && isArrayLike(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false ||\n        (isObjectLike(value) && baseGetTag(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is a buffer.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n     * @example\n     *\n     * _.isBuffer(new Buffer(2));\n     * // => true\n     *\n     * _.isBuffer(new Uint8Array(2));\n     * // => false\n     */\n    var isBuffer = nativeIsBuffer || stubFalse;\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;\n\n    /**\n     * Checks if `value` is likely a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);\n    }\n\n    /**\n     * Checks if `value` is an empty object, collection, map, or set.\n     *\n     * Objects are considered empty if they have no own enumerable string keyed\n     * properties.\n     *\n     * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n     * jQuery-like collections are considered empty if they have a `length` of `0`.\n     * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (value == null) {\n        return true;\n      }\n      if (isArrayLike(value) &&\n          (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n            isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n        return !value.length;\n      }\n      var tag = getTag(value);\n      if (tag == mapTag || tag == setTag) {\n        return !value.size;\n      }\n      if (isPrototype(value)) {\n        return !baseKeys(value).length;\n      }\n      for (var key in value) {\n        if (hasOwnProperty.call(value, key)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent.\n     *\n     * **Note:** This method supports comparing arrays, array buffers, booleans,\n     * date objects, error objects, maps, numbers, `Object` objects, regexes,\n     * sets, strings, symbols, and typed arrays. `Object` objects are compared\n     * by their own, not inherited, enumerable properties. Functions and DOM\n     * nodes are compared by strict equality, i.e. `===`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * object === other;\n     * // => false\n     */\n    function isEqual(value, other) {\n      return baseIsEqual(value, other);\n    }\n\n    /**\n     * This method is like `_.isEqual` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with up to\n     * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, othValue) {\n     *   if (isGreeting(objValue) && isGreeting(othValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqualWith(array, other, customizer);\n     * // => true\n     */\n    function isEqualWith(value, other, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      if (!isObjectLike(value)) {\n        return false;\n      }\n      var tag = baseGetTag(value);\n      return tag == errorTag || tag == domExcTag ||\n        (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on\n     * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n     * @example\n     *\n     * _.isFinite(3);\n     * // => true\n     *\n     * _.isFinite(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     *\n     * _.isFinite('3');\n     * // => false\n     */\n    function isFinite(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    function isFunction(value) {\n      if (!isObject(value)) {\n        return false;\n      }\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in Safari 9 which returns 'object' for typed arrays and other constructors.\n      var tag = baseGetTag(value);\n      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n    }\n\n    /**\n     * Checks if `value` is an integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isInteger`](https://mdn.io/Number/isInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n     * @example\n     *\n     * _.isInteger(3);\n     * // => true\n     *\n     * _.isInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isInteger(Infinity);\n     * // => false\n     *\n     * _.isInteger('3');\n     * // => false\n     */\n    function isInteger(value) {\n      return typeof value == 'number' && value == toInteger(value);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     * @example\n     *\n     * _.isLength(3);\n     * // => true\n     *\n     * _.isLength(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isLength(Infinity);\n     * // => false\n     *\n     * _.isLength('3');\n     * // => false\n     */\n    function isLength(value) {\n      return typeof value == 'number' &&\n        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is the\n     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(_.noop);\n     * // => true\n     *\n     * _.isObject(null);\n     * // => false\n     */\n    function isObject(value) {\n      var type = typeof value;\n      return value != null && (type == 'object' || type == 'function');\n    }\n\n    /**\n     * Checks if `value` is object-like. A value is object-like if it's not `null`\n     * and has a `typeof` result of \"object\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n     * @example\n     *\n     * _.isObjectLike({});\n     * // => true\n     *\n     * _.isObjectLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isObjectLike(_.noop);\n     * // => false\n     *\n     * _.isObjectLike(null);\n     * // => false\n     */\n    function isObjectLike(value) {\n      return value != null && typeof value == 'object';\n    }\n\n    /**\n     * Checks if `value` is classified as a `Map` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     * @example\n     *\n     * _.isMap(new Map);\n     * // => true\n     *\n     * _.isMap(new WeakMap);\n     * // => false\n     */\n    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\n    /**\n     * Performs a partial deep comparison between `object` and `source` to\n     * determine if `object` contains equivalent property values.\n     *\n     * **Note:** This method is equivalent to `_.matches` when `source` is\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.isMatch(object, { 'b': 2 });\n     * // => true\n     *\n     * _.isMatch(object, { 'b': 1 });\n     * // => false\n     */\n    function isMatch(object, source) {\n      return object === source || baseIsMatch(object, source, getMatchData(source));\n    }\n\n    /**\n     * This method is like `_.isMatch` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with five\n     * arguments: (objValue, srcValue, index|key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (isGreeting(objValue) && isGreeting(srcValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatchWith(object, source, customizer);\n     * // => true\n     */\n    function isMatchWith(object, source, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseIsMatch(object, source, getMatchData(source), customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is based on\n     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n     * `undefined` and other non-number values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some\n      // ActiveX objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a pristine native function.\n     *\n     * **Note:** This method can't reliably detect native functions in the presence\n     * of the core-js package because core-js circumvents this kind of detection.\n     * Despite multiple requests, the core-js maintainer has made it clear: any\n     * attempt to fix the detection will be obstructed. As a result, we're left\n     * with little choice but to throw an error. Unfortunately, this also affects\n     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),\n     * which rely on core-js.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (isMaskable(value)) {\n        throw new Error(CORE_ERROR_TEXT);\n      }\n      return baseIsNative(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is `null` or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n     * @example\n     *\n     * _.isNil(null);\n     * // => true\n     *\n     * _.isNil(void 0);\n     * // => true\n     *\n     * _.isNil(NaN);\n     * // => false\n     */\n    function isNil(value) {\n      return value == null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n     * classified as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n     * @example\n     *\n     * _.isNumber(3);\n     * // => true\n     *\n     * _.isNumber(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isNumber(Infinity);\n     * // => true\n     *\n     * _.isNumber('3');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' ||\n        (isObjectLike(value) && baseGetTag(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.8.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    function isPlainObject(value) {\n      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n        return false;\n      }\n      var proto = getPrototype(value);\n      if (proto === null) {\n        return true;\n      }\n      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n      return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n        funcToString.call(Ctor) == objectCtorString;\n    }\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\n    /**\n     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754\n     * double precision number which isn't the result of a rounded unsafe integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.\n     * @example\n     *\n     * _.isSafeInteger(3);\n     * // => true\n     *\n     * _.isSafeInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isSafeInteger(Infinity);\n     * // => false\n     *\n     * _.isSafeInteger('3');\n     * // => false\n     */\n    function isSafeInteger(value) {\n      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Set` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     * @example\n     *\n     * _.isSet(new Set);\n     * // => true\n     *\n     * _.isSet(new WeakSet);\n     * // => false\n     */\n    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' ||\n        (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Symbol` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n     * @example\n     *\n     * _.isSymbol(Symbol.iterator);\n     * // => true\n     *\n     * _.isSymbol('abc');\n     * // => false\n     */\n    function isSymbol(value) {\n      return typeof value == 'symbol' ||\n        (isObjectLike(value) && baseGetTag(value) == symbolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakMap` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.\n     * @example\n     *\n     * _.isWeakMap(new WeakMap);\n     * // => true\n     *\n     * _.isWeakMap(new Map);\n     * // => false\n     */\n    function isWeakMap(value) {\n      return isObjectLike(value) && getTag(value) == weakMapTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakSet` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.\n     * @example\n     *\n     * _.isWeakSet(new WeakSet);\n     * // => true\n     *\n     * _.isWeakSet(new Set);\n     * // => false\n     */\n    function isWeakSet(value) {\n      return isObjectLike(value) && baseGetTag(value) == weakSetTag;\n    }\n\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     * @see _.gt\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n    var lt = createRelationalOperation(baseLt);\n\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to\n     *  `other`, else `false`.\n     * @see _.gte\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n    var lte = createRelationalOperation(function(value, other) {\n      return value <= other;\n    });\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * _.toArray({ 'a': 1, 'b': 2 });\n     * // => [1, 2]\n     *\n     * _.toArray('abc');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toArray(1);\n     * // => []\n     *\n     * _.toArray(null);\n     * // => []\n     */\n    function toArray(value) {\n      if (!value) {\n        return [];\n      }\n      if (isArrayLike(value)) {\n        return isString(value) ? stringToArray(value) : copyArray(value);\n      }\n      if (symIterator && value[symIterator]) {\n        return iteratorToArray(value[symIterator]());\n      }\n      var tag = getTag(value),\n          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\n      return func(value);\n    }\n\n    /**\n     * Converts `value` to a finite number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.12.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted number.\n     * @example\n     *\n     * _.toFinite(3.2);\n     * // => 3.2\n     *\n     * _.toFinite(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toFinite(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toFinite('3.2');\n     * // => 3.2\n     */\n    function toFinite(value) {\n      if (!value) {\n        return value === 0 ? value : 0;\n      }\n      value = toNumber(value);\n      if (value === INFINITY || value === -INFINITY) {\n        var sign = (value < 0 ? -1 : 1);\n        return sign * MAX_INTEGER;\n      }\n      return value === value ? value : 0;\n    }\n\n    /**\n     * Converts `value` to an integer.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toInteger(3.2);\n     * // => 3\n     *\n     * _.toInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toInteger(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toInteger('3.2');\n     * // => 3\n     */\n    function toInteger(value) {\n      var result = toFinite(value),\n          remainder = result % 1;\n\n      return result === result ? (remainder ? result - remainder : result) : 0;\n    }\n\n    /**\n     * Converts `value` to an integer suitable for use as the length of an\n     * array-like object.\n     *\n     * **Note:** This method is based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toLength(3.2);\n     * // => 3\n     *\n     * _.toLength(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toLength(Infinity);\n     * // => 4294967295\n     *\n     * _.toLength('3.2');\n     * // => 3\n     */\n    function toLength(value) {\n      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;\n    }\n\n    /**\n     * Converts `value` to a number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     * @example\n     *\n     * _.toNumber(3.2);\n     * // => 3.2\n     *\n     * _.toNumber(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toNumber(Infinity);\n     * // => Infinity\n     *\n     * _.toNumber('3.2');\n     * // => 3.2\n     */\n    function toNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      if (isObject(value)) {\n        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n        value = isObject(other) ? (other + '') : other;\n      }\n      if (typeof value != 'string') {\n        return value === 0 ? value : +value;\n      }\n      value = value.replace(reTrim, '');\n      var isBinary = reIsBinary.test(value);\n      return (isBinary || reIsOctal.test(value))\n        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n        : (reIsBadHex.test(value) ? NAN : +value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable string\n     * keyed properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return copyObject(value, keysIn(value));\n    }\n\n    /**\n     * Converts `value` to a safe integer. A safe integer can be compared and\n     * represented correctly.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toSafeInteger(3.2);\n     * // => 3\n     *\n     * _.toSafeInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toSafeInteger(Infinity);\n     * // => 9007199254740991\n     *\n     * _.toSafeInteger('3.2');\n     * // => 3\n     */\n    function toSafeInteger(value) {\n      return value\n        ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER)\n        : (value === 0 ? value : 0);\n    }\n\n    /**\n     * Converts `value` to a string. An empty string is returned for `null`\n     * and `undefined` values. The sign of `-0` is preserved.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.toString(null);\n     * // => ''\n     *\n     * _.toString(-0);\n     * // => '-0'\n     *\n     * _.toString([1, 2, 3]);\n     * // => '1,2,3'\n     */\n    function toString(value) {\n      return value == null ? '' : baseToString(value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Assigns own enumerable string keyed properties of source objects to the\n     * destination object. Source objects are applied from left to right.\n     * Subsequent sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object` and is loosely based on\n     * [`Object.assign`](https://mdn.io/Object/assign).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assignIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assign({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var assign = createAssigner(function(object, source) {\n      if (isPrototype(source) || isArrayLike(source)) {\n        copyObject(source, keys(source), object);\n        return;\n      }\n      for (var key in source) {\n        if (hasOwnProperty.call(source, key)) {\n          assignValue(object, key, source[key]);\n        }\n      }\n    });\n\n    /**\n     * This method is like `_.assign` except that it iterates over own and\n     * inherited source properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assign\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n     */\n    var assignIn = createAssigner(function(object, source) {\n      copyObject(source, keysIn(source), object);\n    });\n\n    /**\n     * This method is like `_.assignIn` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extendWith\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignInWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keysIn(source), object, customizer);\n    });\n\n    /**\n     * This method is like `_.assign` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignInWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keys(source), object, customizer);\n    });\n\n    /**\n     * Creates an array of values corresponding to `paths` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Array} Returns the picked values.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _.at(object, ['a[0].b.c', 'a[1]']);\n     * // => [3, 4]\n     */\n    var at = flatRest(baseAt);\n\n    /**\n     * Creates an object that inherits from the `prototype` object. If a\n     * `properties` object is given, its own enumerable string keyed properties\n     * are assigned to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties) {\n      var result = baseCreate(prototype);\n      return properties == null ? result : baseAssign(result, properties);\n    }\n\n    /**\n     * Assigns own and inherited enumerable string keyed properties of source\n     * objects to the destination object for all destination properties that\n     * resolve to `undefined`. Source objects are applied from left to right.\n     * Once a property is set, additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaultsDeep\n     * @example\n     *\n     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var defaults = baseRest(function(object, sources) {\n      object = Object(object);\n\n      var index = -1;\n      var length = sources.length;\n      var guard = length > 2 ? sources[2] : undefined;\n\n      if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n        length = 1;\n      }\n\n      while (++index < length) {\n        var source = sources[index];\n        var props = keysIn(source);\n        var propsIndex = -1;\n        var propsLength = props.length;\n\n        while (++propsIndex < propsLength) {\n          var key = props[propsIndex];\n          var value = object[key];\n\n          if (value === undefined ||\n              (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n            object[key] = source[key];\n          }\n        }\n      }\n\n      return object;\n    });\n\n    /**\n     * This method is like `_.defaults` except that it recursively assigns\n     * default properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaults\n     * @example\n     *\n     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });\n     * // => { 'a': { 'b': 2, 'c': 3 } }\n     */\n    var defaultsDeep = baseRest(function(args) {\n      args.push(undefined, customDefaultsMerge);\n      return apply(mergeWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(o) { return o.age < 40; });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    function findKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);\n    }\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(o) { return o.age < 40; });\n     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    function findLastKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);\n    }\n\n    /**\n     * Iterates over own and inherited enumerable string keyed properties of an\n     * object and invokes `iteratee` for each property. The iteratee is invoked\n     * with three arguments: (value, key, object). Iteratee functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forInRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n     */\n    function forIn(object, iteratee) {\n      return object == null\n        ? object\n        : baseFor(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.\n     */\n    function forInRight(object, iteratee) {\n      return object == null\n        ? object\n        : baseForRight(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * Iterates over own enumerable string keyed properties of an object and\n     * invokes `iteratee` for each property. The iteratee is invoked with three\n     * arguments: (value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwnRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forOwn(object, iteratee) {\n      return object && baseForOwn(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.\n     */\n    function forOwnRight(object, iteratee) {\n      return object && baseForOwnRight(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an array of function property names from own enumerable properties\n     * of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functionsIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functions(new Foo);\n     * // => ['a', 'b']\n     */\n    function functions(object) {\n      return object == null ? [] : baseFunctions(object, keys(object));\n    }\n\n    /**\n     * Creates an array of function property names from own and inherited\n     * enumerable properties of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functions\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functionsIn(new Foo);\n     * // => ['a', 'b', 'c']\n     */\n    function functionsIn(object) {\n      return object == null ? [] : baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the value at `path` of `object`. If the resolved value is\n     * `undefined`, the `defaultValue` is returned in its place.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, path);\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': 2 } };\n     * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b');\n     * // => true\n     *\n     * _.has(object, ['a', 'b']);\n     * // => true\n     *\n     * _.has(other, 'a');\n     * // => false\n     */\n    function has(object, path) {\n      return object != null && hasPath(object, path, baseHas);\n    }\n\n    /**\n     * Checks if `path` is a direct or inherited property of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.hasIn(object, 'a');\n     * // => true\n     *\n     * _.hasIn(object, 'a.b');\n     * // => true\n     *\n     * _.hasIn(object, ['a', 'b']);\n     * // => true\n     *\n     * _.hasIn(object, 'b');\n     * // => false\n     */\n    function hasIn(object, path) {\n      return object != null && hasPath(object, path, baseHasIn);\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite\n     * property assignments of previous values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     */\n    var invert = createInverter(function(result, value, key) {\n      if (value != null &&\n          typeof value.toString != 'function') {\n        value = nativeObjectToString.call(value);\n      }\n\n      result[value] = key;\n    }, constant(identity));\n\n    /**\n     * This method is like `_.invert` except that the inverted object is generated\n     * from the results of running each element of `object` thru `iteratee`. The\n     * corresponding inverted value of each inverted key is an array of keys\n     * responsible for generating the inverted value. The iteratee is invoked\n     * with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invertBy(object);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     *\n     * _.invertBy(object, function(value) {\n     *   return 'group' + value;\n     * });\n     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n     */\n    var invertBy = createInverter(function(result, value, key) {\n      if (value != null &&\n          typeof value.toString != 'function') {\n        value = nativeObjectToString.call(value);\n      }\n\n      if (hasOwnProperty.call(result, value)) {\n        result[value].push(key);\n      } else {\n        result[value] = [key];\n      }\n    }, getIteratee);\n\n    /**\n     * Invokes the method at `path` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n     *\n     * _.invoke(object, 'a[0].b.c.slice', 1, 3);\n     * // => [2, 3]\n     */\n    var invoke = baseRest(baseInvoke);\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    function keys(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n    }\n\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * string keyed property of `object` thru `iteratee`. The iteratee is invoked\n     * with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapValues\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n    function mapKeys(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, iteratee(value, key, object), value);\n      });\n      return result;\n    }\n\n    /**\n     * Creates an object with the same keys as `object` and values generated\n     * by running each own enumerable string keyed property of `object` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapKeys\n     * @example\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * _.mapValues(users, function(o) { return o.age; });\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    function mapValues(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, key, iteratee(value, key, object));\n      });\n      return result;\n    }\n\n    /**\n     * This method is like `_.assign` except that it recursively merges own and\n     * inherited enumerable string keyed properties of source objects into the\n     * destination object. Source properties that resolve to `undefined` are\n     * skipped if a destination value exists. Array and plain object properties\n     * are merged recursively. Other objects and value types are overridden by\n     * assignment. Source objects are applied from left to right. Subsequent\n     * sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {\n     *   'a': [{ 'b': 2 }, { 'd': 4 }]\n     * };\n     *\n     * var other = {\n     *   'a': [{ 'c': 3 }, { 'e': 5 }]\n     * };\n     *\n     * _.merge(object, other);\n     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n     */\n    var merge = createAssigner(function(object, source, srcIndex) {\n      baseMerge(object, source, srcIndex);\n    });\n\n    /**\n     * This method is like `_.merge` except that it accepts `customizer` which\n     * is invoked to produce the merged values of the destination and source\n     * properties. If `customizer` returns `undefined`, merging is handled by the\n     * method instead. The `customizer` is invoked with six arguments:\n     * (objValue, srcValue, key, object, source, stack).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (_.isArray(objValue)) {\n     *     return objValue.concat(srcValue);\n     *   }\n     * }\n     *\n     * var object = { 'a': [1], 'b': [2] };\n     * var other = { 'a': [3], 'b': [4] };\n     *\n     * _.mergeWith(object, other, customizer);\n     * // => { 'a': [1, 3], 'b': [2, 4] }\n     */\n    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n      baseMerge(object, source, srcIndex, customizer);\n    });\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable property paths of `object` that are not omitted.\n     *\n     * **Note:** This method is considerably slower than `_.pick`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to omit.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omit(object, ['a', 'c']);\n     * // => { 'b': '2' }\n     */\n    var omit = flatRest(function(object, paths) {\n      var result = {};\n      if (object == null) {\n        return result;\n      }\n      var isDeep = false;\n      paths = arrayMap(paths, function(path) {\n        path = castPath(path, object);\n        isDeep || (isDeep = path.length > 1);\n        return path;\n      });\n      copyObject(object, getAllKeysIn(object), result);\n      if (isDeep) {\n        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n      }\n      var length = paths.length;\n      while (length--) {\n        baseUnset(result, paths[length]);\n      }\n      return result;\n    });\n\n    /**\n     * The opposite of `_.pickBy`; this method creates an object composed of\n     * the own and inherited enumerable string keyed properties of `object` that\n     * `predicate` doesn't return truthy for. The predicate is invoked with two\n     * arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omitBy(object, _.isNumber);\n     * // => { 'b': '2' }\n     */\n    function omitBy(object, predicate) {\n      return pickBy(object, negate(getIteratee(predicate)));\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pick(object, ['a', 'c']);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var pick = flatRest(function(object, paths) {\n      return object == null ? {} : basePick(object, paths);\n    });\n\n    /**\n     * Creates an object composed of the `object` properties `predicate` returns\n     * truthy for. The predicate is invoked with two arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pickBy(object, _.isNumber);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    function pickBy(object, predicate) {\n      if (object == null) {\n        return {};\n      }\n      var props = arrayMap(getAllKeysIn(object), function(prop) {\n        return [prop];\n      });\n      predicate = getIteratee(predicate);\n      return basePickBy(object, props, function(value, path) {\n        return predicate(value, path[0]);\n      });\n    }\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a\n     * function it's invoked with the `this` binding of its parent object and\n     * its result is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a[0].b.c3', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a[0].b.c3', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length;\n\n      // Ensure the loop is entered when path is empty.\n      if (!length) {\n        length = 1;\n        object = undefined;\n      }\n      while (++index < length) {\n        var value = object == null ? undefined : object[toKey(path[index])];\n        if (value === undefined) {\n          index = length;\n          value = defaultValue;\n        }\n        object = isFunction(value) ? value.call(object) : value;\n      }\n      return object;\n    }\n\n    /**\n     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n     * it's created. Arrays are created for missing index properties while objects\n     * are created for all other missing properties. Use `_.setWith` to customize\n     * `path` creation.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, ['x', '0', 'y', 'z'], 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      return object == null ? object : baseSet(object, path, value);\n    }\n\n    /**\n     * This method is like `_.set` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.setWith(object, '[0][1]', 'a', Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function setWith(object, path, value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseSet(object, path, value, customizer);\n    }\n\n    /**\n     * Creates an array of own enumerable string keyed-value pairs for `object`\n     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its\n     * entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entries\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairs(new Foo);\n     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n     */\n    var toPairs = createToPairs(keys);\n\n    /**\n     * Creates an array of own and inherited enumerable string keyed-value pairs\n     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map\n     * or set, its entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entriesIn\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairsIn(new Foo);\n     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)\n     */\n    var toPairsIn = createToPairs(keysIn);\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own\n     * enumerable string keyed properties thru `iteratee`, with each invocation\n     * potentially mutating the `accumulator` object. If `accumulator` is not\n     * provided, a new object with the same `[[Prototype]]` will be used. The\n     * iteratee is invoked with four arguments: (accumulator, value, key, object).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * }, []);\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function transform(object, iteratee, accumulator) {\n      var isArr = isArray(object),\n          isArrLike = isArr || isBuffer(object) || isTypedArray(object);\n\n      iteratee = getIteratee(iteratee, 4);\n      if (accumulator == null) {\n        var Ctor = object && object.constructor;\n        if (isArrLike) {\n          accumulator = isArr ? new Ctor : [];\n        }\n        else if (isObject(object)) {\n          accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n        }\n        else {\n          accumulator = {};\n        }\n      }\n      (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Removes the property at `path` of `object`.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n     * _.unset(object, 'a[0].b.c');\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     *\n     * _.unset(object, ['a', '0', 'b', 'c']);\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     */\n    function unset(object, path) {\n      return object == null ? true : baseUnset(object, path);\n    }\n\n    /**\n     * This method is like `_.set` except that accepts `updater` to produce the\n     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`\n     * is invoked with one argument: (value).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.update(object, 'a[0].b.c', function(n) { return n * n; });\n     * console.log(object.a[0].b.c);\n     * // => 9\n     *\n     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });\n     * console.log(object.x[0].y.z);\n     * // => 0\n     */\n    function update(object, path, updater) {\n      return object == null ? object : baseUpdate(object, path, castFunction(updater));\n    }\n\n    /**\n     * This method is like `_.update` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.updateWith(object, '[0][1]', _.constant('a'), Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function updateWith(object, path, updater, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);\n    }\n\n    /**\n     * Creates an array of the own enumerable string keyed property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return object == null ? [] : baseValues(object, keys(object));\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable string keyed property\n     * values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return object == null ? [] : baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Clamps `number` within the inclusive `lower` and `upper` bounds.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Number\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     * @example\n     *\n     * _.clamp(-10, -5, 5);\n     * // => -5\n     *\n     * _.clamp(10, -5, 5);\n     * // => 5\n     */\n    function clamp(number, lower, upper) {\n      if (upper === undefined) {\n        upper = lower;\n        lower = undefined;\n      }\n      if (upper !== undefined) {\n        upper = toNumber(upper);\n        upper = upper === upper ? upper : 0;\n      }\n      if (lower !== undefined) {\n        lower = toNumber(lower);\n        lower = lower === lower ? lower : 0;\n      }\n      return baseClamp(toNumber(number), lower, upper);\n    }\n\n    /**\n     * Checks if `n` is between `start` and up to, but not including, `end`. If\n     * `end` is not specified, it's set to `start` with `start` then set to `0`.\n     * If `start` is greater than `end` the params are swapped to support\n     * negative ranges.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.3.0\n     * @category Number\n     * @param {number} number The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     * @see _.range, _.rangeRight\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     *\n     * _.inRange(-3, -2, -6);\n     * // => true\n     */\n    function inRange(number, start, end) {\n      start = toFinite(start);\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      } else {\n        end = toFinite(end);\n      }\n      number = toNumber(number);\n      return baseInRange(number, start, end);\n    }\n\n    /**\n     * Produces a random number between the inclusive `lower` and `upper` bounds.\n     * If only one argument is provided a number between `0` and the given number\n     * is returned. If `floating` is `true`, or either `lower` or `upper` are\n     * floats, a floating-point number is returned instead of an integer.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Number\n     * @param {number} [lower=0] The lower bound.\n     * @param {number} [upper=1] The upper bound.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(lower, upper, floating) {\n      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n        upper = floating = undefined;\n      }\n      if (floating === undefined) {\n        if (typeof upper == 'boolean') {\n          floating = upper;\n          upper = undefined;\n        }\n        else if (typeof lower == 'boolean') {\n          floating = lower;\n          lower = undefined;\n        }\n      }\n      if (lower === undefined && upper === undefined) {\n        lower = 0;\n        upper = 1;\n      }\n      else {\n        lower = toFinite(lower);\n        if (upper === undefined) {\n          upper = lower;\n          lower = 0;\n        } else {\n          upper = toFinite(upper);\n        }\n      }\n      if (lower > upper) {\n        var temp = lower;\n        lower = upper;\n        upper = temp;\n      }\n      if (floating || lower % 1 || upper % 1) {\n        var rand = nativeRandom();\n        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n      }\n      return baseRandom(lower, upper);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar--');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__FOO_BAR__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? capitalize(word) : word);\n    });\n\n    /**\n     * Converts the first character of `string` to upper case and the remaining\n     * to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('FRED');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      return upperFirst(toString(string).toLowerCase());\n    }\n\n    /**\n     * Deburrs `string` by converting\n     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n     * letters to basic Latin letters and removing\n     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = toString(string);\n      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search up to.\n     * @returns {boolean} Returns `true` if `string` ends with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = toString(string);\n      target = baseToString(target);\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : baseClamp(toInteger(position), 0, length);\n\n      var end = position;\n      position -= target.length;\n      return position >= 0 && string.slice(position, end) == target;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', and \"'\" in `string` to their\n     * corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional\n     * characters use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value. See\n     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * When working with HTML you should always\n     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n     * XSS vectors.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      string = toString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n     * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n     */\n    function escapeRegExp(string) {\n      string = toString(string);\n      return (string && reHasRegExpChar.test(string))\n        ? string.replace(reRegExpChar, '\\\\$&')\n        : string;\n    }\n\n    /**\n     * Converts `string` to\n     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__FOO_BAR__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string`, as space separated words, to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.lowerCase('--Foo-Bar--');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('fooBar');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('__FOO_BAR__');\n     * // => 'foo bar'\n     */\n    var lowerCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts the first character of `string` to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.lowerFirst('Fred');\n     * // => 'fred'\n     *\n     * _.lowerFirst('FRED');\n     * // => 'fRED'\n     */\n    var lowerFirst = createCaseFirst('toLowerCase');\n\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      if (!length || strLength >= length) {\n        return string;\n      }\n      var mid = (length - strLength) / 2;\n      return (\n        createPadding(nativeFloor(mid), chars) +\n        string +\n        createPadding(nativeCeil(mid), chars)\n      );\n    }\n\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padEnd('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padEnd('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padEnd('abc', 3);\n     * // => 'abc'\n     */\n    function padEnd(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (string + createPadding(length - strLength, chars))\n        : string;\n    }\n\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padStart('abc', 6);\n     * // => '   abc'\n     *\n     * _.padStart('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padStart('abc', 3);\n     * // => 'abc'\n     */\n    function padStart(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (createPadding(length - strLength, chars) + string)\n        : string;\n    }\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a\n     * hexadecimal, in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the\n     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix=10] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      if (guard || radix == null) {\n        radix = 0;\n      } else if (radix) {\n        radix = +radix;\n      }\n      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=1] The number of times to repeat the string.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n, guard) {\n      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      return baseRepeat(toString(string), n);\n    }\n\n    /**\n     * Replaces matches for `pattern` in `string` with `replacement`.\n     *\n     * **Note:** This method is based on\n     * [`String#replace`](https://mdn.io/String/replace).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to modify.\n     * @param {RegExp|string} pattern The pattern to replace.\n     * @param {Function|string} replacement The match replacement.\n     * @returns {string} Returns the modified string.\n     * @example\n     *\n     * _.replace('Hi Fred', 'Fred', 'Barney');\n     * // => 'Hi Barney'\n     */\n    function replace() {\n      var args = arguments,\n          string = toString(args[0]);\n\n      return args.length < 3 ? string : string.replace(args[1], args[2]);\n    }\n\n    /**\n     * Converts `string` to\n     * [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--FOO-BAR--');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Splits `string` by `separator`.\n     *\n     * **Note:** This method is based on\n     * [`String#split`](https://mdn.io/String/split).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to split.\n     * @param {RegExp|string} separator The separator pattern to split by.\n     * @param {number} [limit] The length to truncate results to.\n     * @returns {Array} Returns the string segments.\n     * @example\n     *\n     * _.split('a-b-c', '-', 2);\n     * // => ['a', 'b']\n     */\n    function split(string, separator, limit) {\n      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {\n        separator = limit = undefined;\n      }\n      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;\n      if (!limit) {\n        return [];\n      }\n      string = toString(string);\n      if (string && (\n            typeof separator == 'string' ||\n            (separator != null && !isRegExp(separator))\n          )) {\n        separator = baseToString(separator);\n        if (!separator && hasUnicode(string)) {\n          return castSlice(stringToArray(string), 0, limit);\n        }\n      }\n      return string.split(separator, limit);\n    }\n\n    /**\n     * Converts `string` to\n     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.1.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar--');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__FOO_BAR__');\n     * // => 'FOO BAR'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + upperFirst(word);\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = toString(string);\n      position = position == null\n        ? 0\n        : baseClamp(toInteger(position), 0, string.length);\n\n      target = baseToString(target);\n      return string.slice(position, position + target.length) == target;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is given, it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options={}] The options object.\n     * @param {RegExp} [options.escape=_.templateSettings.escape]\n     *  The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]\n     *  The \"evaluate\" delimiter.\n     * @param {Object} [options.imports=_.templateSettings.imports]\n     *  An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]\n     *  The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL='lodash.templateSources[n]']\n     *  The sourceURL of the compiled template.\n     * @param {string} [options.variable='obj']\n     *  The data object variable name.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // Use the \"interpolate\" delimiter to create a compiled template.\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // Use the HTML \"escape\" delimiter to escape data property values.\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the internal `print` function in \"evaluate\" delimiters.\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // Use the ES template literal delimiter as an \"interpolate\" delimiter.\n     * // Disable support by replacing the \"interpolate\" delimiter.\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // Use backslashes to treat delimiters as plain text.\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // Use the `imports` option to import `jQuery` as `jq`.\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the `sourceURL` option to specify a custom sourceURL for the template.\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => Find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector.\n     *\n     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // Use custom template delimiters.\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // Use the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and stack traces.\n     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, guard) {\n      // Based on John Resig's `tmpl` implementation\n      // (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = undefined;\n      }\n      string = toString(string);\n      options = assignInWith({}, options, settings, customDefaultsAssignIn);\n\n      var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      // The sourceURL gets injected into the source that's eval-ed, so be careful\n      // with lookup (in case of e.g. prototype pollution), and strip newlines if any.\n      // A newline wouldn't be a valid sourceURL anyway, and it'd enable code injection.\n      var sourceURL = '//# sourceURL=' +\n        (hasOwnProperty.call(options, 'sourceURL')\n          ? (options.sourceURL + '').replace(/[\\r\\n]/g, ' ')\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products needs `match` returned in\n        // order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      // Like with sourceURL, we take care to not check the option's prototype,\n      // as this configuration is a code injection vector.\n      var variable = hasOwnProperty.call(options, 'variable') && options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source)\n          .apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Converts `string`, as a whole, to lower case just like\n     * [String#toLowerCase](https://mdn.io/toLowerCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.toLower('--Foo-Bar--');\n     * // => '--foo-bar--'\n     *\n     * _.toLower('fooBar');\n     * // => 'foobar'\n     *\n     * _.toLower('__FOO_BAR__');\n     * // => '__foo_bar__'\n     */\n    function toLower(value) {\n      return toString(value).toLowerCase();\n    }\n\n    /**\n     * Converts `string`, as a whole, to upper case just like\n     * [String#toUpperCase](https://mdn.io/toUpperCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.toUpper('--foo-bar--');\n     * // => '--FOO-BAR--'\n     *\n     * _.toUpper('fooBar');\n     * // => 'FOOBAR'\n     *\n     * _.toUpper('__foo_bar__');\n     * // => '__FOO_BAR__'\n     */\n    function toUpper(value) {\n      return toString(value).toUpperCase();\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrim, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          chrSymbols = stringToArray(chars),\n          start = charsStartIndex(strSymbols, chrSymbols),\n          end = charsEndIndex(strSymbols, chrSymbols) + 1;\n\n      return castSlice(strSymbols, start, end).join('');\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimEnd('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimEnd('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimEnd(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimEnd, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;\n\n      return castSlice(strSymbols, 0, end).join('');\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimStart('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimStart('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimStart(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimStart, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          start = charsStartIndex(strSymbols, stringToArray(chars));\n\n      return castSlice(strSymbols, start).join('');\n    }\n\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object} [options={}] The options object.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.truncate('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function truncate(string, options) {\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (isObject(options)) {\n        var separator = 'separator' in options ? options.separator : separator;\n        length = 'length' in options ? toInteger(options.length) : length;\n        omission = 'omission' in options ? baseToString(options.omission) : omission;\n      }\n      string = toString(string);\n\n      var strLength = string.length;\n      if (hasUnicode(string)) {\n        var strSymbols = stringToArray(string);\n        strLength = strSymbols.length;\n      }\n      if (length >= strLength) {\n        return string;\n      }\n      var end = length - stringSize(omission);\n      if (end < 1) {\n        return omission;\n      }\n      var result = strSymbols\n        ? castSlice(strSymbols, 0, end).join('')\n        : string.slice(0, end);\n\n      if (separator === undefined) {\n        return result + omission;\n      }\n      if (strSymbols) {\n        end += (result.length - end);\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              substring = result;\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            var newEnd = match.index;\n          }\n          result = result.slice(0, newEnd === undefined ? end : newEnd);\n        }\n      } else if (string.indexOf(baseToString(separator), end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to\n     * their corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional\n     * HTML entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.6.0\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = toString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Converts `string`, as space separated words, to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.upperCase('--foo-bar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('fooBar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('__foo_bar__');\n     * // => 'FOO BAR'\n     */\n    var upperCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toUpperCase();\n    });\n\n    /**\n     * Converts the first character of `string` to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.upperFirst('fred');\n     * // => 'Fred'\n     *\n     * _.upperFirst('FRED');\n     * // => 'FRED'\n     */\n    var upperFirst = createCaseFirst('toUpperCase');\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      string = toString(string);\n      pattern = guard ? undefined : pattern;\n\n      if (pattern === undefined) {\n        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n      }\n      return string.match(pattern) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Function} func The function to attempt.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // Avoid throwing errors for invalid selectors.\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = baseRest(function(func, args) {\n      try {\n        return apply(func, undefined, args);\n      } catch (e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method.\n     *\n     * **Note:** This method doesn't set the \"length\" property of bound functions.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} methodNames The object method names to bind.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'click': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view, ['click']);\n     * jQuery(element).on('click', view.click);\n     * // => Logs 'clicked docs' when clicked.\n     */\n    var bindAll = flatRest(function(object, methodNames) {\n      arrayEach(methodNames, function(key) {\n        key = toKey(key);\n        baseAssignValue(object, key, bind(object[key], object));\n      });\n      return object;\n    });\n\n    /**\n     * Creates a function that iterates over `pairs` and invokes the corresponding\n     * function of the first predicate to return truthy. The predicate-function\n     * pairs are invoked with the `this` binding and arguments of the created\n     * function.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Array} pairs The predicate-function pairs.\n     * @returns {Function} Returns the new composite function.\n     * @example\n     *\n     * var func = _.cond([\n     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],\n     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n     *   [_.stubTrue,                      _.constant('no match')]\n     * ]);\n     *\n     * func({ 'a': 1, 'b': 2 });\n     * // => 'matches A'\n     *\n     * func({ 'a': 0, 'b': 1 });\n     * // => 'matches B'\n     *\n     * func({ 'a': '1', 'b': '2' });\n     * // => 'no match'\n     */\n    function cond(pairs) {\n      var length = pairs == null ? 0 : pairs.length,\n          toIteratee = getIteratee();\n\n      pairs = !length ? [] : arrayMap(pairs, function(pair) {\n        if (typeof pair[1] != 'function') {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n        return [toIteratee(pair[0]), pair[1]];\n      });\n\n      return baseRest(function(args) {\n        var index = -1;\n        while (++index < length) {\n          var pair = pairs[index];\n          if (apply(pair[0], this, args)) {\n            return apply(pair[1], this, args);\n          }\n        }\n      });\n    }\n\n    /**\n     * Creates a function that invokes the predicate properties of `source` with\n     * the corresponding property values of a given object, returning `true` if\n     * all predicates return truthy, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.conformsTo` with\n     * `source` partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 2, 'b': 1 },\n     *   { 'a': 1, 'b': 2 }\n     * ];\n     *\n     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));\n     * // => [{ 'a': 1, 'b': 2 }]\n     */\n    function conforms(source) {\n      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new constant function.\n     * @example\n     *\n     * var objects = _.times(2, _.constant({ 'a': 1 }));\n     *\n     * console.log(objects);\n     * // => [{ 'a': 1 }, { 'a': 1 }]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * Checks `value` to determine whether a default value should be returned in\n     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,\n     * or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Util\n     * @param {*} value The value to check.\n     * @param {*} defaultValue The default value.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * _.defaultTo(1, 10);\n     * // => 1\n     *\n     * _.defaultTo(undefined, 10);\n     * // => 10\n     */\n    function defaultTo(value, defaultValue) {\n      return (value == null || value !== value) ? defaultValue : value;\n    }\n\n    /**\n     * Creates a function that returns the result of invoking the given functions\n     * with the `this` binding of the created function, where each successive\n     * invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flowRight\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow([_.add, square]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the given functions from right to left.\n     *\n     * @static\n     * @since 3.0.0\n     * @memberOf _\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flow\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight([square, _.add]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * This method returns the first argument it receives.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     *\n     * console.log(_.identity(object) === object);\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function that invokes `func` with the arguments of the created\n     * function. If `func` is a property name, the created function returns the\n     * property value for a given element. If `func` is an array or object, the\n     * created function returns `true` for elements that contain the equivalent\n     * source properties, otherwise it returns `false`.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Util\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, _.iteratee(['user', 'fred']));\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, _.iteratee('user'));\n     * // => ['barney', 'fred']\n     *\n     * // Create custom iteratee shorthands.\n     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\n     *     return func.test(string);\n     *   };\n     * });\n     *\n     * _.filter(['abc', 'def'], /ef/);\n     * // => ['def']\n     */\n    function iteratee(func) {\n      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between a given\n     * object and `source`, returning `true` if the given object has equivalent\n     * property values, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.isMatch` with `source`\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\n     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between the\n     * value at `path` of a given object to `srcValue`, returning `true` if the\n     * object value is equivalent, else `false`.\n     *\n     * **Note:** Partial comparisons will match empty array and empty object\n     * `srcValue` values against any array or object value, respectively. See\n     * `_.isEqual` for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.find(objects, _.matchesProperty('a', 4));\n     * // => { 'a': 4, 'b': 5, 'c': 6 }\n     */\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that invokes the method at `path` of a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': _.constant(2) } },\n     *   { 'a': { 'b': _.constant(1) } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(objects, _.method(['a', 'b']));\n     * // => [2, 1]\n     */\n    var method = baseRest(function(path, args) {\n      return function(object) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path of `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = baseRest(function(object, args) {\n      return function(path) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable string keyed function properties of a source\n     * object to the destination object. If `object` is a function, then methods\n     * are added to its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      var props = keys(source),\n          methodNames = baseFunctions(source, props);\n\n      if (options == null &&\n          !(isObject(source) && (methodNames.length || !props.length))) {\n        options = source;\n        source = object;\n        object = this;\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\n          isFunc = isFunction(object);\n\n      arrayEach(methodNames, function(methodName) {\n        var func = source[methodName];\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = function() {\n            var chainAll = this.__chain__;\n            if (chain || chainAll) {\n              var result = object(this.__wrapped__),\n                  actions = result.__actions__ = copyArray(this.__actions__);\n\n              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n              result.__chain__ = chainAll;\n              return result;\n            }\n            return func.apply(object, arrayPush([this.value()], arguments));\n          };\n        }\n      });\n\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      if (root._ === this) {\n        root._ = oldDash;\n      }\n      return this;\n    }\n\n    /**\n     * This method returns `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Util\n     * @example\n     *\n     * _.times(2, _.noop);\n     * // => [undefined, undefined]\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function that gets the argument at index `n`. If `n` is negative,\n     * the nth argument from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [n=0] The index of the argument to return.\n     * @returns {Function} Returns the new pass-thru function.\n     * @example\n     *\n     * var func = _.nthArg(1);\n     * func('a', 'b', 'c', 'd');\n     * // => 'b'\n     *\n     * var func = _.nthArg(-2);\n     * func('a', 'b', 'c', 'd');\n     * // => 'c'\n     */\n    function nthArg(n) {\n      n = toInteger(n);\n      return baseRest(function(args) {\n        return baseNth(args, n);\n      });\n    }\n\n    /**\n     * Creates a function that invokes `iteratees` with the arguments it receives\n     * and returns their results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.over([Math.max, Math.min]);\n     *\n     * func(1, 2, 3, 4);\n     * // => [4, 1]\n     */\n    var over = createOver(arrayMap);\n\n    /**\n     * Creates a function that checks if **all** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overEvery([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => false\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overEvery = createOver(arrayEvery);\n\n    /**\n     * Creates a function that checks if **any** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overSome([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => true\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overSome = createOver(arraySome);\n\n    /**\n     * Creates a function that returns the value at `path` of a given object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': 2 } },\n     *   { 'a': { 'b': 1 } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the value at a given path of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return object == null ? undefined : baseGet(object, path);\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n     * `start` is specified without an `end` or `step`. If `end` is not specified,\n     * it's set to `start` with `start` then set to `0`.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.rangeRight\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(-4);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    var range = createRange();\n\n    /**\n     * This method is like `_.range` except that it populates values in\n     * descending order.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.range\n     * @example\n     *\n     * _.rangeRight(4);\n     * // => [3, 2, 1, 0]\n     *\n     * _.rangeRight(-4);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 5);\n     * // => [4, 3, 2, 1]\n     *\n     * _.rangeRight(0, 20, 5);\n     * // => [15, 10, 5, 0]\n     *\n     * _.rangeRight(0, -4, -1);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.rangeRight(0);\n     * // => []\n     */\n    var rangeRight = createRange(true);\n\n    /**\n     * This method returns a new empty array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Array} Returns the new empty array.\n     * @example\n     *\n     * var arrays = _.times(2, _.stubArray);\n     *\n     * console.log(arrays);\n     * // => [[], []]\n     *\n     * console.log(arrays[0] === arrays[1]);\n     * // => false\n     */\n    function stubArray() {\n      return [];\n    }\n\n    /**\n     * This method returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `false`.\n     * @example\n     *\n     * _.times(2, _.stubFalse);\n     * // => [false, false]\n     */\n    function stubFalse() {\n      return false;\n    }\n\n    /**\n     * This method returns a new empty object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Object} Returns the new empty object.\n     * @example\n     *\n     * var objects = _.times(2, _.stubObject);\n     *\n     * console.log(objects);\n     * // => [{}, {}]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => false\n     */\n    function stubObject() {\n      return {};\n    }\n\n    /**\n     * This method returns an empty string.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {string} Returns the empty string.\n     * @example\n     *\n     * _.times(2, _.stubString);\n     * // => ['', '']\n     */\n    function stubString() {\n      return '';\n    }\n\n    /**\n     * This method returns `true`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `true`.\n     * @example\n     *\n     * _.times(2, _.stubTrue);\n     * // => [true, true]\n     */\n    function stubTrue() {\n      return true;\n    }\n\n    /**\n     * Invokes the iteratee `n` times, returning an array of the results of\n     * each invocation. The iteratee is invoked with one argument; (index).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.times(3, String);\n     * // => ['0', '1', '2']\n     *\n     *  _.times(4, _.constant(0));\n     * // => [0, 0, 0, 0]\n     */\n    function times(n, iteratee) {\n      n = toInteger(n);\n      if (n < 1 || n > MAX_SAFE_INTEGER) {\n        return [];\n      }\n      var index = MAX_ARRAY_LENGTH,\n          length = nativeMin(n, MAX_ARRAY_LENGTH);\n\n      iteratee = getIteratee(iteratee);\n      n -= MAX_ARRAY_LENGTH;\n\n      var result = baseTimes(length, iteratee);\n      while (++index < n) {\n        iteratee(index);\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a property path array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the new property path array.\n     * @example\n     *\n     * _.toPath('a.b.c');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toPath('a[0].b.c');\n     * // => ['a', '0', 'b', 'c']\n     */\n    function toPath(value) {\n      if (isArray(value)) {\n        return arrayMap(value, toKey);\n      }\n      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {string} [prefix=''] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return toString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {number} augend The first number in an addition.\n     * @param {number} addend The second number in an addition.\n     * @returns {number} Returns the total.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    var add = createMathOperation(function(augend, addend) {\n      return augend + addend;\n    }, 0);\n\n    /**\n     * Computes `number` rounded up to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round up.\n     * @param {number} [precision=0] The precision to round up to.\n     * @returns {number} Returns the rounded up number.\n     * @example\n     *\n     * _.ceil(4.006);\n     * // => 5\n     *\n     * _.ceil(6.004, 2);\n     * // => 6.01\n     *\n     * _.ceil(6040, -2);\n     * // => 6100\n     */\n    var ceil = createRound('ceil');\n\n    /**\n     * Divide two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} dividend The first number in a division.\n     * @param {number} divisor The second number in a division.\n     * @returns {number} Returns the quotient.\n     * @example\n     *\n     * _.divide(6, 4);\n     * // => 1.5\n     */\n    var divide = createMathOperation(function(dividend, divisor) {\n      return dividend / divisor;\n    }, 1);\n\n    /**\n     * Computes `number` rounded down to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round down.\n     * @param {number} [precision=0] The precision to round down to.\n     * @returns {number} Returns the rounded down number.\n     * @example\n     *\n     * _.floor(4.006);\n     * // => 4\n     *\n     * _.floor(0.046, 2);\n     * // => 0.04\n     *\n     * _.floor(4060, -2);\n     * // => 4000\n     */\n    var floor = createRound('floor');\n\n    /**\n     * Computes the maximum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => undefined\n     */\n    function max(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseGt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.max` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.maxBy(objects, function(o) { return o.n; });\n     * // => { 'n': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.maxBy(objects, 'n');\n     * // => { 'n': 2 }\n     */\n    function maxBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)\n        : undefined;\n    }\n\n    /**\n     * Computes the mean of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * _.mean([4, 2, 8, 6]);\n     * // => 5\n     */\n    function mean(array) {\n      return baseMean(array, identity);\n    }\n\n    /**\n     * This method is like `_.mean` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be averaged.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.meanBy(objects, function(o) { return o.n; });\n     * // => 5\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.meanBy(objects, 'n');\n     * // => 5\n     */\n    function meanBy(array, iteratee) {\n      return baseMean(array, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * Computes the minimum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => undefined\n     */\n    function min(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseLt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.min` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.minBy(objects, function(o) { return o.n; });\n     * // => { 'n': 1 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.minBy(objects, 'n');\n     * // => { 'n': 1 }\n     */\n    function minBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)\n        : undefined;\n    }\n\n    /**\n     * Multiply two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} multiplier The first number in a multiplication.\n     * @param {number} multiplicand The second number in a multiplication.\n     * @returns {number} Returns the product.\n     * @example\n     *\n     * _.multiply(6, 4);\n     * // => 24\n     */\n    var multiply = createMathOperation(function(multiplier, multiplicand) {\n      return multiplier * multiplicand;\n    }, 1);\n\n    /**\n     * Computes `number` rounded to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round.\n     * @param {number} [precision=0] The precision to round to.\n     * @returns {number} Returns the rounded number.\n     * @example\n     *\n     * _.round(4.006);\n     * // => 4\n     *\n     * _.round(4.006, 2);\n     * // => 4.01\n     *\n     * _.round(4060, -2);\n     * // => 4100\n     */\n    var round = createRound('round');\n\n    /**\n     * Subtract two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {number} minuend The first number in a subtraction.\n     * @param {number} subtrahend The second number in a subtraction.\n     * @returns {number} Returns the difference.\n     * @example\n     *\n     * _.subtract(6, 4);\n     * // => 2\n     */\n    var subtract = createMathOperation(function(minuend, subtrahend) {\n      return minuend - subtrahend;\n    }, 0);\n\n    /**\n     * Computes the sum of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 2, 8, 6]);\n     * // => 20\n     */\n    function sum(array) {\n      return (array && array.length)\n        ? baseSum(array, identity)\n        : 0;\n    }\n\n    /**\n     * This method is like `_.sum` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be summed.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.sumBy(objects, function(o) { return o.n; });\n     * // => 20\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sumBy(objects, 'n');\n     * // => 20\n     */\n    function sumBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSum(array, getIteratee(iteratee, 2))\n        : 0;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return wrapped values in chain sequences.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.assignIn = assignIn;\n    lodash.assignInWith = assignInWith;\n    lodash.assignWith = assignWith;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.castArray = castArray;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.concat = concat;\n    lodash.cond = cond;\n    lodash.conforms = conforms;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defaultsDeep = defaultsDeep;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.differenceBy = differenceBy;\n    lodash.differenceWith = differenceWith;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatMap = flatMap;\n    lodash.flatMapDeep = flatMapDeep;\n    lodash.flatMapDepth = flatMapDepth;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flattenDepth = flattenDepth;\n    lodash.flip = flip;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.fromPairs = fromPairs;\n    lodash.functions = functions;\n    lodash.functionsIn = functionsIn;\n    lodash.groupBy = groupBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.intersectionBy = intersectionBy;\n    lodash.intersectionWith = intersectionWith;\n    lodash.invert = invert;\n    lodash.invertBy = invertBy;\n    lodash.invokeMap = invokeMap;\n    lodash.iteratee = iteratee;\n    lodash.keyBy = keyBy;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.mergeWith = mergeWith;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.negate = negate;\n    lodash.nthArg = nthArg;\n    lodash.omit = omit;\n    lodash.omitBy = omitBy;\n    lodash.once = once;\n    lodash.orderBy = orderBy;\n    lodash.over = over;\n    lodash.overArgs = overArgs;\n    lodash.overEvery = overEvery;\n    lodash.overSome = overSome;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pickBy = pickBy;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAll = pullAll;\n    lodash.pullAllBy = pullAllBy;\n    lodash.pullAllWith = pullAllWith;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rangeRight = rangeRight;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.reverse = reverse;\n    lodash.sampleSize = sampleSize;\n    lodash.set = set;\n    lodash.setWith = setWith;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortedUniq = sortedUniq;\n    lodash.sortedUniqBy = sortedUniqBy;\n    lodash.split = split;\n    lodash.spread = spread;\n    lodash.tail = tail;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.toArray = toArray;\n    lodash.toPairs = toPairs;\n    lodash.toPairsIn = toPairsIn;\n    lodash.toPath = toPath;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.unary = unary;\n    lodash.union = union;\n    lodash.unionBy = unionBy;\n    lodash.unionWith = unionWith;\n    lodash.uniq = uniq;\n    lodash.uniqBy = uniqBy;\n    lodash.uniqWith = uniqWith;\n    lodash.unset = unset;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.update = update;\n    lodash.updateWith = updateWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.without = without;\n    lodash.words = words;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.xorBy = xorBy;\n    lodash.xorWith = xorWith;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipObjectDeep = zipObjectDeep;\n    lodash.zipWith = zipWith;\n\n    // Add aliases.\n    lodash.entries = toPairs;\n    lodash.entriesIn = toPairsIn;\n    lodash.extend = assignIn;\n    lodash.extendWith = assignInWith;\n\n    // Add methods to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return unwrapped values in chain sequences.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.ceil = ceil;\n    lodash.clamp = clamp;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.cloneDeepWith = cloneDeepWith;\n    lodash.cloneWith = cloneWith;\n    lodash.conformsTo = conformsTo;\n    lodash.deburr = deburr;\n    lodash.defaultTo = defaultTo;\n    lodash.divide = divide;\n    lodash.endsWith = endsWith;\n    lodash.eq = eq;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.floor = floor;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.hasIn = hasIn;\n    lodash.head = head;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.invoke = invoke;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isArrayBuffer = isArrayBuffer;\n    lodash.isArrayLike = isArrayLike;\n    lodash.isArrayLikeObject = isArrayLikeObject;\n    lodash.isBoolean = isBoolean;\n    lodash.isBuffer = isBuffer;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isEqualWith = isEqualWith;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isInteger = isInteger;\n    lodash.isLength = isLength;\n    lodash.isMap = isMap;\n    lodash.isMatch = isMatch;\n    lodash.isMatchWith = isMatchWith;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNil = isNil;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isObjectLike = isObjectLike;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isSafeInteger = isSafeInteger;\n    lodash.isSet = isSet;\n    lodash.isString = isString;\n    lodash.isSymbol = isSymbol;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.isWeakMap = isWeakMap;\n    lodash.isWeakSet = isWeakSet;\n    lodash.join = join;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lowerCase = lowerCase;\n    lodash.lowerFirst = lowerFirst;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.maxBy = maxBy;\n    lodash.mean = mean;\n    lodash.meanBy = meanBy;\n    lodash.min = min;\n    lodash.minBy = minBy;\n    lodash.stubArray = stubArray;\n    lodash.stubFalse = stubFalse;\n    lodash.stubObject = stubObject;\n    lodash.stubString = stubString;\n    lodash.stubTrue = stubTrue;\n    lodash.multiply = multiply;\n    lodash.nth = nth;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padEnd = padEnd;\n    lodash.padStart = padStart;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.replace = replace;\n    lodash.result = result;\n    lodash.round = round;\n    lodash.runInContext = runInContext;\n    lodash.sample = sample;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedIndexBy = sortedIndexBy;\n    lodash.sortedIndexOf = sortedIndexOf;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.sortedLastIndexBy = sortedLastIndexBy;\n    lodash.sortedLastIndexOf = sortedLastIndexOf;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.subtract = subtract;\n    lodash.sum = sum;\n    lodash.sumBy = sumBy;\n    lodash.template = template;\n    lodash.times = times;\n    lodash.toFinite = toFinite;\n    lodash.toInteger = toInteger;\n    lodash.toLength = toLength;\n    lodash.toLower = toLower;\n    lodash.toNumber = toNumber;\n    lodash.toSafeInteger = toSafeInteger;\n    lodash.toString = toString;\n    lodash.toUpper = toUpper;\n    lodash.trim = trim;\n    lodash.trimEnd = trimEnd;\n    lodash.trimStart = trimStart;\n    lodash.truncate = truncate;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.upperCase = upperCase;\n    lodash.upperFirst = upperFirst;\n\n    // Add aliases.\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.first = head;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), { 'chain': false });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type {string}\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      LazyWrapper.prototype[methodName] = function(n) {\n        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);\n\n        var result = (this.__filtered__ && !index)\n          ? new LazyWrapper(this)\n          : this.clone();\n\n        if (result.__filtered__) {\n          result.__takeCount__ = nativeMin(n, result.__takeCount__);\n        } else {\n          result.__views__.push({\n            'size': nativeMin(n, MAX_ARRAY_LENGTH),\n            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')\n          });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n      var type = index + 1,\n          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee) {\n        var result = this.clone();\n        result.__iteratees__.push({\n          'iteratee': getIteratee(iteratee, 3),\n          'type': type\n        });\n        result.__filtered__ = result.__filtered__ || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.head` and `_.last`.\n    arrayEach(['head', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.\n    arrayEach(['initial', 'tail'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.find = function(predicate) {\n      return this.filter(predicate).head();\n    };\n\n    LazyWrapper.prototype.findLast = function(predicate) {\n      return this.reverse().find(predicate);\n    };\n\n    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {\n      if (typeof path == 'function') {\n        return new LazyWrapper(this);\n      }\n      return this.map(function(value) {\n        return baseInvoke(value, path, args);\n      });\n    });\n\n    LazyWrapper.prototype.reject = function(predicate) {\n      return this.filter(negate(getIteratee(predicate)));\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = toInteger(start);\n\n      var result = this;\n      if (result.__filtered__ && (start > 0 || end < 0)) {\n        return new LazyWrapper(result);\n      }\n      if (start < 0) {\n        result = result.takeRight(-start);\n      } else if (start) {\n        result = result.drop(start);\n      }\n      if (end !== undefined) {\n        end = toInteger(end);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.takeRightWhile = function(predicate) {\n      return this.reverse().takeWhile(predicate).reverse();\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.take(MAX_ARRAY_LENGTH);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),\n          isTaker = /^(?:head|last)$/.test(methodName),\n          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],\n          retUnwrapped = isTaker || /^find/.test(methodName);\n\n      if (!lodashFunc) {\n        return;\n      }\n      lodash.prototype[methodName] = function() {\n        var value = this.__wrapped__,\n            args = isTaker ? [1] : arguments,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        var interceptor = function(value) {\n          var result = lodashFunc.apply(lodash, arrayPush([value], args));\n          return (isTaker && chainAll) ? result[0] : result;\n        };\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n          isLazy = useLazy = false;\n        }\n        var chainAll = this.__chain__,\n            isHybrid = !!this.__actions__.length,\n            isUnwrapped = retUnwrapped && !chainAll,\n            onlyLazy = isLazy && !isHybrid;\n\n        if (!retUnwrapped && useLazy) {\n          value = onlyLazy ? value : new LazyWrapper(this);\n          var result = func.apply(value, args);\n          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n          return new LodashWrapper(result, chainAll);\n        }\n        if (isUnwrapped && onlyLazy) {\n          return func.apply(this, args);\n        }\n        result = this.thru(interceptor);\n        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;\n      };\n    });\n\n    // Add `Array` methods to `lodash.prototype`.\n    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n      var func = arrayProto[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:pop|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          var value = this.value();\n          return func.apply(isArray(value) ? value : [], args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(isArray(value) ? value : [], args);\n        });\n      };\n    });\n\n    // Map minified method names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = lodashFunc.name + '';\n        if (!hasOwnProperty.call(realNames, key)) {\n          realNames[key] = [];\n        }\n        realNames[key].push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{\n      'name': 'wrapper',\n      'func': undefined\n    }];\n\n    // Add methods to `LazyWrapper`.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chain sequence methods to the `lodash` wrapper.\n    lodash.prototype.at = wrapperAt;\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.next = wrapperNext;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    // Add lazy aliases.\n    lodash.prototype.first = lodash.prototype.head;\n\n    if (symIterator) {\n      lodash.prototype[symIterator] = wrapperToIterator;\n    }\n    return lodash;\n  });\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Some AMD build optimizers, like r.js, check for condition patterns like:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose Lodash on the global object to prevent errors when Lodash is\n    // loaded by a script tag in the presence of an AMD loader.\n    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n    // Use `_.noConflict` to remove Lodash from the global object.\n    root._ = _;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return _;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds it.\n  else if (freeModule) {\n    // Export for Node.js.\n    (freeModule.exports = _)._ = _;\n    // Export for CommonJS support.\n    freeExports._ = _;\n  }\n  else {\n    // Export to the global object.\n    root._ = _;\n  }\n}.call(this));\n","import { isEqual } from \"lodash\";\n\nexport default class User {\n  constructor(props) {\n    this.initialData = {\n      name: props.name,\n      email: props.email,\n      phone: props.phone,\n      division: props.division,\n      working_area: props.name\n    };\n    this.data = Object.assign({}, { ...this.initialData });\n  }\n\n  get = () => this.data;\n\n  set = data => {\n    this.data = Object.assign({}, { ...this.data, ...data });\n    // console.log(this.initialData);\n    // console.log(this.data);\n    // console.log(!isEqual(this.initialData, this.data));\n    return { changed: !isEqual(this.initialData, this.data), data: this.data };\n  };\n}\n","export function generateInputField({ label, type, id, value, name, placeholder }) {\n  let markup = `\n    <fieldset class=\"input\">\n      <label class=\"input-label\" for=\"${id}\">${label}</label>\n      <input id=\"${id}\" class=\"input-field\" name=\"${name.trim()}\" type=\"${type}\" value=\"${value}\" placeholder=\"${placeholder}\"/>\n    </fieldset>`;\n\n  return markup;\n}\n","import { generateImageContainer } from \"./image-container\";\nimport { generateInputField } from \"./input-field\";\n\nlet body = $(\"body\");\n\nexport function generateBaseModal(data, withActionBar, actionBar, callback) {\n  let action = withActionBar\n    ? `<div class=\"modal-action-wrapper\">\n        <footer class=\"modal-action-bar container-post\">\n          ${actionBar}\n        </footer>\n      </div>`\n    : \"\";\n\n  let modal = `<main class=\"modal\">\n      <div class=\"modal-main-area\">\n        <nav class=\"modal-nav\">\n          <button type=\"button\" class=\"close-modal button-close--rounded\">\n            <div class=\"modal-close-icon\"></div>\n            <div class=\"modal-close-text\">esc</div>\n          </button>\n        </nav>\n        <div class=\"modal-wrapper container-post\">\n          ${data}\n        </div>\n        ${action}\n      </div>\n    </main>\n  `;\n\n  body.bind(\"append\", callback);\n  body.append(modal).addClass(\"lock-scroll\");\n}\n\nfunction removeModal() {\n  let modal = $(\".modal\");\n  modal.remove();\n  body.removeClass(\"lock-scroll\");\n}\n\n$(function() {\n  $(document).on(\"click\", \".close-modal\", function() {\n    removeModal();\n  });\n\n  $(document).on(\"keyup\", function(e) {\n    let modal = $(\".modal\");\n    if (modal.length > 0 && e.key === \"Escape\") {\n      removeModal();\n    }\n  });\n});\n\nexport function generateUserProfileDetail(data, callback) {\n  const modalContent =\n    `\n    <h1 class=\"heading1\" style=\"margin-bottom: 48px;\">Edit Profile</h1>\n    <main class=\"edit-profile-wrapper\">\n      <div class=\"edit-profile-info\">\n      ` +\n    generateInputField({\n      label: \"Full name\",\n      type: \"text\",\n      name: \"name\",\n      id: \"user-fullname\",\n      value: data.name,\n      placeholder: \"What's your name?\"\n    }) +\n    generateInputField({\n      label: \"Email\",\n      type: \"email\",\n      name: \"email\",\n      id: \"user-email\",\n      value: data.email,\n      placeholder: \"Enter your email address\"\n    }) +\n    generateInputField({\n      label: \"Phone number\",\n      type: \"text\",\n      name: \"phone\",\n      id: \"user-phone\",\n      value: data.phone,\n      placeholder: \"Enter your phone number\"\n    }) +\n    generateInputField({\n      label: \"Divisi\",\n      type: \"text\",\n      name: \"division\",\n      id: \"user-division\",\n      value: data.divisi,\n      placeholder: \"Enter your division\"\n    }) +\n    generateInputField({\n      label: \"Working area\",\n      type: \"text\",\n      name: \"working_area\",\n      id: \"user-working_area\",\n      value: data.working_area,\n      placeholder: \"Enter your working area\"\n    }) +\n    `\n    </div>\n    <div class=\"edit-profile-side\">\n    ` +\n    generateImageContainer({\n      label: \"Profile photo\",\n      src: data.photo\n    }) +\n    `\n    </div>\n    </main>`;\n\n  let actionBar = `\n    <button class=\"button button--large primary save-change\">Save Changes</button>\n    <button class=\"button button--large default close-modal\">Cancel</button>\n  `;\n\n  generateBaseModal(modalContent, true, actionBar, callback);\n}\n","export function generateImageContainer({ label, src }) {\n  let photo = src || \"default.png\";\n  let markup = `\n    <fieldset class=\"input\">\n      <label class=\"input-label\">${label}</label>\n      <div class=\"edit-profile-photo\" style=\"background-image: url('/images/users/${photo}')\"></div>\n    </fieldset>\n    <button class=\"button button--medium default stretch\">Upload an Image</button>\n  `;\n\n  return markup;\n}\n","import \"datatables.net-fixedcolumns-bs4\";\nimport axios from \"axios\";\n\nimport User from \"./../class/User\";\nimport { generateCustomSearch } from \"./../components/datatable-searchbox\";\nimport { generateButtonSpinner } from \"./../components/button-spinner\";\nimport { generateUserProfileDetail } from \"../components/modals\";\n\n$(function() {\n  // Add custom search field to page header\n  generateCustomSearch(\"#users-table_filter\");\n});\n\n// Generate Datatables\nlet usersTable = $(\"#users-table\").DataTable({\n  serverSide: false,\n  processing: true,\n  ajax: \"/data/users.json\",\n\n  columns: [\n    {\n      data: \"id\",\n      name: \"\",\n      searchable: false,\n      render: (data, type, full, meta) => {\n        return meta.row + 1;\n      }\n    },\n    {\n      data: \"name\",\n      name: \"name\",\n      className: \"table__name\",\n      render: function(data, type, full, meta) {\n        let admin = full.role === \"admin\";\n        let profilePicture = full.photo || \"default.png\";\n        let fullData = JSON.stringify(full);\n        return `\n          <div class=\"user-info\">\n            <textarea class=\"hidden\">${fullData}</textarea>\n            <div class=\"profile-picture\" style=\"background-image: url('/images/users/${profilePicture}');\"></div>\n            <span class=\"user-data\">\n              <div class=\"heading4 user-main-info\">\n                ${full.name}\n                ${admin ? '<span class=\"user-role\">admin</span>' : \"\"}\n              </div>\n              <span class=\"medium\" style=\"color: #767676;\">\n                ${full.email}\n                <span style=\"padding: 0px 4px;\">•</span>\n                ${full.phone}\n              </span>\n            </span>\n          </div>\n        `;\n      }\n    },\n    { data: \"divisi\", name: \"divisi\", className: \"table__name\" },\n    { data: \"working_area\", name: \"working_area\", className: \"table__name\" }\n  ],\n  language: {\n    processing:\n      '<i class=\"fa fa-spinner fa-spin fa-3x fa-fw\"></i><span class=\"sr-only\">Loading...</span> '\n  },\n  pageLength: 25,\n  dom: 'ilfrt<\"#tableFooter\" p>'\n});\n\n$(function() {\n  let modal = $(\".modal\");\n  let button = $(\".save-change\");\n\n  // user Data\n  let name, email, phone, division, working_area;\n  let user = {};\n\n  function getUserData() {\n    name = $(\"#user-fullname\").val();\n    email = $(\"#user-email\").val();\n    phone = $(\"#user-phone\").val();\n    division = $(\"#user-division\").val();\n    working_area = $(\"#user-working_area\").val();\n\n    user = new User({\n      name,\n      email,\n      phone,\n      division,\n      working_area\n    });\n  }\n\n  // Trigger user detail modal\n  $(document).on(\"click\", \".user-info\", function() {\n    let info = JSON.parse(\n      $(this)\n        .children(\"textarea.hidden\")\n        .val()\n    );\n    generateUserProfileDetail(info, getUserData);\n  });\n\n  // Monitor user data field changes\n  $(document).on(\n    \"change\",\n    \"#user-fullname, #user-email, #user-phone, #user-division, #user-working_area\",\n    function() {\n      let data = user.set({\n        [$(this)\n          .prop(\"name\")\n          .trim()]: $(this)\n          .val()\n          .trim()\n      });\n\n      if (data.changed) {\n        $(\".save-change\").prop(\"disabled\", false);\n      } else {\n        $(\".save-change\").prop(\"disabled\", true);\n      }\n    }\n  );\n\n  $(document).on(\"click\", \".save-change\", function() {\n    $(this).prop(\"disabled\", true);\n    $(this).append(generateButtonSpinner());\n    console.log(user.get());\n  });\n});\n","export function generateCustomSearch(field) {\n  let sudoSearchField = $(\"#table-search-field\");\n  let searchField = $(`${field} > label > input`);\n  let clearButton = $(`.table-search-clear`);\n\n  $(document).on(\"keyup\", \"#table-search-field\", function() {\n    // Trigger show/hide clear button\n    if (\n      $(this)\n        .val()\n        .trim() !== \"\"\n    ) {\n      clearButton.css(\"display\", \"inline-flex\");\n    } else {\n      clearButton.css(\"display\", \"none\");\n    }\n\n    // Assign value to the real searchbox input\n    searchField.val($(this).val()).trigger(\"keyup\");\n  });\n\n  // Clear Button Action\n  $(document).on(\"click\", \".table-search-clear\", function() {\n    sudoSearchField\n      .val(\"\")\n      .trigger(\"keyup\")\n      .focus();\n    searchField.val(\"\").trigger(\"keyup\");\n  });\n}\n","export function generateButtonSpinner() {\n  return `<div class=\"loading\"><div class=\"loader\"></div></div>`;\n}\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","require(\"./bootstrap\");\nrequire(\"./datatables/users\");\n","/*! DataTables Bootstrap 4 integration\n * ©2011-2017 SpryMedia Ltd - datatables.net/license\n */\n\n/**\n * DataTables integration for Bootstrap 4. This requires Bootstrap 4 and\n * DataTables 1.10 or newer.\n *\n * This file sets the defaults and adds options to DataTables to style its\n * controls using Bootstrap. See http://datatables.net/manual/styling/bootstrap\n * for further information.\n */\n(function( factory ){\n\tif ( typeof define === 'function' && define.amd ) {\n\t\t// AMD\n\t\tdefine( ['jquery', 'datatables.net'], function ( $ ) {\n\t\t\treturn factory( $, window, document );\n\t\t} );\n\t}\n\telse if ( typeof exports === 'object' ) {\n\t\t// CommonJS\n\t\tmodule.exports = function (root, $) {\n\t\t\tif ( ! root ) {\n\t\t\t\troot = window;\n\t\t\t}\n\n\t\t\tif ( ! $ || ! $.fn.dataTable ) {\n\t\t\t\t// Require DataTables, which attaches to jQuery, including\n\t\t\t\t// jQuery if needed and have a $ property so we can access the\n\t\t\t\t// jQuery object that is used\n\t\t\t\t$ = require('datatables.net')(root, $).$;\n\t\t\t}\n\n\t\t\treturn factory( $, root, root.document );\n\t\t};\n\t}\n\telse {\n\t\t// Browser\n\t\tfactory( jQuery, window, document );\n\t}\n}(function( $, window, document, undefined ) {\n'use strict';\nvar DataTable = $.fn.dataTable;\n\n\n/* Set the defaults for DataTables initialisation */\n$.extend( true, DataTable.defaults, {\n\tdom:\n\t\t\"<'row'<'col-sm-12 col-md-6'l><'col-sm-12 col-md-6'f>>\" +\n\t\t\"<'row'<'col-sm-12'tr>>\" +\n\t\t\"<'row'<'col-sm-12 col-md-5'i><'col-sm-12 col-md-7'p>>\",\n\trenderer: 'bootstrap'\n} );\n\n\n/* Default class modification */\n$.extend( DataTable.ext.classes, {\n\tsWrapper:      \"dataTables_wrapper dt-bootstrap4\",\n\tsFilterInput:  \"form-control form-control-sm\",\n\tsLengthSelect: \"custom-select custom-select-sm form-control form-control-sm\",\n\tsProcessing:   \"dataTables_processing card\",\n\tsPageButton:   \"paginate_button page-item\"\n} );\n\n\n/* Bootstrap paging button renderer */\nDataTable.ext.renderer.pageButton.bootstrap = function ( settings, host, idx, buttons, page, pages ) {\n\tvar api     = new DataTable.Api( settings );\n\tvar classes = settings.oClasses;\n\tvar lang    = settings.oLanguage.oPaginate;\n\tvar aria = settings.oLanguage.oAria.paginate || {};\n\tvar btnDisplay, btnClass, counter=0;\n\n\tvar attach = function( container, buttons ) {\n\t\tvar i, ien, node, button;\n\t\tvar clickHandler = function ( e ) {\n\t\t\te.preventDefault();\n\t\t\tif ( !$(e.currentTarget).hasClass('disabled') && api.page() != e.data.action ) {\n\t\t\t\tapi.page( e.data.action ).draw( 'page' );\n\t\t\t}\n\t\t};\n\n\t\tfor ( i=0, ien=buttons.length ; i<ien ; i++ ) {\n\t\t\tbutton = buttons[i];\n\n\t\t\tif ( $.isArray( button ) ) {\n\t\t\t\tattach( container, button );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbtnDisplay = '';\n\t\t\t\tbtnClass = '';\n\n\t\t\t\tswitch ( button ) {\n\t\t\t\t\tcase 'ellipsis':\n\t\t\t\t\t\tbtnDisplay = '&#x2026;';\n\t\t\t\t\t\tbtnClass = 'disabled';\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'first':\n\t\t\t\t\t\tbtnDisplay = lang.sFirst;\n\t\t\t\t\t\tbtnClass = button + (page > 0 ?\n\t\t\t\t\t\t\t'' : ' disabled');\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'previous':\n\t\t\t\t\t\tbtnDisplay = lang.sPrevious;\n\t\t\t\t\t\tbtnClass = button + (page > 0 ?\n\t\t\t\t\t\t\t'' : ' disabled');\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'next':\n\t\t\t\t\t\tbtnDisplay = lang.sNext;\n\t\t\t\t\t\tbtnClass = button + (page < pages-1 ?\n\t\t\t\t\t\t\t'' : ' disabled');\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'last':\n\t\t\t\t\t\tbtnDisplay = lang.sLast;\n\t\t\t\t\t\tbtnClass = button + (page < pages-1 ?\n\t\t\t\t\t\t\t'' : ' disabled');\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbtnDisplay = button + 1;\n\t\t\t\t\t\tbtnClass = page === button ?\n\t\t\t\t\t\t\t'active' : '';\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif ( btnDisplay ) {\n\t\t\t\t\tnode = $('<li>', {\n\t\t\t\t\t\t\t'class': classes.sPageButton+' '+btnClass,\n\t\t\t\t\t\t\t'id': idx === 0 && typeof button === 'string' ?\n\t\t\t\t\t\t\t\tsettings.sTableId +'_'+ button :\n\t\t\t\t\t\t\t\tnull\n\t\t\t\t\t\t} )\n\t\t\t\t\t\t.append( $('<a>', {\n\t\t\t\t\t\t\t\t'href': '#',\n\t\t\t\t\t\t\t\t'aria-controls': settings.sTableId,\n\t\t\t\t\t\t\t\t'aria-label': aria[ button ],\n\t\t\t\t\t\t\t\t'data-dt-idx': counter,\n\t\t\t\t\t\t\t\t'tabindex': settings.iTabIndex,\n\t\t\t\t\t\t\t\t'class': 'page-link'\n\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t.html( btnDisplay )\n\t\t\t\t\t\t)\n\t\t\t\t\t\t.appendTo( container );\n\n\t\t\t\t\tsettings.oApi._fnBindAction(\n\t\t\t\t\t\tnode, {action: button}, clickHandler\n\t\t\t\t\t);\n\n\t\t\t\t\tcounter++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\t// IE9 throws an 'unknown error' if document.activeElement is used\n\t// inside an iframe or frame. \n\tvar activeEl;\n\n\ttry {\n\t\t// Because this approach is destroying and recreating the paging\n\t\t// elements, focus is lost on the select button which is bad for\n\t\t// accessibility. So we want to restore focus once the draw has\n\t\t// completed\n\t\tactiveEl = $(host).find(document.activeElement).data('dt-idx');\n\t}\n\tcatch (e) {}\n\n\tattach(\n\t\t$(host).empty().html('<ul class=\"pagination\"/>').children('ul'),\n\t\tbuttons\n\t);\n\n\tif ( activeEl !== undefined ) {\n\t\t$(host).find( '[data-dt-idx='+activeEl+']' ).focus();\n\t}\n};\n\n\nreturn DataTable;\n}));\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n"],"sourceRoot":""}